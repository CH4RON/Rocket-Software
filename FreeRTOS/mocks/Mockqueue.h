/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKQUEUE_H
#define _MOCKQUEUE_H

#include "FreeRTOS.h"
#include "queue.h"
#include "unity.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockqueue_Init(void);
void Mockqueue_Destroy(void);
void Mockqueue_Verify(void);

#define xQueueGenericSend_IgnoreAndReturn(cmock_retval) xQueueGenericSend_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueGenericSend_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueGenericSend_ExpectAnyArgsAndReturn(cmock_retval) xQueueGenericSend_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueGenericSend_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueGenericSend_ExpectAndReturn(xQueue, pvItemToQueue, xTicksToWait, xCopyPosition, cmock_retval) xQueueGenericSend_CMockExpectAndReturn(__LINE__, xQueue, pvItemToQueue, xTicksToWait, xCopyPosition, cmock_retval)
void xQueueGenericSend_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, const void* const pvItemToQueue, TickType_t xTicksToWait, const BaseType_t xCopyPosition, BaseType_t cmock_to_return);
#define xQueueGenericSend_ExpectWithArrayAndReturn(xQueue, pvItemToQueue, pvItemToQueue_Depth, xTicksToWait, xCopyPosition, cmock_retval) xQueueGenericSend_CMockExpectWithArrayAndReturn(__LINE__, xQueue, pvItemToQueue, pvItemToQueue_Depth, xTicksToWait, xCopyPosition, cmock_retval)
void xQueueGenericSend_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, const void* const pvItemToQueue, int pvItemToQueue_Depth, TickType_t xTicksToWait, const BaseType_t xCopyPosition, BaseType_t cmock_to_return);
#define xQueueGenericSend_IgnoreArg_xQueue() xQueueGenericSend_CMockIgnoreArg_xQueue(__LINE__)
void xQueueGenericSend_CMockIgnoreArg_xQueue(UNITY_LINE_TYPE cmock_line);
#define xQueueGenericSend_IgnoreArg_pvItemToQueue() xQueueGenericSend_CMockIgnoreArg_pvItemToQueue(__LINE__)
void xQueueGenericSend_CMockIgnoreArg_pvItemToQueue(UNITY_LINE_TYPE cmock_line);
#define xQueueGenericSend_IgnoreArg_xTicksToWait() xQueueGenericSend_CMockIgnoreArg_xTicksToWait(__LINE__)
void xQueueGenericSend_CMockIgnoreArg_xTicksToWait(UNITY_LINE_TYPE cmock_line);
#define xQueueGenericSend_IgnoreArg_xCopyPosition() xQueueGenericSend_CMockIgnoreArg_xCopyPosition(__LINE__)
void xQueueGenericSend_CMockIgnoreArg_xCopyPosition(UNITY_LINE_TYPE cmock_line);
#define xQueuePeek_IgnoreAndReturn(cmock_retval) xQueuePeek_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueuePeek_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueuePeek_ExpectAnyArgsAndReturn(cmock_retval) xQueuePeek_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueuePeek_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueuePeek_ExpectAndReturn(xQueue, pvBuffer, xTicksToWait, cmock_retval) xQueuePeek_CMockExpectAndReturn(__LINE__, xQueue, pvBuffer, xTicksToWait, cmock_retval)
void xQueuePeek_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, void* const pvBuffer, TickType_t xTicksToWait, BaseType_t cmock_to_return);
#define xQueuePeek_ExpectWithArrayAndReturn(xQueue, pvBuffer, pvBuffer_Depth, xTicksToWait, cmock_retval) xQueuePeek_CMockExpectWithArrayAndReturn(__LINE__, xQueue, pvBuffer, pvBuffer_Depth, xTicksToWait, cmock_retval)
void xQueuePeek_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, void* const pvBuffer, int pvBuffer_Depth, TickType_t xTicksToWait, BaseType_t cmock_to_return);
#define xQueuePeek_IgnoreArg_xQueue() xQueuePeek_CMockIgnoreArg_xQueue(__LINE__)
void xQueuePeek_CMockIgnoreArg_xQueue(UNITY_LINE_TYPE cmock_line);
#define xQueuePeek_IgnoreArg_pvBuffer() xQueuePeek_CMockIgnoreArg_pvBuffer(__LINE__)
void xQueuePeek_CMockIgnoreArg_pvBuffer(UNITY_LINE_TYPE cmock_line);
#define xQueuePeek_IgnoreArg_xTicksToWait() xQueuePeek_CMockIgnoreArg_xTicksToWait(__LINE__)
void xQueuePeek_CMockIgnoreArg_xTicksToWait(UNITY_LINE_TYPE cmock_line);
#define xQueuePeekFromISR_IgnoreAndReturn(cmock_retval) xQueuePeekFromISR_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueuePeekFromISR_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueuePeekFromISR_ExpectAnyArgsAndReturn(cmock_retval) xQueuePeekFromISR_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueuePeekFromISR_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueuePeekFromISR_ExpectAndReturn(xQueue, pvBuffer, cmock_retval) xQueuePeekFromISR_CMockExpectAndReturn(__LINE__, xQueue, pvBuffer, cmock_retval)
void xQueuePeekFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, void* const pvBuffer, BaseType_t cmock_to_return);
#define xQueuePeekFromISR_ExpectWithArrayAndReturn(xQueue, pvBuffer, pvBuffer_Depth, cmock_retval) xQueuePeekFromISR_CMockExpectWithArrayAndReturn(__LINE__, xQueue, pvBuffer, pvBuffer_Depth, cmock_retval)
void xQueuePeekFromISR_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, void* const pvBuffer, int pvBuffer_Depth, BaseType_t cmock_to_return);
#define xQueuePeekFromISR_IgnoreArg_xQueue() xQueuePeekFromISR_CMockIgnoreArg_xQueue(__LINE__)
void xQueuePeekFromISR_CMockIgnoreArg_xQueue(UNITY_LINE_TYPE cmock_line);
#define xQueuePeekFromISR_IgnoreArg_pvBuffer() xQueuePeekFromISR_CMockIgnoreArg_pvBuffer(__LINE__)
void xQueuePeekFromISR_CMockIgnoreArg_pvBuffer(UNITY_LINE_TYPE cmock_line);
#define xQueueReceive_IgnoreAndReturn(cmock_retval) xQueueReceive_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueReceive_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueReceive_ExpectAnyArgsAndReturn(cmock_retval) xQueueReceive_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueReceive_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueReceive_ExpectAndReturn(xQueue, pvBuffer, xTicksToWait, cmock_retval) xQueueReceive_CMockExpectAndReturn(__LINE__, xQueue, pvBuffer, xTicksToWait, cmock_retval)
void xQueueReceive_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, void* const pvBuffer, TickType_t xTicksToWait, BaseType_t cmock_to_return);
#define xQueueReceive_ExpectWithArrayAndReturn(xQueue, pvBuffer, pvBuffer_Depth, xTicksToWait, cmock_retval) xQueueReceive_CMockExpectWithArrayAndReturn(__LINE__, xQueue, pvBuffer, pvBuffer_Depth, xTicksToWait, cmock_retval)
void xQueueReceive_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, void* const pvBuffer, int pvBuffer_Depth, TickType_t xTicksToWait, BaseType_t cmock_to_return);
#define xQueueReceive_IgnoreArg_xQueue() xQueueReceive_CMockIgnoreArg_xQueue(__LINE__)
void xQueueReceive_CMockIgnoreArg_xQueue(UNITY_LINE_TYPE cmock_line);
#define xQueueReceive_IgnoreArg_pvBuffer() xQueueReceive_CMockIgnoreArg_pvBuffer(__LINE__)
void xQueueReceive_CMockIgnoreArg_pvBuffer(UNITY_LINE_TYPE cmock_line);
#define xQueueReceive_IgnoreArg_xTicksToWait() xQueueReceive_CMockIgnoreArg_xTicksToWait(__LINE__)
void xQueueReceive_CMockIgnoreArg_xTicksToWait(UNITY_LINE_TYPE cmock_line);
#define uxQueueMessagesWaiting_IgnoreAndReturn(cmock_retval) uxQueueMessagesWaiting_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void uxQueueMessagesWaiting_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, UBaseType_t cmock_to_return);
#define uxQueueMessagesWaiting_ExpectAnyArgsAndReturn(cmock_retval) uxQueueMessagesWaiting_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void uxQueueMessagesWaiting_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, UBaseType_t cmock_to_return);
#define uxQueueMessagesWaiting_ExpectAndReturn(xQueue, cmock_retval) uxQueueMessagesWaiting_CMockExpectAndReturn(__LINE__, xQueue, cmock_retval)
void uxQueueMessagesWaiting_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const QueueHandle_t xQueue, UBaseType_t cmock_to_return);
#define uxQueueMessagesWaiting_IgnoreArg_xQueue() uxQueueMessagesWaiting_CMockIgnoreArg_xQueue(__LINE__)
void uxQueueMessagesWaiting_CMockIgnoreArg_xQueue(UNITY_LINE_TYPE cmock_line);
#define uxQueueSpacesAvailable_IgnoreAndReturn(cmock_retval) uxQueueSpacesAvailable_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void uxQueueSpacesAvailable_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, UBaseType_t cmock_to_return);
#define uxQueueSpacesAvailable_ExpectAnyArgsAndReturn(cmock_retval) uxQueueSpacesAvailable_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void uxQueueSpacesAvailable_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, UBaseType_t cmock_to_return);
#define uxQueueSpacesAvailable_ExpectAndReturn(xQueue, cmock_retval) uxQueueSpacesAvailable_CMockExpectAndReturn(__LINE__, xQueue, cmock_retval)
void uxQueueSpacesAvailable_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const QueueHandle_t xQueue, UBaseType_t cmock_to_return);
#define uxQueueSpacesAvailable_IgnoreArg_xQueue() uxQueueSpacesAvailable_CMockIgnoreArg_xQueue(__LINE__)
void uxQueueSpacesAvailable_CMockIgnoreArg_xQueue(UNITY_LINE_TYPE cmock_line);
#define vQueueDelete_Ignore() vQueueDelete_CMockIgnore()
void vQueueDelete_CMockIgnore(void);
#define vQueueDelete_ExpectAnyArgs() vQueueDelete_CMockExpectAnyArgs(__LINE__)
void vQueueDelete_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vQueueDelete_Expect(xQueue) vQueueDelete_CMockExpect(__LINE__, xQueue)
void vQueueDelete_CMockExpect(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue);
#define vQueueDelete_IgnoreArg_xQueue() vQueueDelete_CMockIgnoreArg_xQueue(__LINE__)
void vQueueDelete_CMockIgnoreArg_xQueue(UNITY_LINE_TYPE cmock_line);
#define xQueueGenericSendFromISR_IgnoreAndReturn(cmock_retval) xQueueGenericSendFromISR_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueGenericSendFromISR_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueGenericSendFromISR_ExpectAnyArgsAndReturn(cmock_retval) xQueueGenericSendFromISR_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueGenericSendFromISR_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueGenericSendFromISR_ExpectAndReturn(xQueue, pvItemToQueue, pxHigherPriorityTaskWoken, xCopyPosition, cmock_retval) xQueueGenericSendFromISR_CMockExpectAndReturn(__LINE__, xQueue, pvItemToQueue, pxHigherPriorityTaskWoken, xCopyPosition, cmock_retval)
void xQueueGenericSendFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, const void* const pvItemToQueue, BaseType_t* const pxHigherPriorityTaskWoken, const BaseType_t xCopyPosition, BaseType_t cmock_to_return);
#define xQueueGenericSendFromISR_ExpectWithArrayAndReturn(xQueue, pvItemToQueue, pvItemToQueue_Depth, pxHigherPriorityTaskWoken, pxHigherPriorityTaskWoken_Depth, xCopyPosition, cmock_retval) xQueueGenericSendFromISR_CMockExpectWithArrayAndReturn(__LINE__, xQueue, pvItemToQueue, pvItemToQueue_Depth, pxHigherPriorityTaskWoken, pxHigherPriorityTaskWoken_Depth, xCopyPosition, cmock_retval)
void xQueueGenericSendFromISR_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, const void* const pvItemToQueue, int pvItemToQueue_Depth, BaseType_t* const pxHigherPriorityTaskWoken, int pxHigherPriorityTaskWoken_Depth, const BaseType_t xCopyPosition, BaseType_t cmock_to_return);
#define xQueueGenericSendFromISR_IgnoreArg_xQueue() xQueueGenericSendFromISR_CMockIgnoreArg_xQueue(__LINE__)
void xQueueGenericSendFromISR_CMockIgnoreArg_xQueue(UNITY_LINE_TYPE cmock_line);
#define xQueueGenericSendFromISR_IgnoreArg_pvItemToQueue() xQueueGenericSendFromISR_CMockIgnoreArg_pvItemToQueue(__LINE__)
void xQueueGenericSendFromISR_CMockIgnoreArg_pvItemToQueue(UNITY_LINE_TYPE cmock_line);
#define xQueueGenericSendFromISR_IgnoreArg_pxHigherPriorityTaskWoken() xQueueGenericSendFromISR_CMockIgnoreArg_pxHigherPriorityTaskWoken(__LINE__)
void xQueueGenericSendFromISR_CMockIgnoreArg_pxHigherPriorityTaskWoken(UNITY_LINE_TYPE cmock_line);
#define xQueueGenericSendFromISR_IgnoreArg_xCopyPosition() xQueueGenericSendFromISR_CMockIgnoreArg_xCopyPosition(__LINE__)
void xQueueGenericSendFromISR_CMockIgnoreArg_xCopyPosition(UNITY_LINE_TYPE cmock_line);
#define xQueueGiveFromISR_IgnoreAndReturn(cmock_retval) xQueueGiveFromISR_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueGiveFromISR_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueGiveFromISR_ExpectAnyArgsAndReturn(cmock_retval) xQueueGiveFromISR_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueGiveFromISR_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueGiveFromISR_ExpectAndReturn(xQueue, pxHigherPriorityTaskWoken, cmock_retval) xQueueGiveFromISR_CMockExpectAndReturn(__LINE__, xQueue, pxHigherPriorityTaskWoken, cmock_retval)
void xQueueGiveFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, BaseType_t* const pxHigherPriorityTaskWoken, BaseType_t cmock_to_return);
#define xQueueGiveFromISR_ExpectWithArrayAndReturn(xQueue, pxHigherPriorityTaskWoken, pxHigherPriorityTaskWoken_Depth, cmock_retval) xQueueGiveFromISR_CMockExpectWithArrayAndReturn(__LINE__, xQueue, pxHigherPriorityTaskWoken, pxHigherPriorityTaskWoken_Depth, cmock_retval)
void xQueueGiveFromISR_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, BaseType_t* const pxHigherPriorityTaskWoken, int pxHigherPriorityTaskWoken_Depth, BaseType_t cmock_to_return);
#define xQueueGiveFromISR_IgnoreArg_xQueue() xQueueGiveFromISR_CMockIgnoreArg_xQueue(__LINE__)
void xQueueGiveFromISR_CMockIgnoreArg_xQueue(UNITY_LINE_TYPE cmock_line);
#define xQueueGiveFromISR_IgnoreArg_pxHigherPriorityTaskWoken() xQueueGiveFromISR_CMockIgnoreArg_pxHigherPriorityTaskWoken(__LINE__)
void xQueueGiveFromISR_CMockIgnoreArg_pxHigherPriorityTaskWoken(UNITY_LINE_TYPE cmock_line);
#define xQueueReceiveFromISR_IgnoreAndReturn(cmock_retval) xQueueReceiveFromISR_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueReceiveFromISR_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueReceiveFromISR_ExpectAnyArgsAndReturn(cmock_retval) xQueueReceiveFromISR_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueReceiveFromISR_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueReceiveFromISR_ExpectAndReturn(xQueue, pvBuffer, pxHigherPriorityTaskWoken, cmock_retval) xQueueReceiveFromISR_CMockExpectAndReturn(__LINE__, xQueue, pvBuffer, pxHigherPriorityTaskWoken, cmock_retval)
void xQueueReceiveFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, void* const pvBuffer, BaseType_t* const pxHigherPriorityTaskWoken, BaseType_t cmock_to_return);
#define xQueueReceiveFromISR_ExpectWithArrayAndReturn(xQueue, pvBuffer, pvBuffer_Depth, pxHigherPriorityTaskWoken, pxHigherPriorityTaskWoken_Depth, cmock_retval) xQueueReceiveFromISR_CMockExpectWithArrayAndReturn(__LINE__, xQueue, pvBuffer, pvBuffer_Depth, pxHigherPriorityTaskWoken, pxHigherPriorityTaskWoken_Depth, cmock_retval)
void xQueueReceiveFromISR_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, void* const pvBuffer, int pvBuffer_Depth, BaseType_t* const pxHigherPriorityTaskWoken, int pxHigherPriorityTaskWoken_Depth, BaseType_t cmock_to_return);
#define xQueueReceiveFromISR_IgnoreArg_xQueue() xQueueReceiveFromISR_CMockIgnoreArg_xQueue(__LINE__)
void xQueueReceiveFromISR_CMockIgnoreArg_xQueue(UNITY_LINE_TYPE cmock_line);
#define xQueueReceiveFromISR_IgnoreArg_pvBuffer() xQueueReceiveFromISR_CMockIgnoreArg_pvBuffer(__LINE__)
void xQueueReceiveFromISR_CMockIgnoreArg_pvBuffer(UNITY_LINE_TYPE cmock_line);
#define xQueueReceiveFromISR_IgnoreArg_pxHigherPriorityTaskWoken() xQueueReceiveFromISR_CMockIgnoreArg_pxHigherPriorityTaskWoken(__LINE__)
void xQueueReceiveFromISR_CMockIgnoreArg_pxHigherPriorityTaskWoken(UNITY_LINE_TYPE cmock_line);
#define xQueueIsQueueEmptyFromISR_IgnoreAndReturn(cmock_retval) xQueueIsQueueEmptyFromISR_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueIsQueueEmptyFromISR_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueIsQueueEmptyFromISR_ExpectAnyArgsAndReturn(cmock_retval) xQueueIsQueueEmptyFromISR_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueIsQueueEmptyFromISR_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueIsQueueEmptyFromISR_ExpectAndReturn(xQueue, cmock_retval) xQueueIsQueueEmptyFromISR_CMockExpectAndReturn(__LINE__, xQueue, cmock_retval)
void xQueueIsQueueEmptyFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const QueueHandle_t xQueue, BaseType_t cmock_to_return);
#define xQueueIsQueueEmptyFromISR_IgnoreArg_xQueue() xQueueIsQueueEmptyFromISR_CMockIgnoreArg_xQueue(__LINE__)
void xQueueIsQueueEmptyFromISR_CMockIgnoreArg_xQueue(UNITY_LINE_TYPE cmock_line);
#define xQueueIsQueueFullFromISR_IgnoreAndReturn(cmock_retval) xQueueIsQueueFullFromISR_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueIsQueueFullFromISR_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueIsQueueFullFromISR_ExpectAnyArgsAndReturn(cmock_retval) xQueueIsQueueFullFromISR_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueIsQueueFullFromISR_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueIsQueueFullFromISR_ExpectAndReturn(xQueue, cmock_retval) xQueueIsQueueFullFromISR_CMockExpectAndReturn(__LINE__, xQueue, cmock_retval)
void xQueueIsQueueFullFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const QueueHandle_t xQueue, BaseType_t cmock_to_return);
#define xQueueIsQueueFullFromISR_IgnoreArg_xQueue() xQueueIsQueueFullFromISR_CMockIgnoreArg_xQueue(__LINE__)
void xQueueIsQueueFullFromISR_CMockIgnoreArg_xQueue(UNITY_LINE_TYPE cmock_line);
#define uxQueueMessagesWaitingFromISR_IgnoreAndReturn(cmock_retval) uxQueueMessagesWaitingFromISR_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void uxQueueMessagesWaitingFromISR_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, UBaseType_t cmock_to_return);
#define uxQueueMessagesWaitingFromISR_ExpectAnyArgsAndReturn(cmock_retval) uxQueueMessagesWaitingFromISR_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void uxQueueMessagesWaitingFromISR_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, UBaseType_t cmock_to_return);
#define uxQueueMessagesWaitingFromISR_ExpectAndReturn(xQueue, cmock_retval) uxQueueMessagesWaitingFromISR_CMockExpectAndReturn(__LINE__, xQueue, cmock_retval)
void uxQueueMessagesWaitingFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const QueueHandle_t xQueue, UBaseType_t cmock_to_return);
#define uxQueueMessagesWaitingFromISR_IgnoreArg_xQueue() uxQueueMessagesWaitingFromISR_CMockIgnoreArg_xQueue(__LINE__)
void uxQueueMessagesWaitingFromISR_CMockIgnoreArg_xQueue(UNITY_LINE_TYPE cmock_line);
#define xQueueCRSendFromISR_IgnoreAndReturn(cmock_retval) xQueueCRSendFromISR_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueCRSendFromISR_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueCRSendFromISR_ExpectAnyArgsAndReturn(cmock_retval) xQueueCRSendFromISR_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueCRSendFromISR_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueCRSendFromISR_ExpectAndReturn(xQueue, pvItemToQueue, xCoRoutinePreviouslyWoken, cmock_retval) xQueueCRSendFromISR_CMockExpectAndReturn(__LINE__, xQueue, pvItemToQueue, xCoRoutinePreviouslyWoken, cmock_retval)
void xQueueCRSendFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, const void* pvItemToQueue, BaseType_t xCoRoutinePreviouslyWoken, BaseType_t cmock_to_return);
#define xQueueCRSendFromISR_ExpectWithArrayAndReturn(xQueue, pvItemToQueue, pvItemToQueue_Depth, xCoRoutinePreviouslyWoken, cmock_retval) xQueueCRSendFromISR_CMockExpectWithArrayAndReturn(__LINE__, xQueue, pvItemToQueue, pvItemToQueue_Depth, xCoRoutinePreviouslyWoken, cmock_retval)
void xQueueCRSendFromISR_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, const void* pvItemToQueue, int pvItemToQueue_Depth, BaseType_t xCoRoutinePreviouslyWoken, BaseType_t cmock_to_return);
#define xQueueCRSendFromISR_IgnoreArg_xQueue() xQueueCRSendFromISR_CMockIgnoreArg_xQueue(__LINE__)
void xQueueCRSendFromISR_CMockIgnoreArg_xQueue(UNITY_LINE_TYPE cmock_line);
#define xQueueCRSendFromISR_IgnoreArg_pvItemToQueue() xQueueCRSendFromISR_CMockIgnoreArg_pvItemToQueue(__LINE__)
void xQueueCRSendFromISR_CMockIgnoreArg_pvItemToQueue(UNITY_LINE_TYPE cmock_line);
#define xQueueCRSendFromISR_IgnoreArg_xCoRoutinePreviouslyWoken() xQueueCRSendFromISR_CMockIgnoreArg_xCoRoutinePreviouslyWoken(__LINE__)
void xQueueCRSendFromISR_CMockIgnoreArg_xCoRoutinePreviouslyWoken(UNITY_LINE_TYPE cmock_line);
#define xQueueCRReceiveFromISR_IgnoreAndReturn(cmock_retval) xQueueCRReceiveFromISR_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueCRReceiveFromISR_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueCRReceiveFromISR_ExpectAnyArgsAndReturn(cmock_retval) xQueueCRReceiveFromISR_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueCRReceiveFromISR_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueCRReceiveFromISR_ExpectAndReturn(xQueue, pvBuffer, pxTaskWoken, cmock_retval) xQueueCRReceiveFromISR_CMockExpectAndReturn(__LINE__, xQueue, pvBuffer, pxTaskWoken, cmock_retval)
void xQueueCRReceiveFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, void* pvBuffer, BaseType_t* pxTaskWoken, BaseType_t cmock_to_return);
#define xQueueCRReceiveFromISR_ExpectWithArrayAndReturn(xQueue, pvBuffer, pvBuffer_Depth, pxTaskWoken, pxTaskWoken_Depth, cmock_retval) xQueueCRReceiveFromISR_CMockExpectWithArrayAndReturn(__LINE__, xQueue, pvBuffer, pvBuffer_Depth, pxTaskWoken, pxTaskWoken_Depth, cmock_retval)
void xQueueCRReceiveFromISR_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, void* pvBuffer, int pvBuffer_Depth, BaseType_t* pxTaskWoken, int pxTaskWoken_Depth, BaseType_t cmock_to_return);
#define xQueueCRReceiveFromISR_IgnoreArg_xQueue() xQueueCRReceiveFromISR_CMockIgnoreArg_xQueue(__LINE__)
void xQueueCRReceiveFromISR_CMockIgnoreArg_xQueue(UNITY_LINE_TYPE cmock_line);
#define xQueueCRReceiveFromISR_IgnoreArg_pvBuffer() xQueueCRReceiveFromISR_CMockIgnoreArg_pvBuffer(__LINE__)
void xQueueCRReceiveFromISR_CMockIgnoreArg_pvBuffer(UNITY_LINE_TYPE cmock_line);
#define xQueueCRReceiveFromISR_IgnoreArg_pxTaskWoken() xQueueCRReceiveFromISR_CMockIgnoreArg_pxTaskWoken(__LINE__)
void xQueueCRReceiveFromISR_CMockIgnoreArg_pxTaskWoken(UNITY_LINE_TYPE cmock_line);
#define xQueueCRSend_IgnoreAndReturn(cmock_retval) xQueueCRSend_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueCRSend_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueCRSend_ExpectAnyArgsAndReturn(cmock_retval) xQueueCRSend_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueCRSend_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueCRSend_ExpectAndReturn(xQueue, pvItemToQueue, xTicksToWait, cmock_retval) xQueueCRSend_CMockExpectAndReturn(__LINE__, xQueue, pvItemToQueue, xTicksToWait, cmock_retval)
void xQueueCRSend_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, const void* pvItemToQueue, TickType_t xTicksToWait, BaseType_t cmock_to_return);
#define xQueueCRSend_ExpectWithArrayAndReturn(xQueue, pvItemToQueue, pvItemToQueue_Depth, xTicksToWait, cmock_retval) xQueueCRSend_CMockExpectWithArrayAndReturn(__LINE__, xQueue, pvItemToQueue, pvItemToQueue_Depth, xTicksToWait, cmock_retval)
void xQueueCRSend_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, const void* pvItemToQueue, int pvItemToQueue_Depth, TickType_t xTicksToWait, BaseType_t cmock_to_return);
#define xQueueCRSend_IgnoreArg_xQueue() xQueueCRSend_CMockIgnoreArg_xQueue(__LINE__)
void xQueueCRSend_CMockIgnoreArg_xQueue(UNITY_LINE_TYPE cmock_line);
#define xQueueCRSend_IgnoreArg_pvItemToQueue() xQueueCRSend_CMockIgnoreArg_pvItemToQueue(__LINE__)
void xQueueCRSend_CMockIgnoreArg_pvItemToQueue(UNITY_LINE_TYPE cmock_line);
#define xQueueCRSend_IgnoreArg_xTicksToWait() xQueueCRSend_CMockIgnoreArg_xTicksToWait(__LINE__)
void xQueueCRSend_CMockIgnoreArg_xTicksToWait(UNITY_LINE_TYPE cmock_line);
#define xQueueCRReceive_IgnoreAndReturn(cmock_retval) xQueueCRReceive_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueCRReceive_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueCRReceive_ExpectAnyArgsAndReturn(cmock_retval) xQueueCRReceive_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueCRReceive_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueCRReceive_ExpectAndReturn(xQueue, pvBuffer, xTicksToWait, cmock_retval) xQueueCRReceive_CMockExpectAndReturn(__LINE__, xQueue, pvBuffer, xTicksToWait, cmock_retval)
void xQueueCRReceive_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, void* pvBuffer, TickType_t xTicksToWait, BaseType_t cmock_to_return);
#define xQueueCRReceive_ExpectWithArrayAndReturn(xQueue, pvBuffer, pvBuffer_Depth, xTicksToWait, cmock_retval) xQueueCRReceive_CMockExpectWithArrayAndReturn(__LINE__, xQueue, pvBuffer, pvBuffer_Depth, xTicksToWait, cmock_retval)
void xQueueCRReceive_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, void* pvBuffer, int pvBuffer_Depth, TickType_t xTicksToWait, BaseType_t cmock_to_return);
#define xQueueCRReceive_IgnoreArg_xQueue() xQueueCRReceive_CMockIgnoreArg_xQueue(__LINE__)
void xQueueCRReceive_CMockIgnoreArg_xQueue(UNITY_LINE_TYPE cmock_line);
#define xQueueCRReceive_IgnoreArg_pvBuffer() xQueueCRReceive_CMockIgnoreArg_pvBuffer(__LINE__)
void xQueueCRReceive_CMockIgnoreArg_pvBuffer(UNITY_LINE_TYPE cmock_line);
#define xQueueCRReceive_IgnoreArg_xTicksToWait() xQueueCRReceive_CMockIgnoreArg_xTicksToWait(__LINE__)
void xQueueCRReceive_CMockIgnoreArg_xTicksToWait(UNITY_LINE_TYPE cmock_line);
#define xQueueCreateMutex_IgnoreAndReturn(cmock_retval) xQueueCreateMutex_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueCreateMutex_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t cmock_to_return);
#define xQueueCreateMutex_ExpectAnyArgsAndReturn(cmock_retval) xQueueCreateMutex_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueCreateMutex_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t cmock_to_return);
#define xQueueCreateMutex_ExpectAndReturn(ucQueueType, cmock_retval) xQueueCreateMutex_CMockExpectAndReturn(__LINE__, ucQueueType, cmock_retval)
void xQueueCreateMutex_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const uint8_t ucQueueType, QueueHandle_t cmock_to_return);
#define xQueueCreateMutex_IgnoreArg_ucQueueType() xQueueCreateMutex_CMockIgnoreArg_ucQueueType(__LINE__)
void xQueueCreateMutex_CMockIgnoreArg_ucQueueType(UNITY_LINE_TYPE cmock_line);
#define xQueueCreateMutexStatic_IgnoreAndReturn(cmock_retval) xQueueCreateMutexStatic_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueCreateMutexStatic_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t cmock_to_return);
#define xQueueCreateMutexStatic_ExpectAnyArgsAndReturn(cmock_retval) xQueueCreateMutexStatic_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueCreateMutexStatic_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t cmock_to_return);
#define xQueueCreateMutexStatic_ExpectAndReturn(ucQueueType, pxStaticQueue, cmock_retval) xQueueCreateMutexStatic_CMockExpectAndReturn(__LINE__, ucQueueType, pxStaticQueue, cmock_retval)
void xQueueCreateMutexStatic_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const uint8_t ucQueueType, StaticQueue_t* pxStaticQueue, QueueHandle_t cmock_to_return);
#define xQueueCreateMutexStatic_ExpectWithArrayAndReturn(ucQueueType, pxStaticQueue, pxStaticQueue_Depth, cmock_retval) xQueueCreateMutexStatic_CMockExpectWithArrayAndReturn(__LINE__, ucQueueType, pxStaticQueue, pxStaticQueue_Depth, cmock_retval)
void xQueueCreateMutexStatic_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const uint8_t ucQueueType, StaticQueue_t* pxStaticQueue, int pxStaticQueue_Depth, QueueHandle_t cmock_to_return);
#define xQueueCreateMutexStatic_IgnoreArg_ucQueueType() xQueueCreateMutexStatic_CMockIgnoreArg_ucQueueType(__LINE__)
void xQueueCreateMutexStatic_CMockIgnoreArg_ucQueueType(UNITY_LINE_TYPE cmock_line);
#define xQueueCreateMutexStatic_IgnoreArg_pxStaticQueue() xQueueCreateMutexStatic_CMockIgnoreArg_pxStaticQueue(__LINE__)
void xQueueCreateMutexStatic_CMockIgnoreArg_pxStaticQueue(UNITY_LINE_TYPE cmock_line);
#define xQueueCreateCountingSemaphore_IgnoreAndReturn(cmock_retval) xQueueCreateCountingSemaphore_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueCreateCountingSemaphore_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t cmock_to_return);
#define xQueueCreateCountingSemaphore_ExpectAnyArgsAndReturn(cmock_retval) xQueueCreateCountingSemaphore_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueCreateCountingSemaphore_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t cmock_to_return);
#define xQueueCreateCountingSemaphore_ExpectAndReturn(uxMaxCount, uxInitialCount, cmock_retval) xQueueCreateCountingSemaphore_CMockExpectAndReturn(__LINE__, uxMaxCount, uxInitialCount, cmock_retval)
void xQueueCreateCountingSemaphore_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount, QueueHandle_t cmock_to_return);
#define xQueueCreateCountingSemaphore_IgnoreArg_uxMaxCount() xQueueCreateCountingSemaphore_CMockIgnoreArg_uxMaxCount(__LINE__)
void xQueueCreateCountingSemaphore_CMockIgnoreArg_uxMaxCount(UNITY_LINE_TYPE cmock_line);
#define xQueueCreateCountingSemaphore_IgnoreArg_uxInitialCount() xQueueCreateCountingSemaphore_CMockIgnoreArg_uxInitialCount(__LINE__)
void xQueueCreateCountingSemaphore_CMockIgnoreArg_uxInitialCount(UNITY_LINE_TYPE cmock_line);
#define xQueueCreateCountingSemaphoreStatic_IgnoreAndReturn(cmock_retval) xQueueCreateCountingSemaphoreStatic_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueCreateCountingSemaphoreStatic_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t cmock_to_return);
#define xQueueCreateCountingSemaphoreStatic_ExpectAnyArgsAndReturn(cmock_retval) xQueueCreateCountingSemaphoreStatic_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueCreateCountingSemaphoreStatic_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t cmock_to_return);
#define xQueueCreateCountingSemaphoreStatic_ExpectAndReturn(uxMaxCount, uxInitialCount, pxStaticQueue, cmock_retval) xQueueCreateCountingSemaphoreStatic_CMockExpectAndReturn(__LINE__, uxMaxCount, uxInitialCount, pxStaticQueue, cmock_retval)
void xQueueCreateCountingSemaphoreStatic_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount, StaticQueue_t* pxStaticQueue, QueueHandle_t cmock_to_return);
#define xQueueCreateCountingSemaphoreStatic_ExpectWithArrayAndReturn(uxMaxCount, uxInitialCount, pxStaticQueue, pxStaticQueue_Depth, cmock_retval) xQueueCreateCountingSemaphoreStatic_CMockExpectWithArrayAndReturn(__LINE__, uxMaxCount, uxInitialCount, pxStaticQueue, pxStaticQueue_Depth, cmock_retval)
void xQueueCreateCountingSemaphoreStatic_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount, StaticQueue_t* pxStaticQueue, int pxStaticQueue_Depth, QueueHandle_t cmock_to_return);
#define xQueueCreateCountingSemaphoreStatic_IgnoreArg_uxMaxCount() xQueueCreateCountingSemaphoreStatic_CMockIgnoreArg_uxMaxCount(__LINE__)
void xQueueCreateCountingSemaphoreStatic_CMockIgnoreArg_uxMaxCount(UNITY_LINE_TYPE cmock_line);
#define xQueueCreateCountingSemaphoreStatic_IgnoreArg_uxInitialCount() xQueueCreateCountingSemaphoreStatic_CMockIgnoreArg_uxInitialCount(__LINE__)
void xQueueCreateCountingSemaphoreStatic_CMockIgnoreArg_uxInitialCount(UNITY_LINE_TYPE cmock_line);
#define xQueueCreateCountingSemaphoreStatic_IgnoreArg_pxStaticQueue() xQueueCreateCountingSemaphoreStatic_CMockIgnoreArg_pxStaticQueue(__LINE__)
void xQueueCreateCountingSemaphoreStatic_CMockIgnoreArg_pxStaticQueue(UNITY_LINE_TYPE cmock_line);
#define xQueueSemaphoreTake_IgnoreAndReturn(cmock_retval) xQueueSemaphoreTake_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueSemaphoreTake_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueSemaphoreTake_ExpectAnyArgsAndReturn(cmock_retval) xQueueSemaphoreTake_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueSemaphoreTake_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueSemaphoreTake_ExpectAndReturn(xQueue, xTicksToWait, cmock_retval) xQueueSemaphoreTake_CMockExpectAndReturn(__LINE__, xQueue, xTicksToWait, cmock_retval)
void xQueueSemaphoreTake_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, TickType_t xTicksToWait, BaseType_t cmock_to_return);
#define xQueueSemaphoreTake_IgnoreArg_xQueue() xQueueSemaphoreTake_CMockIgnoreArg_xQueue(__LINE__)
void xQueueSemaphoreTake_CMockIgnoreArg_xQueue(UNITY_LINE_TYPE cmock_line);
#define xQueueSemaphoreTake_IgnoreArg_xTicksToWait() xQueueSemaphoreTake_CMockIgnoreArg_xTicksToWait(__LINE__)
void xQueueSemaphoreTake_CMockIgnoreArg_xTicksToWait(UNITY_LINE_TYPE cmock_line);
#define xQueueGetMutexHolder_IgnoreAndReturn(cmock_retval) xQueueGetMutexHolder_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueGetMutexHolder_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t cmock_to_return);
#define xQueueGetMutexHolder_ExpectAnyArgsAndReturn(cmock_retval) xQueueGetMutexHolder_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueGetMutexHolder_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t cmock_to_return);
#define xQueueGetMutexHolder_ExpectAndReturn(xSemaphore, cmock_retval) xQueueGetMutexHolder_CMockExpectAndReturn(__LINE__, xSemaphore, cmock_retval)
void xQueueGetMutexHolder_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xSemaphore, TaskHandle_t cmock_to_return);
#define xQueueGetMutexHolder_IgnoreArg_xSemaphore() xQueueGetMutexHolder_CMockIgnoreArg_xSemaphore(__LINE__)
void xQueueGetMutexHolder_CMockIgnoreArg_xSemaphore(UNITY_LINE_TYPE cmock_line);
#define xQueueGetMutexHolderFromISR_IgnoreAndReturn(cmock_retval) xQueueGetMutexHolderFromISR_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueGetMutexHolderFromISR_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t cmock_to_return);
#define xQueueGetMutexHolderFromISR_ExpectAnyArgsAndReturn(cmock_retval) xQueueGetMutexHolderFromISR_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueGetMutexHolderFromISR_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t cmock_to_return);
#define xQueueGetMutexHolderFromISR_ExpectAndReturn(xSemaphore, cmock_retval) xQueueGetMutexHolderFromISR_CMockExpectAndReturn(__LINE__, xSemaphore, cmock_retval)
void xQueueGetMutexHolderFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xSemaphore, TaskHandle_t cmock_to_return);
#define xQueueGetMutexHolderFromISR_IgnoreArg_xSemaphore() xQueueGetMutexHolderFromISR_CMockIgnoreArg_xSemaphore(__LINE__)
void xQueueGetMutexHolderFromISR_CMockIgnoreArg_xSemaphore(UNITY_LINE_TYPE cmock_line);
#define xQueueTakeMutexRecursive_IgnoreAndReturn(cmock_retval) xQueueTakeMutexRecursive_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueTakeMutexRecursive_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueTakeMutexRecursive_ExpectAnyArgsAndReturn(cmock_retval) xQueueTakeMutexRecursive_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueTakeMutexRecursive_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueTakeMutexRecursive_ExpectAndReturn(xMutex, xTicksToWait, cmock_retval) xQueueTakeMutexRecursive_CMockExpectAndReturn(__LINE__, xMutex, xTicksToWait, cmock_retval)
void xQueueTakeMutexRecursive_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xMutex, TickType_t xTicksToWait, BaseType_t cmock_to_return);
#define xQueueTakeMutexRecursive_IgnoreArg_xMutex() xQueueTakeMutexRecursive_CMockIgnoreArg_xMutex(__LINE__)
void xQueueTakeMutexRecursive_CMockIgnoreArg_xMutex(UNITY_LINE_TYPE cmock_line);
#define xQueueTakeMutexRecursive_IgnoreArg_xTicksToWait() xQueueTakeMutexRecursive_CMockIgnoreArg_xTicksToWait(__LINE__)
void xQueueTakeMutexRecursive_CMockIgnoreArg_xTicksToWait(UNITY_LINE_TYPE cmock_line);
#define xQueueGiveMutexRecursive_IgnoreAndReturn(cmock_retval) xQueueGiveMutexRecursive_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueGiveMutexRecursive_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueGiveMutexRecursive_ExpectAnyArgsAndReturn(cmock_retval) xQueueGiveMutexRecursive_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueGiveMutexRecursive_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueGiveMutexRecursive_ExpectAndReturn(xMutex, cmock_retval) xQueueGiveMutexRecursive_CMockExpectAndReturn(__LINE__, xMutex, cmock_retval)
void xQueueGiveMutexRecursive_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xMutex, BaseType_t cmock_to_return);
#define xQueueGiveMutexRecursive_IgnoreArg_xMutex() xQueueGiveMutexRecursive_CMockIgnoreArg_xMutex(__LINE__)
void xQueueGiveMutexRecursive_CMockIgnoreArg_xMutex(UNITY_LINE_TYPE cmock_line);
#define vQueueAddToRegistry_Ignore() vQueueAddToRegistry_CMockIgnore()
void vQueueAddToRegistry_CMockIgnore(void);
#define vQueueAddToRegistry_ExpectAnyArgs() vQueueAddToRegistry_CMockExpectAnyArgs(__LINE__)
void vQueueAddToRegistry_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vQueueAddToRegistry_Expect(xQueue, pcQueueName) vQueueAddToRegistry_CMockExpect(__LINE__, xQueue, pcQueueName)
void vQueueAddToRegistry_CMockExpect(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, const char* pcQueueName);
#define vQueueAddToRegistry_IgnoreArg_xQueue() vQueueAddToRegistry_CMockIgnoreArg_xQueue(__LINE__)
void vQueueAddToRegistry_CMockIgnoreArg_xQueue(UNITY_LINE_TYPE cmock_line);
#define vQueueAddToRegistry_IgnoreArg_pcQueueName() vQueueAddToRegistry_CMockIgnoreArg_pcQueueName(__LINE__)
void vQueueAddToRegistry_CMockIgnoreArg_pcQueueName(UNITY_LINE_TYPE cmock_line);
#define vQueueUnregisterQueue_Ignore() vQueueUnregisterQueue_CMockIgnore()
void vQueueUnregisterQueue_CMockIgnore(void);
#define vQueueUnregisterQueue_ExpectAnyArgs() vQueueUnregisterQueue_CMockExpectAnyArgs(__LINE__)
void vQueueUnregisterQueue_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vQueueUnregisterQueue_Expect(xQueue) vQueueUnregisterQueue_CMockExpect(__LINE__, xQueue)
void vQueueUnregisterQueue_CMockExpect(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue);
#define vQueueUnregisterQueue_IgnoreArg_xQueue() vQueueUnregisterQueue_CMockIgnoreArg_xQueue(__LINE__)
void vQueueUnregisterQueue_CMockIgnoreArg_xQueue(UNITY_LINE_TYPE cmock_line);
#define pcQueueGetName_IgnoreAndReturn(cmock_retval) pcQueueGetName_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void pcQueueGetName_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, const char* cmock_to_return);
#define pcQueueGetName_ExpectAnyArgsAndReturn(cmock_retval) pcQueueGetName_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void pcQueueGetName_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, const char* cmock_to_return);
#define pcQueueGetName_ExpectAndReturn(xQueue, cmock_retval) pcQueueGetName_CMockExpectAndReturn(__LINE__, xQueue, cmock_retval)
void pcQueueGetName_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, const char* cmock_to_return);
#define pcQueueGetName_IgnoreArg_xQueue() pcQueueGetName_CMockIgnoreArg_xQueue(__LINE__)
void pcQueueGetName_CMockIgnoreArg_xQueue(UNITY_LINE_TYPE cmock_line);
#define xQueueGenericCreate_IgnoreAndReturn(cmock_retval) xQueueGenericCreate_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueGenericCreate_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t cmock_to_return);
#define xQueueGenericCreate_ExpectAnyArgsAndReturn(cmock_retval) xQueueGenericCreate_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueGenericCreate_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t cmock_to_return);
#define xQueueGenericCreate_ExpectAndReturn(uxQueueLength, uxItemSize, ucQueueType, cmock_retval) xQueueGenericCreate_CMockExpectAndReturn(__LINE__, uxQueueLength, uxItemSize, ucQueueType, cmock_retval)
void xQueueGenericCreate_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, const uint8_t ucQueueType, QueueHandle_t cmock_to_return);
#define xQueueGenericCreate_IgnoreArg_uxQueueLength() xQueueGenericCreate_CMockIgnoreArg_uxQueueLength(__LINE__)
void xQueueGenericCreate_CMockIgnoreArg_uxQueueLength(UNITY_LINE_TYPE cmock_line);
#define xQueueGenericCreate_IgnoreArg_uxItemSize() xQueueGenericCreate_CMockIgnoreArg_uxItemSize(__LINE__)
void xQueueGenericCreate_CMockIgnoreArg_uxItemSize(UNITY_LINE_TYPE cmock_line);
#define xQueueGenericCreate_IgnoreArg_ucQueueType() xQueueGenericCreate_CMockIgnoreArg_ucQueueType(__LINE__)
void xQueueGenericCreate_CMockIgnoreArg_ucQueueType(UNITY_LINE_TYPE cmock_line);
#define xQueueGenericCreateStatic_IgnoreAndReturn(cmock_retval) xQueueGenericCreateStatic_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueGenericCreateStatic_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t cmock_to_return);
#define xQueueGenericCreateStatic_ExpectAnyArgsAndReturn(cmock_retval) xQueueGenericCreateStatic_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueGenericCreateStatic_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t cmock_to_return);
#define xQueueGenericCreateStatic_ExpectAndReturn(uxQueueLength, uxItemSize, pucQueueStorage, pxStaticQueue, ucQueueType, cmock_retval) xQueueGenericCreateStatic_CMockExpectAndReturn(__LINE__, uxQueueLength, uxItemSize, pucQueueStorage, pxStaticQueue, ucQueueType, cmock_retval)
void xQueueGenericCreateStatic_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, uint8_t* pucQueueStorage, StaticQueue_t* pxStaticQueue, const uint8_t ucQueueType, QueueHandle_t cmock_to_return);
#define xQueueGenericCreateStatic_ExpectWithArrayAndReturn(uxQueueLength, uxItemSize, pucQueueStorage, pucQueueStorage_Depth, pxStaticQueue, pxStaticQueue_Depth, ucQueueType, cmock_retval) xQueueGenericCreateStatic_CMockExpectWithArrayAndReturn(__LINE__, uxQueueLength, uxItemSize, pucQueueStorage, pucQueueStorage_Depth, pxStaticQueue, pxStaticQueue_Depth, ucQueueType, cmock_retval)
void xQueueGenericCreateStatic_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, uint8_t* pucQueueStorage, int pucQueueStorage_Depth, StaticQueue_t* pxStaticQueue, int pxStaticQueue_Depth, const uint8_t ucQueueType, QueueHandle_t cmock_to_return);
#define xQueueGenericCreateStatic_IgnoreArg_uxQueueLength() xQueueGenericCreateStatic_CMockIgnoreArg_uxQueueLength(__LINE__)
void xQueueGenericCreateStatic_CMockIgnoreArg_uxQueueLength(UNITY_LINE_TYPE cmock_line);
#define xQueueGenericCreateStatic_IgnoreArg_uxItemSize() xQueueGenericCreateStatic_CMockIgnoreArg_uxItemSize(__LINE__)
void xQueueGenericCreateStatic_CMockIgnoreArg_uxItemSize(UNITY_LINE_TYPE cmock_line);
#define xQueueGenericCreateStatic_IgnoreArg_pucQueueStorage() xQueueGenericCreateStatic_CMockIgnoreArg_pucQueueStorage(__LINE__)
void xQueueGenericCreateStatic_CMockIgnoreArg_pucQueueStorage(UNITY_LINE_TYPE cmock_line);
#define xQueueGenericCreateStatic_IgnoreArg_pxStaticQueue() xQueueGenericCreateStatic_CMockIgnoreArg_pxStaticQueue(__LINE__)
void xQueueGenericCreateStatic_CMockIgnoreArg_pxStaticQueue(UNITY_LINE_TYPE cmock_line);
#define xQueueGenericCreateStatic_IgnoreArg_ucQueueType() xQueueGenericCreateStatic_CMockIgnoreArg_ucQueueType(__LINE__)
void xQueueGenericCreateStatic_CMockIgnoreArg_ucQueueType(UNITY_LINE_TYPE cmock_line);
#define xQueueCreateSet_IgnoreAndReturn(cmock_retval) xQueueCreateSet_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueCreateSet_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, QueueSetHandle_t cmock_to_return);
#define xQueueCreateSet_ExpectAnyArgsAndReturn(cmock_retval) xQueueCreateSet_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueCreateSet_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, QueueSetHandle_t cmock_to_return);
#define xQueueCreateSet_ExpectAndReturn(uxEventQueueLength, cmock_retval) xQueueCreateSet_CMockExpectAndReturn(__LINE__, uxEventQueueLength, cmock_retval)
void xQueueCreateSet_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const UBaseType_t uxEventQueueLength, QueueSetHandle_t cmock_to_return);
#define xQueueCreateSet_IgnoreArg_uxEventQueueLength() xQueueCreateSet_CMockIgnoreArg_uxEventQueueLength(__LINE__)
void xQueueCreateSet_CMockIgnoreArg_uxEventQueueLength(UNITY_LINE_TYPE cmock_line);
#define xQueueAddToSet_IgnoreAndReturn(cmock_retval) xQueueAddToSet_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueAddToSet_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueAddToSet_ExpectAnyArgsAndReturn(cmock_retval) xQueueAddToSet_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueAddToSet_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueAddToSet_ExpectAndReturn(xQueueOrSemaphore, xQueueSet, cmock_retval) xQueueAddToSet_CMockExpectAndReturn(__LINE__, xQueueOrSemaphore, xQueueSet, cmock_retval)
void xQueueAddToSet_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQueueSet, BaseType_t cmock_to_return);
#define xQueueAddToSet_IgnoreArg_xQueueOrSemaphore() xQueueAddToSet_CMockIgnoreArg_xQueueOrSemaphore(__LINE__)
void xQueueAddToSet_CMockIgnoreArg_xQueueOrSemaphore(UNITY_LINE_TYPE cmock_line);
#define xQueueAddToSet_IgnoreArg_xQueueSet() xQueueAddToSet_CMockIgnoreArg_xQueueSet(__LINE__)
void xQueueAddToSet_CMockIgnoreArg_xQueueSet(UNITY_LINE_TYPE cmock_line);
#define xQueueRemoveFromSet_IgnoreAndReturn(cmock_retval) xQueueRemoveFromSet_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueRemoveFromSet_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueRemoveFromSet_ExpectAnyArgsAndReturn(cmock_retval) xQueueRemoveFromSet_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueRemoveFromSet_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueRemoveFromSet_ExpectAndReturn(xQueueOrSemaphore, xQueueSet, cmock_retval) xQueueRemoveFromSet_CMockExpectAndReturn(__LINE__, xQueueOrSemaphore, xQueueSet, cmock_retval)
void xQueueRemoveFromSet_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQueueSet, BaseType_t cmock_to_return);
#define xQueueRemoveFromSet_IgnoreArg_xQueueOrSemaphore() xQueueRemoveFromSet_CMockIgnoreArg_xQueueOrSemaphore(__LINE__)
void xQueueRemoveFromSet_CMockIgnoreArg_xQueueOrSemaphore(UNITY_LINE_TYPE cmock_line);
#define xQueueRemoveFromSet_IgnoreArg_xQueueSet() xQueueRemoveFromSet_CMockIgnoreArg_xQueueSet(__LINE__)
void xQueueRemoveFromSet_CMockIgnoreArg_xQueueSet(UNITY_LINE_TYPE cmock_line);
#define xQueueSelectFromSet_IgnoreAndReturn(cmock_retval) xQueueSelectFromSet_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueSelectFromSet_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, QueueSetMemberHandle_t cmock_to_return);
#define xQueueSelectFromSet_ExpectAnyArgsAndReturn(cmock_retval) xQueueSelectFromSet_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueSelectFromSet_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, QueueSetMemberHandle_t cmock_to_return);
#define xQueueSelectFromSet_ExpectAndReturn(xQueueSet, xTicksToWait, cmock_retval) xQueueSelectFromSet_CMockExpectAndReturn(__LINE__, xQueueSet, xTicksToWait, cmock_retval)
void xQueueSelectFromSet_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueSetHandle_t xQueueSet, const TickType_t xTicksToWait, QueueSetMemberHandle_t cmock_to_return);
#define xQueueSelectFromSet_IgnoreArg_xQueueSet() xQueueSelectFromSet_CMockIgnoreArg_xQueueSet(__LINE__)
void xQueueSelectFromSet_CMockIgnoreArg_xQueueSet(UNITY_LINE_TYPE cmock_line);
#define xQueueSelectFromSet_IgnoreArg_xTicksToWait() xQueueSelectFromSet_CMockIgnoreArg_xTicksToWait(__LINE__)
void xQueueSelectFromSet_CMockIgnoreArg_xTicksToWait(UNITY_LINE_TYPE cmock_line);
#define xQueueSelectFromSetFromISR_IgnoreAndReturn(cmock_retval) xQueueSelectFromSetFromISR_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueSelectFromSetFromISR_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, QueueSetMemberHandle_t cmock_to_return);
#define xQueueSelectFromSetFromISR_ExpectAnyArgsAndReturn(cmock_retval) xQueueSelectFromSetFromISR_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueSelectFromSetFromISR_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, QueueSetMemberHandle_t cmock_to_return);
#define xQueueSelectFromSetFromISR_ExpectAndReturn(xQueueSet, cmock_retval) xQueueSelectFromSetFromISR_CMockExpectAndReturn(__LINE__, xQueueSet, cmock_retval)
void xQueueSelectFromSetFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueSetHandle_t xQueueSet, QueueSetMemberHandle_t cmock_to_return);
#define xQueueSelectFromSetFromISR_IgnoreArg_xQueueSet() xQueueSelectFromSetFromISR_CMockIgnoreArg_xQueueSet(__LINE__)
void xQueueSelectFromSetFromISR_CMockIgnoreArg_xQueueSet(UNITY_LINE_TYPE cmock_line);
#define vQueueWaitForMessageRestricted_Ignore() vQueueWaitForMessageRestricted_CMockIgnore()
void vQueueWaitForMessageRestricted_CMockIgnore(void);
#define vQueueWaitForMessageRestricted_ExpectAnyArgs() vQueueWaitForMessageRestricted_CMockExpectAnyArgs(__LINE__)
void vQueueWaitForMessageRestricted_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vQueueWaitForMessageRestricted_Expect(xQueue, xTicksToWait, xWaitIndefinitely) vQueueWaitForMessageRestricted_CMockExpect(__LINE__, xQueue, xTicksToWait, xWaitIndefinitely)
void vQueueWaitForMessageRestricted_CMockExpect(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely);
#define vQueueWaitForMessageRestricted_IgnoreArg_xQueue() vQueueWaitForMessageRestricted_CMockIgnoreArg_xQueue(__LINE__)
void vQueueWaitForMessageRestricted_CMockIgnoreArg_xQueue(UNITY_LINE_TYPE cmock_line);
#define vQueueWaitForMessageRestricted_IgnoreArg_xTicksToWait() vQueueWaitForMessageRestricted_CMockIgnoreArg_xTicksToWait(__LINE__)
void vQueueWaitForMessageRestricted_CMockIgnoreArg_xTicksToWait(UNITY_LINE_TYPE cmock_line);
#define vQueueWaitForMessageRestricted_IgnoreArg_xWaitIndefinitely() vQueueWaitForMessageRestricted_CMockIgnoreArg_xWaitIndefinitely(__LINE__)
void vQueueWaitForMessageRestricted_CMockIgnoreArg_xWaitIndefinitely(UNITY_LINE_TYPE cmock_line);
#define xQueueGenericReset_IgnoreAndReturn(cmock_retval) xQueueGenericReset_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xQueueGenericReset_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueGenericReset_ExpectAnyArgsAndReturn(cmock_retval) xQueueGenericReset_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xQueueGenericReset_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xQueueGenericReset_ExpectAndReturn(xQueue, xNewQueue, cmock_retval) xQueueGenericReset_CMockExpectAndReturn(__LINE__, xQueue, xNewQueue, cmock_retval)
void xQueueGenericReset_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, BaseType_t xNewQueue, BaseType_t cmock_to_return);
#define xQueueGenericReset_IgnoreArg_xQueue() xQueueGenericReset_CMockIgnoreArg_xQueue(__LINE__)
void xQueueGenericReset_CMockIgnoreArg_xQueue(UNITY_LINE_TYPE cmock_line);
#define xQueueGenericReset_IgnoreArg_xNewQueue() xQueueGenericReset_CMockIgnoreArg_xNewQueue(__LINE__)
void xQueueGenericReset_CMockIgnoreArg_xNewQueue(UNITY_LINE_TYPE cmock_line);
#define vQueueSetQueueNumber_Ignore() vQueueSetQueueNumber_CMockIgnore()
void vQueueSetQueueNumber_CMockIgnore(void);
#define vQueueSetQueueNumber_ExpectAnyArgs() vQueueSetQueueNumber_CMockExpectAnyArgs(__LINE__)
void vQueueSetQueueNumber_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vQueueSetQueueNumber_Expect(xQueue, uxQueueNumber) vQueueSetQueueNumber_CMockExpect(__LINE__, xQueue, uxQueueNumber)
void vQueueSetQueueNumber_CMockExpect(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, UBaseType_t uxQueueNumber);
#define vQueueSetQueueNumber_IgnoreArg_xQueue() vQueueSetQueueNumber_CMockIgnoreArg_xQueue(__LINE__)
void vQueueSetQueueNumber_CMockIgnoreArg_xQueue(UNITY_LINE_TYPE cmock_line);
#define vQueueSetQueueNumber_IgnoreArg_uxQueueNumber() vQueueSetQueueNumber_CMockIgnoreArg_uxQueueNumber(__LINE__)
void vQueueSetQueueNumber_CMockIgnoreArg_uxQueueNumber(UNITY_LINE_TYPE cmock_line);
#define uxQueueGetQueueNumber_IgnoreAndReturn(cmock_retval) uxQueueGetQueueNumber_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void uxQueueGetQueueNumber_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, UBaseType_t cmock_to_return);
#define uxQueueGetQueueNumber_ExpectAnyArgsAndReturn(cmock_retval) uxQueueGetQueueNumber_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void uxQueueGetQueueNumber_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, UBaseType_t cmock_to_return);
#define uxQueueGetQueueNumber_ExpectAndReturn(xQueue, cmock_retval) uxQueueGetQueueNumber_CMockExpectAndReturn(__LINE__, xQueue, cmock_retval)
void uxQueueGetQueueNumber_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, UBaseType_t cmock_to_return);
#define uxQueueGetQueueNumber_IgnoreArg_xQueue() uxQueueGetQueueNumber_CMockIgnoreArg_xQueue(__LINE__)
void uxQueueGetQueueNumber_CMockIgnoreArg_xQueue(UNITY_LINE_TYPE cmock_line);
#define ucQueueGetQueueType_IgnoreAndReturn(cmock_retval) ucQueueGetQueueType_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ucQueueGetQueueType_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define ucQueueGetQueueType_ExpectAnyArgsAndReturn(cmock_retval) ucQueueGetQueueType_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ucQueueGetQueueType_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define ucQueueGetQueueType_ExpectAndReturn(xQueue, cmock_retval) ucQueueGetQueueType_CMockExpectAndReturn(__LINE__, xQueue, cmock_retval)
void ucQueueGetQueueType_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, uint8_t cmock_to_return);
#define ucQueueGetQueueType_IgnoreArg_xQueue() ucQueueGetQueueType_CMockIgnoreArg_xQueue(__LINE__)
void ucQueueGetQueueType_CMockIgnoreArg_xQueue(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
