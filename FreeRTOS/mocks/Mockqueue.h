/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKQUEUE_H
#define _MOCKQUEUE_H

#include "FreeRTOS.h"
#include "queue.h"
#include "unity.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockqueue_Init(void);
void Mockqueue_Destroy(void);
void Mockqueue_Verify(void);

#define xQueueGenericSend_ExpectAndReturn(xQueue, pvItemToQueue, xTicksToWait, xCopyPosition, cmock_retval) xQueueGenericSend_CMockExpectAndReturn(__LINE__, xQueue, pvItemToQueue, xTicksToWait, xCopyPosition, cmock_retval)
void xQueueGenericSend_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, const void* const pvItemToQueue, TickType_t xTicksToWait, const BaseType_t xCopyPosition, BaseType_t cmock_to_return);
#define xQueuePeek_ExpectAndReturn(xQueue, pvBuffer, xTicksToWait, cmock_retval) xQueuePeek_CMockExpectAndReturn(__LINE__, xQueue, pvBuffer, xTicksToWait, cmock_retval)
void xQueuePeek_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, void* const pvBuffer, TickType_t xTicksToWait, BaseType_t cmock_to_return);
#define xQueuePeekFromISR_ExpectAndReturn(xQueue, pvBuffer, cmock_retval) xQueuePeekFromISR_CMockExpectAndReturn(__LINE__, xQueue, pvBuffer, cmock_retval)
void xQueuePeekFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, void* const pvBuffer, BaseType_t cmock_to_return);
#define xQueueReceive_ExpectAndReturn(xQueue, pvBuffer, xTicksToWait, cmock_retval) xQueueReceive_CMockExpectAndReturn(__LINE__, xQueue, pvBuffer, xTicksToWait, cmock_retval)
void xQueueReceive_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, void* const pvBuffer, TickType_t xTicksToWait, BaseType_t cmock_to_return);
#define uxQueueMessagesWaiting_ExpectAndReturn(xQueue, cmock_retval) uxQueueMessagesWaiting_CMockExpectAndReturn(__LINE__, xQueue, cmock_retval)
void uxQueueMessagesWaiting_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const QueueHandle_t xQueue, UBaseType_t cmock_to_return);
#define uxQueueSpacesAvailable_ExpectAndReturn(xQueue, cmock_retval) uxQueueSpacesAvailable_CMockExpectAndReturn(__LINE__, xQueue, cmock_retval)
void uxQueueSpacesAvailable_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const QueueHandle_t xQueue, UBaseType_t cmock_to_return);
#define vQueueDelete_Expect(xQueue) vQueueDelete_CMockExpect(__LINE__, xQueue)
void vQueueDelete_CMockExpect(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue);
#define xQueueGenericSendFromISR_ExpectAndReturn(xQueue, pvItemToQueue, pxHigherPriorityTaskWoken, xCopyPosition, cmock_retval) xQueueGenericSendFromISR_CMockExpectAndReturn(__LINE__, xQueue, pvItemToQueue, pxHigherPriorityTaskWoken, xCopyPosition, cmock_retval)
void xQueueGenericSendFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, const void* const pvItemToQueue, BaseType_t* const pxHigherPriorityTaskWoken, const BaseType_t xCopyPosition, BaseType_t cmock_to_return);
#define xQueueGiveFromISR_ExpectAndReturn(xQueue, pxHigherPriorityTaskWoken, cmock_retval) xQueueGiveFromISR_CMockExpectAndReturn(__LINE__, xQueue, pxHigherPriorityTaskWoken, cmock_retval)
void xQueueGiveFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, BaseType_t* const pxHigherPriorityTaskWoken, BaseType_t cmock_to_return);
#define xQueueReceiveFromISR_ExpectAndReturn(xQueue, pvBuffer, pxHigherPriorityTaskWoken, cmock_retval) xQueueReceiveFromISR_CMockExpectAndReturn(__LINE__, xQueue, pvBuffer, pxHigherPriorityTaskWoken, cmock_retval)
void xQueueReceiveFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, void* const pvBuffer, BaseType_t* const pxHigherPriorityTaskWoken, BaseType_t cmock_to_return);
#define xQueueIsQueueEmptyFromISR_ExpectAndReturn(xQueue, cmock_retval) xQueueIsQueueEmptyFromISR_CMockExpectAndReturn(__LINE__, xQueue, cmock_retval)
void xQueueIsQueueEmptyFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const QueueHandle_t xQueue, BaseType_t cmock_to_return);
#define xQueueIsQueueFullFromISR_ExpectAndReturn(xQueue, cmock_retval) xQueueIsQueueFullFromISR_CMockExpectAndReturn(__LINE__, xQueue, cmock_retval)
void xQueueIsQueueFullFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const QueueHandle_t xQueue, BaseType_t cmock_to_return);
#define uxQueueMessagesWaitingFromISR_ExpectAndReturn(xQueue, cmock_retval) uxQueueMessagesWaitingFromISR_CMockExpectAndReturn(__LINE__, xQueue, cmock_retval)
void uxQueueMessagesWaitingFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const QueueHandle_t xQueue, UBaseType_t cmock_to_return);
#define xQueueCRSendFromISR_ExpectAndReturn(xQueue, pvItemToQueue, xCoRoutinePreviouslyWoken, cmock_retval) xQueueCRSendFromISR_CMockExpectAndReturn(__LINE__, xQueue, pvItemToQueue, xCoRoutinePreviouslyWoken, cmock_retval)
void xQueueCRSendFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, const void* pvItemToQueue, BaseType_t xCoRoutinePreviouslyWoken, BaseType_t cmock_to_return);
#define xQueueCRReceiveFromISR_ExpectAndReturn(xQueue, pvBuffer, pxTaskWoken, cmock_retval) xQueueCRReceiveFromISR_CMockExpectAndReturn(__LINE__, xQueue, pvBuffer, pxTaskWoken, cmock_retval)
void xQueueCRReceiveFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, void* pvBuffer, BaseType_t* pxTaskWoken, BaseType_t cmock_to_return);
#define xQueueCRSend_ExpectAndReturn(xQueue, pvItemToQueue, xTicksToWait, cmock_retval) xQueueCRSend_CMockExpectAndReturn(__LINE__, xQueue, pvItemToQueue, xTicksToWait, cmock_retval)
void xQueueCRSend_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, const void* pvItemToQueue, TickType_t xTicksToWait, BaseType_t cmock_to_return);
#define xQueueCRReceive_ExpectAndReturn(xQueue, pvBuffer, xTicksToWait, cmock_retval) xQueueCRReceive_CMockExpectAndReturn(__LINE__, xQueue, pvBuffer, xTicksToWait, cmock_retval)
void xQueueCRReceive_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, void* pvBuffer, TickType_t xTicksToWait, BaseType_t cmock_to_return);
#define xQueueCreateMutex_ExpectAndReturn(ucQueueType, cmock_retval) xQueueCreateMutex_CMockExpectAndReturn(__LINE__, ucQueueType, cmock_retval)
void xQueueCreateMutex_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const uint8_t ucQueueType, QueueHandle_t cmock_to_return);
#define xQueueCreateMutexStatic_ExpectAndReturn(ucQueueType, pxStaticQueue, cmock_retval) xQueueCreateMutexStatic_CMockExpectAndReturn(__LINE__, ucQueueType, pxStaticQueue, cmock_retval)
void xQueueCreateMutexStatic_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const uint8_t ucQueueType, StaticQueue_t* pxStaticQueue, QueueHandle_t cmock_to_return);
#define xQueueCreateCountingSemaphore_ExpectAndReturn(uxMaxCount, uxInitialCount, cmock_retval) xQueueCreateCountingSemaphore_CMockExpectAndReturn(__LINE__, uxMaxCount, uxInitialCount, cmock_retval)
void xQueueCreateCountingSemaphore_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount, QueueHandle_t cmock_to_return);
#define xQueueCreateCountingSemaphoreStatic_ExpectAndReturn(uxMaxCount, uxInitialCount, pxStaticQueue, cmock_retval) xQueueCreateCountingSemaphoreStatic_CMockExpectAndReturn(__LINE__, uxMaxCount, uxInitialCount, pxStaticQueue, cmock_retval)
void xQueueCreateCountingSemaphoreStatic_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount, StaticQueue_t* pxStaticQueue, QueueHandle_t cmock_to_return);
#define xQueueSemaphoreTake_ExpectAndReturn(xQueue, xTicksToWait, cmock_retval) xQueueSemaphoreTake_CMockExpectAndReturn(__LINE__, xQueue, xTicksToWait, cmock_retval)
void xQueueSemaphoreTake_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, TickType_t xTicksToWait, BaseType_t cmock_to_return);
#define xQueueGetMutexHolder_ExpectAndReturn(xSemaphore, cmock_retval) xQueueGetMutexHolder_CMockExpectAndReturn(__LINE__, xSemaphore, cmock_retval)
void xQueueGetMutexHolder_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xSemaphore, TaskHandle_t cmock_to_return);
#define xQueueGetMutexHolderFromISR_ExpectAndReturn(xSemaphore, cmock_retval) xQueueGetMutexHolderFromISR_CMockExpectAndReturn(__LINE__, xSemaphore, cmock_retval)
void xQueueGetMutexHolderFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xSemaphore, TaskHandle_t cmock_to_return);
#define xQueueTakeMutexRecursive_ExpectAndReturn(xMutex, xTicksToWait, cmock_retval) xQueueTakeMutexRecursive_CMockExpectAndReturn(__LINE__, xMutex, xTicksToWait, cmock_retval)
void xQueueTakeMutexRecursive_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xMutex, TickType_t xTicksToWait, BaseType_t cmock_to_return);
#define xQueueGiveMutexRecursive_ExpectAndReturn(xMutex, cmock_retval) xQueueGiveMutexRecursive_CMockExpectAndReturn(__LINE__, xMutex, cmock_retval)
void xQueueGiveMutexRecursive_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xMutex, BaseType_t cmock_to_return);
#define vQueueAddToRegistry_Expect(xQueue, pcQueueName) vQueueAddToRegistry_CMockExpect(__LINE__, xQueue, pcQueueName)
void vQueueAddToRegistry_CMockExpect(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, const char* pcQueueName);
#define vQueueUnregisterQueue_Expect(xQueue) vQueueUnregisterQueue_CMockExpect(__LINE__, xQueue)
void vQueueUnregisterQueue_CMockExpect(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue);
#define pcQueueGetName_ExpectAndReturn(xQueue, cmock_retval) pcQueueGetName_CMockExpectAndReturn(__LINE__, xQueue, cmock_retval)
void pcQueueGetName_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, const char* cmock_to_return);
#define xQueueGenericCreate_ExpectAndReturn(uxQueueLength, uxItemSize, ucQueueType, cmock_retval) xQueueGenericCreate_CMockExpectAndReturn(__LINE__, uxQueueLength, uxItemSize, ucQueueType, cmock_retval)
void xQueueGenericCreate_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, const uint8_t ucQueueType, QueueHandle_t cmock_to_return);
#define xQueueGenericCreateStatic_ExpectAndReturn(uxQueueLength, uxItemSize, pucQueueStorage, pxStaticQueue, ucQueueType, cmock_retval) xQueueGenericCreateStatic_CMockExpectAndReturn(__LINE__, uxQueueLength, uxItemSize, pucQueueStorage, pxStaticQueue, ucQueueType, cmock_retval)
void xQueueGenericCreateStatic_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, uint8_t* pucQueueStorage, StaticQueue_t* pxStaticQueue, const uint8_t ucQueueType, QueueHandle_t cmock_to_return);
#define xQueueCreateSet_ExpectAndReturn(uxEventQueueLength, cmock_retval) xQueueCreateSet_CMockExpectAndReturn(__LINE__, uxEventQueueLength, cmock_retval)
void xQueueCreateSet_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const UBaseType_t uxEventQueueLength, QueueSetHandle_t cmock_to_return);
#define xQueueAddToSet_ExpectAndReturn(xQueueOrSemaphore, xQueueSet, cmock_retval) xQueueAddToSet_CMockExpectAndReturn(__LINE__, xQueueOrSemaphore, xQueueSet, cmock_retval)
void xQueueAddToSet_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQueueSet, BaseType_t cmock_to_return);
#define xQueueRemoveFromSet_ExpectAndReturn(xQueueOrSemaphore, xQueueSet, cmock_retval) xQueueRemoveFromSet_CMockExpectAndReturn(__LINE__, xQueueOrSemaphore, xQueueSet, cmock_retval)
void xQueueRemoveFromSet_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQueueSet, BaseType_t cmock_to_return);
#define xQueueSelectFromSet_ExpectAndReturn(xQueueSet, xTicksToWait, cmock_retval) xQueueSelectFromSet_CMockExpectAndReturn(__LINE__, xQueueSet, xTicksToWait, cmock_retval)
void xQueueSelectFromSet_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueSetHandle_t xQueueSet, const TickType_t xTicksToWait, QueueSetMemberHandle_t cmock_to_return);
#define xQueueSelectFromSetFromISR_ExpectAndReturn(xQueueSet, cmock_retval) xQueueSelectFromSetFromISR_CMockExpectAndReturn(__LINE__, xQueueSet, cmock_retval)
void xQueueSelectFromSetFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueSetHandle_t xQueueSet, QueueSetMemberHandle_t cmock_to_return);
#define vQueueWaitForMessageRestricted_Expect(xQueue, xTicksToWait, xWaitIndefinitely) vQueueWaitForMessageRestricted_CMockExpect(__LINE__, xQueue, xTicksToWait, xWaitIndefinitely)
void vQueueWaitForMessageRestricted_CMockExpect(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely);
#define xQueueGenericReset_ExpectAndReturn(xQueue, xNewQueue, cmock_retval) xQueueGenericReset_CMockExpectAndReturn(__LINE__, xQueue, xNewQueue, cmock_retval)
void xQueueGenericReset_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, BaseType_t xNewQueue, BaseType_t cmock_to_return);
#define vQueueSetQueueNumber_Expect(xQueue, uxQueueNumber) vQueueSetQueueNumber_CMockExpect(__LINE__, xQueue, uxQueueNumber)
void vQueueSetQueueNumber_CMockExpect(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, UBaseType_t uxQueueNumber);
#define uxQueueGetQueueNumber_ExpectAndReturn(xQueue, cmock_retval) uxQueueGetQueueNumber_CMockExpectAndReturn(__LINE__, xQueue, cmock_retval)
void uxQueueGetQueueNumber_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, UBaseType_t cmock_to_return);
#define ucQueueGetQueueType_ExpectAndReturn(xQueue, cmock_retval) ucQueueGetQueueType_CMockExpectAndReturn(__LINE__, xQueue, cmock_retval)
void ucQueueGetQueueType_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, QueueHandle_t xQueue, uint8_t cmock_to_return);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
