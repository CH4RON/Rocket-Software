/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKTASK_H
#define _MOCKTASK_H

#include "FreeRTOS.h"
#include "task.h"
#include "unity.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mocktask_Init(void);
void Mocktask_Destroy(void);
void Mocktask_Verify(void);

#define xTaskCreate_ExpectAndReturn(pxTaskCode, pcName, usStackDepth, pvParameters, uxPriority, pxCreatedTask, cmock_retval) xTaskCreate_CMockExpectAndReturn(__LINE__, pxTaskCode, pcName, usStackDepth, pvParameters, uxPriority, pxCreatedTask, cmock_retval)
void xTaskCreate_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskFunction_t pxTaskCode, const char* const pcName, const configSTACK_DEPTH_TYPE usStackDepth, void* const pvParameters, UBaseType_t uxPriority, TaskHandle_t* const pxCreatedTask, BaseType_t cmock_to_return);
#define xTaskCreate_ExpectWithArrayAndReturn(pxTaskCode, pcName, usStackDepth, pvParameters, pvParameters_Depth, uxPriority, pxCreatedTask, pxCreatedTask_Depth, cmock_retval) xTaskCreate_CMockExpectWithArrayAndReturn(__LINE__, pxTaskCode, pcName, usStackDepth, pvParameters, pvParameters_Depth, uxPriority, pxCreatedTask, pxCreatedTask_Depth, cmock_retval)
void xTaskCreate_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, TaskFunction_t pxTaskCode, const char* const pcName, const configSTACK_DEPTH_TYPE usStackDepth, void* const pvParameters, int pvParameters_Depth, UBaseType_t uxPriority, TaskHandle_t* const pxCreatedTask, int pxCreatedTask_Depth, BaseType_t cmock_to_return);
#define xTaskCreateStatic_ExpectAndReturn(pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, puxStackBuffer, pxTaskBuffer, cmock_retval) xTaskCreateStatic_CMockExpectAndReturn(__LINE__, pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, puxStackBuffer, pxTaskBuffer, cmock_retval)
void xTaskCreateStatic_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskFunction_t pxTaskCode, const char* const pcName, const uint32_t ulStackDepth, void* const pvParameters, UBaseType_t uxPriority, StackType_t* const puxStackBuffer, StaticTask_t* const pxTaskBuffer, TaskHandle_t cmock_to_return);
#define xTaskCreateStatic_ExpectWithArrayAndReturn(pxTaskCode, pcName, ulStackDepth, pvParameters, pvParameters_Depth, uxPriority, puxStackBuffer, puxStackBuffer_Depth, pxTaskBuffer, pxTaskBuffer_Depth, cmock_retval) xTaskCreateStatic_CMockExpectWithArrayAndReturn(__LINE__, pxTaskCode, pcName, ulStackDepth, pvParameters, pvParameters_Depth, uxPriority, puxStackBuffer, puxStackBuffer_Depth, pxTaskBuffer, pxTaskBuffer_Depth, cmock_retval)
void xTaskCreateStatic_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, TaskFunction_t pxTaskCode, const char* const pcName, const uint32_t ulStackDepth, void* const pvParameters, int pvParameters_Depth, UBaseType_t uxPriority, StackType_t* const puxStackBuffer, int puxStackBuffer_Depth, StaticTask_t* const pxTaskBuffer, int pxTaskBuffer_Depth, TaskHandle_t cmock_to_return);
#define xTaskCreateRestricted_ExpectAndReturn(pxTaskDefinition, pxCreatedTask, cmock_retval) xTaskCreateRestricted_CMockExpectAndReturn(__LINE__, pxTaskDefinition, pxCreatedTask, cmock_retval)
void xTaskCreateRestricted_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const TaskParameters_t* const pxTaskDefinition, TaskHandle_t* pxCreatedTask, BaseType_t cmock_to_return);
#define xTaskCreateRestricted_ExpectWithArrayAndReturn(pxTaskDefinition, pxTaskDefinition_Depth, pxCreatedTask, pxCreatedTask_Depth, cmock_retval) xTaskCreateRestricted_CMockExpectWithArrayAndReturn(__LINE__, pxTaskDefinition, pxTaskDefinition_Depth, pxCreatedTask, pxCreatedTask_Depth, cmock_retval)
void xTaskCreateRestricted_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const TaskParameters_t* const pxTaskDefinition, int pxTaskDefinition_Depth, TaskHandle_t* pxCreatedTask, int pxCreatedTask_Depth, BaseType_t cmock_to_return);
#define xTaskCreateRestrictedStatic_ExpectAndReturn(pxTaskDefinition, pxCreatedTask, cmock_retval) xTaskCreateRestrictedStatic_CMockExpectAndReturn(__LINE__, pxTaskDefinition, pxCreatedTask, cmock_retval)
void xTaskCreateRestrictedStatic_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const TaskParameters_t* const pxTaskDefinition, TaskHandle_t* pxCreatedTask, BaseType_t cmock_to_return);
#define xTaskCreateRestrictedStatic_ExpectWithArrayAndReturn(pxTaskDefinition, pxTaskDefinition_Depth, pxCreatedTask, pxCreatedTask_Depth, cmock_retval) xTaskCreateRestrictedStatic_CMockExpectWithArrayAndReturn(__LINE__, pxTaskDefinition, pxTaskDefinition_Depth, pxCreatedTask, pxCreatedTask_Depth, cmock_retval)
void xTaskCreateRestrictedStatic_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const TaskParameters_t* const pxTaskDefinition, int pxTaskDefinition_Depth, TaskHandle_t* pxCreatedTask, int pxCreatedTask_Depth, BaseType_t cmock_to_return);
#define vTaskAllocateMPURegions_Expect(xTask, pxRegions) vTaskAllocateMPURegions_CMockExpect(__LINE__, xTask, pxRegions)
void vTaskAllocateMPURegions_CMockExpect(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, const MemoryRegion_t* const pxRegions);
#define vTaskAllocateMPURegions_ExpectWithArray(xTask, pxRegions, pxRegions_Depth) vTaskAllocateMPURegions_CMockExpectWithArray(__LINE__, xTask, pxRegions, pxRegions_Depth)
void vTaskAllocateMPURegions_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, const MemoryRegion_t* const pxRegions, int pxRegions_Depth);
#define vTaskDelete_Expect(xTaskToDelete) vTaskDelete_CMockExpect(__LINE__, xTaskToDelete)
void vTaskDelete_CMockExpect(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToDelete);
#define vTaskDelay_Expect(xTicksToDelay) vTaskDelay_CMockExpect(__LINE__, xTicksToDelay)
void vTaskDelay_CMockExpect(UNITY_LINE_TYPE cmock_line, const TickType_t xTicksToDelay);
#define vTaskDelayUntil_Expect(pxPreviousWakeTime, xTimeIncrement) vTaskDelayUntil_CMockExpect(__LINE__, pxPreviousWakeTime, xTimeIncrement)
void vTaskDelayUntil_CMockExpect(UNITY_LINE_TYPE cmock_line, TickType_t* const pxPreviousWakeTime, const TickType_t xTimeIncrement);
#define vTaskDelayUntil_ExpectWithArray(pxPreviousWakeTime, pxPreviousWakeTime_Depth, xTimeIncrement) vTaskDelayUntil_CMockExpectWithArray(__LINE__, pxPreviousWakeTime, pxPreviousWakeTime_Depth, xTimeIncrement)
void vTaskDelayUntil_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, TickType_t* const pxPreviousWakeTime, int pxPreviousWakeTime_Depth, const TickType_t xTimeIncrement);
#define xTaskAbortDelay_ExpectAndReturn(xTask, cmock_retval) xTaskAbortDelay_CMockExpectAndReturn(__LINE__, xTask, cmock_retval)
void xTaskAbortDelay_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, BaseType_t cmock_to_return);
#define uxTaskPriorityGet_ExpectAndReturn(xTask, cmock_retval) uxTaskPriorityGet_CMockExpectAndReturn(__LINE__, xTask, cmock_retval)
void uxTaskPriorityGet_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const TaskHandle_t xTask, UBaseType_t cmock_to_return);
#define uxTaskPriorityGetFromISR_ExpectAndReturn(xTask, cmock_retval) uxTaskPriorityGetFromISR_CMockExpectAndReturn(__LINE__, xTask, cmock_retval)
void uxTaskPriorityGetFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const TaskHandle_t xTask, UBaseType_t cmock_to_return);
#define eTaskGetState_ExpectAndReturn(xTask, cmock_retval) eTaskGetState_CMockExpectAndReturn(__LINE__, xTask, cmock_retval)
void eTaskGetState_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, eTaskState cmock_to_return);
#define vTaskGetInfo_Expect(xTask, pxTaskStatus, xGetFreeStackSpace, eState) vTaskGetInfo_CMockExpect(__LINE__, xTask, pxTaskStatus, xGetFreeStackSpace, eState)
void vTaskGetInfo_CMockExpect(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, TaskStatus_t* pxTaskStatus, BaseType_t xGetFreeStackSpace, eTaskState eState);
#define vTaskGetInfo_ExpectWithArray(xTask, pxTaskStatus, pxTaskStatus_Depth, xGetFreeStackSpace, eState) vTaskGetInfo_CMockExpectWithArray(__LINE__, xTask, pxTaskStatus, pxTaskStatus_Depth, xGetFreeStackSpace, eState)
void vTaskGetInfo_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, TaskStatus_t* pxTaskStatus, int pxTaskStatus_Depth, BaseType_t xGetFreeStackSpace, eTaskState eState);
#define vTaskPrioritySet_Expect(xTask, uxNewPriority) vTaskPrioritySet_CMockExpect(__LINE__, xTask, uxNewPriority)
void vTaskPrioritySet_CMockExpect(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, UBaseType_t uxNewPriority);
#define vTaskSuspend_Expect(xTaskToSuspend) vTaskSuspend_CMockExpect(__LINE__, xTaskToSuspend)
void vTaskSuspend_CMockExpect(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToSuspend);
#define vTaskResume_Expect(xTaskToResume) vTaskResume_CMockExpect(__LINE__, xTaskToResume)
void vTaskResume_CMockExpect(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToResume);
#define xTaskResumeFromISR_ExpectAndReturn(xTaskToResume, cmock_retval) xTaskResumeFromISR_CMockExpectAndReturn(__LINE__, xTaskToResume, cmock_retval)
void xTaskResumeFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToResume, BaseType_t cmock_to_return);
#define vTaskStartScheduler_Expect() vTaskStartScheduler_CMockExpect(__LINE__)
void vTaskStartScheduler_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define vTaskEndScheduler_Expect() vTaskEndScheduler_CMockExpect(__LINE__)
void vTaskEndScheduler_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define vTaskSuspendAll_Expect() vTaskSuspendAll_CMockExpect(__LINE__)
void vTaskSuspendAll_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define xTaskResumeAll_ExpectAndReturn(cmock_retval) xTaskResumeAll_CMockExpectAndReturn(__LINE__, cmock_retval)
void xTaskResumeAll_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskGetTickCount_ExpectAndReturn(cmock_retval) xTaskGetTickCount_CMockExpectAndReturn(__LINE__, cmock_retval)
void xTaskGetTickCount_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TickType_t cmock_to_return);
#define xTaskGetTickCountFromISR_ExpectAndReturn(cmock_retval) xTaskGetTickCountFromISR_CMockExpectAndReturn(__LINE__, cmock_retval)
void xTaskGetTickCountFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TickType_t cmock_to_return);
#define uxTaskGetNumberOfTasks_ExpectAndReturn(cmock_retval) uxTaskGetNumberOfTasks_CMockExpectAndReturn(__LINE__, cmock_retval)
void uxTaskGetNumberOfTasks_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, UBaseType_t cmock_to_return);
#define pcTaskGetName_ExpectAndReturn(xTaskToQuery, cmock_retval) pcTaskGetName_CMockExpectAndReturn(__LINE__, xTaskToQuery, cmock_retval)
void pcTaskGetName_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToQuery, char* cmock_to_return);
#define xTaskGetHandle_ExpectAndReturn(pcNameToQuery, cmock_retval) xTaskGetHandle_CMockExpectAndReturn(__LINE__, pcNameToQuery, cmock_retval)
void xTaskGetHandle_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const char* pcNameToQuery, TaskHandle_t cmock_to_return);
#define uxTaskGetStackHighWaterMark_ExpectAndReturn(xTask, cmock_retval) uxTaskGetStackHighWaterMark_CMockExpectAndReturn(__LINE__, xTask, cmock_retval)
void uxTaskGetStackHighWaterMark_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, UBaseType_t cmock_to_return);
#define uxTaskGetStackHighWaterMark2_ExpectAndReturn(xTask, cmock_retval) uxTaskGetStackHighWaterMark2_CMockExpectAndReturn(__LINE__, xTask, cmock_retval)
void uxTaskGetStackHighWaterMark2_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, configSTACK_DEPTH_TYPE cmock_to_return);
#define vTaskSetApplicationTaskTag_Expect(xTask, pxHookFunction) vTaskSetApplicationTaskTag_CMockExpect(__LINE__, xTask, pxHookFunction)
void vTaskSetApplicationTaskTag_CMockExpect(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, TaskHookFunction_t pxHookFunction);
#define xTaskGetApplicationTaskTag_ExpectAndReturn(xTask, cmock_retval) xTaskGetApplicationTaskTag_CMockExpectAndReturn(__LINE__, xTask, cmock_retval)
void xTaskGetApplicationTaskTag_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, TaskHookFunction_t cmock_to_return);
#define xTaskGetApplicationTaskTagFromISR_ExpectAndReturn(xTask, cmock_retval) xTaskGetApplicationTaskTagFromISR_CMockExpectAndReturn(__LINE__, xTask, cmock_retval)
void xTaskGetApplicationTaskTagFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, TaskHookFunction_t cmock_to_return);
#define vTaskSetThreadLocalStoragePointer_Expect(xTaskToSet, xIndex, pvValue) vTaskSetThreadLocalStoragePointer_CMockExpect(__LINE__, xTaskToSet, xIndex, pvValue)
void vTaskSetThreadLocalStoragePointer_CMockExpect(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToSet, BaseType_t xIndex, void* pvValue);
#define vTaskSetThreadLocalStoragePointer_ExpectWithArray(xTaskToSet, xIndex, pvValue, pvValue_Depth) vTaskSetThreadLocalStoragePointer_CMockExpectWithArray(__LINE__, xTaskToSet, xIndex, pvValue, pvValue_Depth)
void vTaskSetThreadLocalStoragePointer_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToSet, BaseType_t xIndex, void* pvValue, int pvValue_Depth);
#define pvTaskGetThreadLocalStoragePointer_ExpectAndReturn(xTaskToQuery, xIndex, cmock_retval) pvTaskGetThreadLocalStoragePointer_CMockExpectAndReturn(__LINE__, xTaskToQuery, xIndex, cmock_retval)
void pvTaskGetThreadLocalStoragePointer_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToQuery, BaseType_t xIndex, void* cmock_to_return);
#define xTaskCallApplicationTaskHook_ExpectAndReturn(xTask, pvParameter, cmock_retval) xTaskCallApplicationTaskHook_CMockExpectAndReturn(__LINE__, xTask, pvParameter, cmock_retval)
void xTaskCallApplicationTaskHook_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, void* pvParameter, BaseType_t cmock_to_return);
#define xTaskCallApplicationTaskHook_ExpectWithArrayAndReturn(xTask, pvParameter, pvParameter_Depth, cmock_retval) xTaskCallApplicationTaskHook_CMockExpectWithArrayAndReturn(__LINE__, xTask, pvParameter, pvParameter_Depth, cmock_retval)
void xTaskCallApplicationTaskHook_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, void* pvParameter, int pvParameter_Depth, BaseType_t cmock_to_return);
#define xTaskGetIdleTaskHandle_ExpectAndReturn(cmock_retval) xTaskGetIdleTaskHandle_CMockExpectAndReturn(__LINE__, cmock_retval)
void xTaskGetIdleTaskHandle_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t cmock_to_return);
#define uxTaskGetSystemState_ExpectAndReturn(pxTaskStatusArray, uxArraySize, pulTotalRunTime, cmock_retval) uxTaskGetSystemState_CMockExpectAndReturn(__LINE__, pxTaskStatusArray, uxArraySize, pulTotalRunTime, cmock_retval)
void uxTaskGetSystemState_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskStatus_t* const pxTaskStatusArray, const UBaseType_t uxArraySize, uint32_t* const pulTotalRunTime, UBaseType_t cmock_to_return);
#define uxTaskGetSystemState_ExpectWithArrayAndReturn(pxTaskStatusArray, pxTaskStatusArray_Depth, uxArraySize, pulTotalRunTime, pulTotalRunTime_Depth, cmock_retval) uxTaskGetSystemState_CMockExpectWithArrayAndReturn(__LINE__, pxTaskStatusArray, pxTaskStatusArray_Depth, uxArraySize, pulTotalRunTime, pulTotalRunTime_Depth, cmock_retval)
void uxTaskGetSystemState_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, TaskStatus_t* const pxTaskStatusArray, int pxTaskStatusArray_Depth, const UBaseType_t uxArraySize, uint32_t* const pulTotalRunTime, int pulTotalRunTime_Depth, UBaseType_t cmock_to_return);
#define vTaskList_Expect(pcWriteBuffer) vTaskList_CMockExpect(__LINE__, pcWriteBuffer)
void vTaskList_CMockExpect(UNITY_LINE_TYPE cmock_line, char* pcWriteBuffer);
#define vTaskGetRunTimeStats_Expect(pcWriteBuffer) vTaskGetRunTimeStats_CMockExpect(__LINE__, pcWriteBuffer)
void vTaskGetRunTimeStats_CMockExpect(UNITY_LINE_TYPE cmock_line, char* pcWriteBuffer);
#define xTaskGetIdleRunTimeCounter_ExpectAndReturn(cmock_retval) xTaskGetIdleRunTimeCounter_CMockExpectAndReturn(__LINE__, cmock_retval)
void xTaskGetIdleRunTimeCounter_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TickType_t cmock_to_return);
#define xTaskGenericNotify_ExpectAndReturn(xTaskToNotify, ulValue, eAction, pulPreviousNotificationValue, cmock_retval) xTaskGenericNotify_CMockExpectAndReturn(__LINE__, xTaskToNotify, ulValue, eAction, pulPreviousNotificationValue, cmock_retval)
void xTaskGenericNotify_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t* pulPreviousNotificationValue, BaseType_t cmock_to_return);
#define xTaskGenericNotify_ExpectWithArrayAndReturn(xTaskToNotify, ulValue, eAction, pulPreviousNotificationValue, pulPreviousNotificationValue_Depth, cmock_retval) xTaskGenericNotify_CMockExpectWithArrayAndReturn(__LINE__, xTaskToNotify, ulValue, eAction, pulPreviousNotificationValue, pulPreviousNotificationValue_Depth, cmock_retval)
void xTaskGenericNotify_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t* pulPreviousNotificationValue, int pulPreviousNotificationValue_Depth, BaseType_t cmock_to_return);
#define xTaskGenericNotifyFromISR_ExpectAndReturn(xTaskToNotify, ulValue, eAction, pulPreviousNotificationValue, pxHigherPriorityTaskWoken, cmock_retval) xTaskGenericNotifyFromISR_CMockExpectAndReturn(__LINE__, xTaskToNotify, ulValue, eAction, pulPreviousNotificationValue, pxHigherPriorityTaskWoken, cmock_retval)
void xTaskGenericNotifyFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t* pulPreviousNotificationValue, BaseType_t* pxHigherPriorityTaskWoken, BaseType_t cmock_to_return);
#define xTaskGenericNotifyFromISR_ExpectWithArrayAndReturn(xTaskToNotify, ulValue, eAction, pulPreviousNotificationValue, pulPreviousNotificationValue_Depth, pxHigherPriorityTaskWoken, pxHigherPriorityTaskWoken_Depth, cmock_retval) xTaskGenericNotifyFromISR_CMockExpectWithArrayAndReturn(__LINE__, xTaskToNotify, ulValue, eAction, pulPreviousNotificationValue, pulPreviousNotificationValue_Depth, pxHigherPriorityTaskWoken, pxHigherPriorityTaskWoken_Depth, cmock_retval)
void xTaskGenericNotifyFromISR_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t* pulPreviousNotificationValue, int pulPreviousNotificationValue_Depth, BaseType_t* pxHigherPriorityTaskWoken, int pxHigherPriorityTaskWoken_Depth, BaseType_t cmock_to_return);
#define xTaskNotifyWait_ExpectAndReturn(ulBitsToClearOnEntry, ulBitsToClearOnExit, pulNotificationValue, xTicksToWait, cmock_retval) xTaskNotifyWait_CMockExpectAndReturn(__LINE__, ulBitsToClearOnEntry, ulBitsToClearOnExit, pulNotificationValue, xTicksToWait, cmock_retval)
void xTaskNotifyWait_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t* pulNotificationValue, TickType_t xTicksToWait, BaseType_t cmock_to_return);
#define xTaskNotifyWait_ExpectWithArrayAndReturn(ulBitsToClearOnEntry, ulBitsToClearOnExit, pulNotificationValue, pulNotificationValue_Depth, xTicksToWait, cmock_retval) xTaskNotifyWait_CMockExpectWithArrayAndReturn(__LINE__, ulBitsToClearOnEntry, ulBitsToClearOnExit, pulNotificationValue, pulNotificationValue_Depth, xTicksToWait, cmock_retval)
void xTaskNotifyWait_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t* pulNotificationValue, int pulNotificationValue_Depth, TickType_t xTicksToWait, BaseType_t cmock_to_return);
#define vTaskNotifyGiveFromISR_Expect(xTaskToNotify, pxHigherPriorityTaskWoken) vTaskNotifyGiveFromISR_CMockExpect(__LINE__, xTaskToNotify, pxHigherPriorityTaskWoken)
void vTaskNotifyGiveFromISR_CMockExpect(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToNotify, BaseType_t* pxHigherPriorityTaskWoken);
#define vTaskNotifyGiveFromISR_ExpectWithArray(xTaskToNotify, pxHigherPriorityTaskWoken, pxHigherPriorityTaskWoken_Depth) vTaskNotifyGiveFromISR_CMockExpectWithArray(__LINE__, xTaskToNotify, pxHigherPriorityTaskWoken, pxHigherPriorityTaskWoken_Depth)
void vTaskNotifyGiveFromISR_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToNotify, BaseType_t* pxHigherPriorityTaskWoken, int pxHigherPriorityTaskWoken_Depth);
#define ulTaskNotifyTake_ExpectAndReturn(xClearCountOnExit, xTicksToWait, cmock_retval) ulTaskNotifyTake_CMockExpectAndReturn(__LINE__, xClearCountOnExit, xTicksToWait, cmock_retval)
void ulTaskNotifyTake_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t xClearCountOnExit, TickType_t xTicksToWait, uint32_t cmock_to_return);
#define xTaskNotifyStateClear_ExpectAndReturn(xTask, cmock_retval) xTaskNotifyStateClear_CMockExpectAndReturn(__LINE__, xTask, cmock_retval)
void xTaskNotifyStateClear_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, BaseType_t cmock_to_return);
#define xTaskIncrementTick_ExpectAndReturn(cmock_retval) xTaskIncrementTick_CMockExpectAndReturn(__LINE__, cmock_retval)
void xTaskIncrementTick_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define vTaskPlaceOnEventList_Expect(pxEventList, xTicksToWait) vTaskPlaceOnEventList_CMockExpect(__LINE__, pxEventList, xTicksToWait)
void vTaskPlaceOnEventList_CMockExpect(UNITY_LINE_TYPE cmock_line, List_t* const pxEventList, const TickType_t xTicksToWait);
#define vTaskPlaceOnEventList_ExpectWithArray(pxEventList, pxEventList_Depth, xTicksToWait) vTaskPlaceOnEventList_CMockExpectWithArray(__LINE__, pxEventList, pxEventList_Depth, xTicksToWait)
void vTaskPlaceOnEventList_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, List_t* const pxEventList, int pxEventList_Depth, const TickType_t xTicksToWait);
#define vTaskPlaceOnUnorderedEventList_Expect(pxEventList, xItemValue, xTicksToWait) vTaskPlaceOnUnorderedEventList_CMockExpect(__LINE__, pxEventList, xItemValue, xTicksToWait)
void vTaskPlaceOnUnorderedEventList_CMockExpect(UNITY_LINE_TYPE cmock_line, List_t* pxEventList, const TickType_t xItemValue, const TickType_t xTicksToWait);
#define vTaskPlaceOnUnorderedEventList_ExpectWithArray(pxEventList, pxEventList_Depth, xItemValue, xTicksToWait) vTaskPlaceOnUnorderedEventList_CMockExpectWithArray(__LINE__, pxEventList, pxEventList_Depth, xItemValue, xTicksToWait)
void vTaskPlaceOnUnorderedEventList_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, List_t* pxEventList, int pxEventList_Depth, const TickType_t xItemValue, const TickType_t xTicksToWait);
#define vTaskPlaceOnEventListRestricted_Expect(pxEventList, xTicksToWait, xWaitIndefinitely) vTaskPlaceOnEventListRestricted_CMockExpect(__LINE__, pxEventList, xTicksToWait, xWaitIndefinitely)
void vTaskPlaceOnEventListRestricted_CMockExpect(UNITY_LINE_TYPE cmock_line, List_t* const pxEventList, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely);
#define vTaskPlaceOnEventListRestricted_ExpectWithArray(pxEventList, pxEventList_Depth, xTicksToWait, xWaitIndefinitely) vTaskPlaceOnEventListRestricted_CMockExpectWithArray(__LINE__, pxEventList, pxEventList_Depth, xTicksToWait, xWaitIndefinitely)
void vTaskPlaceOnEventListRestricted_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, List_t* const pxEventList, int pxEventList_Depth, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely);
#define xTaskRemoveFromEventList_ExpectAndReturn(pxEventList, cmock_retval) xTaskRemoveFromEventList_CMockExpectAndReturn(__LINE__, pxEventList, cmock_retval)
void xTaskRemoveFromEventList_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const List_t* const pxEventList, BaseType_t cmock_to_return);
#define xTaskRemoveFromEventList_ExpectWithArrayAndReturn(pxEventList, pxEventList_Depth, cmock_retval) xTaskRemoveFromEventList_CMockExpectWithArrayAndReturn(__LINE__, pxEventList, pxEventList_Depth, cmock_retval)
void xTaskRemoveFromEventList_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const List_t* const pxEventList, int pxEventList_Depth, BaseType_t cmock_to_return);
#define vTaskRemoveFromUnorderedEventList_Expect(pxEventListItem, xItemValue) vTaskRemoveFromUnorderedEventList_CMockExpect(__LINE__, pxEventListItem, xItemValue)
void vTaskRemoveFromUnorderedEventList_CMockExpect(UNITY_LINE_TYPE cmock_line, ListItem_t* pxEventListItem, const TickType_t xItemValue);
#define vTaskRemoveFromUnorderedEventList_ExpectWithArray(pxEventListItem, pxEventListItem_Depth, xItemValue) vTaskRemoveFromUnorderedEventList_CMockExpectWithArray(__LINE__, pxEventListItem, pxEventListItem_Depth, xItemValue)
void vTaskRemoveFromUnorderedEventList_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, ListItem_t* pxEventListItem, int pxEventListItem_Depth, const TickType_t xItemValue);
#define vTaskSwitchContext_Expect() vTaskSwitchContext_CMockExpect(__LINE__)
void vTaskSwitchContext_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define uxTaskResetEventItemValue_ExpectAndReturn(cmock_retval) uxTaskResetEventItemValue_CMockExpectAndReturn(__LINE__, cmock_retval)
void uxTaskResetEventItemValue_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TickType_t cmock_to_return);
#define xTaskGetCurrentTaskHandle_ExpectAndReturn(cmock_retval) xTaskGetCurrentTaskHandle_CMockExpectAndReturn(__LINE__, cmock_retval)
void xTaskGetCurrentTaskHandle_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t cmock_to_return);
#define vTaskSetTimeOutState_Expect(pxTimeOut) vTaskSetTimeOutState_CMockExpect(__LINE__, pxTimeOut)
void vTaskSetTimeOutState_CMockExpect(UNITY_LINE_TYPE cmock_line, TimeOut_t* const pxTimeOut);
#define vTaskSetTimeOutState_ExpectWithArray(pxTimeOut, pxTimeOut_Depth) vTaskSetTimeOutState_CMockExpectWithArray(__LINE__, pxTimeOut, pxTimeOut_Depth)
void vTaskSetTimeOutState_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, TimeOut_t* const pxTimeOut, int pxTimeOut_Depth);
#define xTaskCheckForTimeOut_ExpectAndReturn(pxTimeOut, pxTicksToWait, cmock_retval) xTaskCheckForTimeOut_CMockExpectAndReturn(__LINE__, pxTimeOut, pxTicksToWait, cmock_retval)
void xTaskCheckForTimeOut_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TimeOut_t* const pxTimeOut, TickType_t* const pxTicksToWait, BaseType_t cmock_to_return);
#define xTaskCheckForTimeOut_ExpectWithArrayAndReturn(pxTimeOut, pxTimeOut_Depth, pxTicksToWait, pxTicksToWait_Depth, cmock_retval) xTaskCheckForTimeOut_CMockExpectWithArrayAndReturn(__LINE__, pxTimeOut, pxTimeOut_Depth, pxTicksToWait, pxTicksToWait_Depth, cmock_retval)
void xTaskCheckForTimeOut_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, TimeOut_t* const pxTimeOut, int pxTimeOut_Depth, TickType_t* const pxTicksToWait, int pxTicksToWait_Depth, BaseType_t cmock_to_return);
#define vTaskMissedYield_Expect() vTaskMissedYield_CMockExpect(__LINE__)
void vTaskMissedYield_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define xTaskGetSchedulerState_ExpectAndReturn(cmock_retval) xTaskGetSchedulerState_CMockExpectAndReturn(__LINE__, cmock_retval)
void xTaskGetSchedulerState_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskPriorityInherit_ExpectAndReturn(pxMutexHolder, cmock_retval) xTaskPriorityInherit_CMockExpectAndReturn(__LINE__, pxMutexHolder, cmock_retval)
void xTaskPriorityInherit_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t const pxMutexHolder, BaseType_t cmock_to_return);
#define xTaskPriorityDisinherit_ExpectAndReturn(pxMutexHolder, cmock_retval) xTaskPriorityDisinherit_CMockExpectAndReturn(__LINE__, pxMutexHolder, cmock_retval)
void xTaskPriorityDisinherit_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t const pxMutexHolder, BaseType_t cmock_to_return);
#define vTaskPriorityDisinheritAfterTimeout_Expect(pxMutexHolder, uxHighestPriorityWaitingTask) vTaskPriorityDisinheritAfterTimeout_CMockExpect(__LINE__, pxMutexHolder, uxHighestPriorityWaitingTask)
void vTaskPriorityDisinheritAfterTimeout_CMockExpect(UNITY_LINE_TYPE cmock_line, TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestPriorityWaitingTask);
#define uxTaskGetTaskNumber_ExpectAndReturn(xTask, cmock_retval) uxTaskGetTaskNumber_CMockExpectAndReturn(__LINE__, xTask, cmock_retval)
void uxTaskGetTaskNumber_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, UBaseType_t cmock_to_return);
#define vTaskSetTaskNumber_Expect(xTask, uxHandle) vTaskSetTaskNumber_CMockExpect(__LINE__, xTask, uxHandle)
void vTaskSetTaskNumber_CMockExpect(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, const UBaseType_t uxHandle);
#define vTaskStepTick_Expect(xTicksToJump) vTaskStepTick_CMockExpect(__LINE__, xTicksToJump)
void vTaskStepTick_CMockExpect(UNITY_LINE_TYPE cmock_line, const TickType_t xTicksToJump);
#define eTaskConfirmSleepModeStatus_ExpectAndReturn(cmock_retval) eTaskConfirmSleepModeStatus_CMockExpectAndReturn(__LINE__, cmock_retval)
void eTaskConfirmSleepModeStatus_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, eSleepModeStatus cmock_to_return);
#define pvTaskIncrementMutexHeldCount_ExpectAndReturn(cmock_retval) pvTaskIncrementMutexHeldCount_CMockExpectAndReturn(__LINE__, cmock_retval)
void pvTaskIncrementMutexHeldCount_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t cmock_to_return);
#define vTaskInternalSetTimeOutState_Expect(pxTimeOut) vTaskInternalSetTimeOutState_CMockExpect(__LINE__, pxTimeOut)
void vTaskInternalSetTimeOutState_CMockExpect(UNITY_LINE_TYPE cmock_line, TimeOut_t* const pxTimeOut);
#define vTaskInternalSetTimeOutState_ExpectWithArray(pxTimeOut, pxTimeOut_Depth) vTaskInternalSetTimeOutState_CMockExpectWithArray(__LINE__, pxTimeOut, pxTimeOut_Depth)
void vTaskInternalSetTimeOutState_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, TimeOut_t* const pxTimeOut, int pxTimeOut_Depth);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
