/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKTASK_H
#define _MOCKTASK_H

#include "FreeRTOS.h"
#include "task.h"
#include "unity.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mocktask_Init(void);
void Mocktask_Destroy(void);
void Mocktask_Verify(void);

#define xTaskCreate_IgnoreAndReturn(cmock_retval) xTaskCreate_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTaskCreate_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskCreate_ExpectAnyArgsAndReturn(cmock_retval) xTaskCreate_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xTaskCreate_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskCreate_ExpectAndReturn(pxTaskCode, pcName, usStackDepth, pvParameters, uxPriority, pxCreatedTask, cmock_retval) xTaskCreate_CMockExpectAndReturn(__LINE__, pxTaskCode, pcName, usStackDepth, pvParameters, uxPriority, pxCreatedTask, cmock_retval)
void xTaskCreate_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskFunction_t pxTaskCode, const char* const pcName, const configSTACK_DEPTH_TYPE usStackDepth, void* const pvParameters, UBaseType_t uxPriority, TaskHandle_t* const pxCreatedTask, BaseType_t cmock_to_return);
#define xTaskCreate_ExpectWithArrayAndReturn(pxTaskCode, pcName, usStackDepth, pvParameters, pvParameters_Depth, uxPriority, pxCreatedTask, pxCreatedTask_Depth, cmock_retval) xTaskCreate_CMockExpectWithArrayAndReturn(__LINE__, pxTaskCode, pcName, usStackDepth, pvParameters, pvParameters_Depth, uxPriority, pxCreatedTask, pxCreatedTask_Depth, cmock_retval)
void xTaskCreate_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, TaskFunction_t pxTaskCode, const char* const pcName, const configSTACK_DEPTH_TYPE usStackDepth, void* const pvParameters, int pvParameters_Depth, UBaseType_t uxPriority, TaskHandle_t* const pxCreatedTask, int pxCreatedTask_Depth, BaseType_t cmock_to_return);
#define xTaskCreate_IgnoreArg_pxTaskCode() xTaskCreate_CMockIgnoreArg_pxTaskCode(__LINE__)
void xTaskCreate_CMockIgnoreArg_pxTaskCode(UNITY_LINE_TYPE cmock_line);
#define xTaskCreate_IgnoreArg_pcName() xTaskCreate_CMockIgnoreArg_pcName(__LINE__)
void xTaskCreate_CMockIgnoreArg_pcName(UNITY_LINE_TYPE cmock_line);
#define xTaskCreate_IgnoreArg_usStackDepth() xTaskCreate_CMockIgnoreArg_usStackDepth(__LINE__)
void xTaskCreate_CMockIgnoreArg_usStackDepth(UNITY_LINE_TYPE cmock_line);
#define xTaskCreate_IgnoreArg_pvParameters() xTaskCreate_CMockIgnoreArg_pvParameters(__LINE__)
void xTaskCreate_CMockIgnoreArg_pvParameters(UNITY_LINE_TYPE cmock_line);
#define xTaskCreate_IgnoreArg_uxPriority() xTaskCreate_CMockIgnoreArg_uxPriority(__LINE__)
void xTaskCreate_CMockIgnoreArg_uxPriority(UNITY_LINE_TYPE cmock_line);
#define xTaskCreate_IgnoreArg_pxCreatedTask() xTaskCreate_CMockIgnoreArg_pxCreatedTask(__LINE__)
void xTaskCreate_CMockIgnoreArg_pxCreatedTask(UNITY_LINE_TYPE cmock_line);
#define xTaskCreateStatic_IgnoreAndReturn(cmock_retval) xTaskCreateStatic_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTaskCreateStatic_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t cmock_to_return);
#define xTaskCreateStatic_ExpectAnyArgsAndReturn(cmock_retval) xTaskCreateStatic_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xTaskCreateStatic_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t cmock_to_return);
#define xTaskCreateStatic_ExpectAndReturn(pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, puxStackBuffer, pxTaskBuffer, cmock_retval) xTaskCreateStatic_CMockExpectAndReturn(__LINE__, pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, puxStackBuffer, pxTaskBuffer, cmock_retval)
void xTaskCreateStatic_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskFunction_t pxTaskCode, const char* const pcName, const uint32_t ulStackDepth, void* const pvParameters, UBaseType_t uxPriority, StackType_t* const puxStackBuffer, StaticTask_t* const pxTaskBuffer, TaskHandle_t cmock_to_return);
#define xTaskCreateStatic_ExpectWithArrayAndReturn(pxTaskCode, pcName, ulStackDepth, pvParameters, pvParameters_Depth, uxPriority, puxStackBuffer, puxStackBuffer_Depth, pxTaskBuffer, pxTaskBuffer_Depth, cmock_retval) xTaskCreateStatic_CMockExpectWithArrayAndReturn(__LINE__, pxTaskCode, pcName, ulStackDepth, pvParameters, pvParameters_Depth, uxPriority, puxStackBuffer, puxStackBuffer_Depth, pxTaskBuffer, pxTaskBuffer_Depth, cmock_retval)
void xTaskCreateStatic_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, TaskFunction_t pxTaskCode, const char* const pcName, const uint32_t ulStackDepth, void* const pvParameters, int pvParameters_Depth, UBaseType_t uxPriority, StackType_t* const puxStackBuffer, int puxStackBuffer_Depth, StaticTask_t* const pxTaskBuffer, int pxTaskBuffer_Depth, TaskHandle_t cmock_to_return);
#define xTaskCreateStatic_IgnoreArg_pxTaskCode() xTaskCreateStatic_CMockIgnoreArg_pxTaskCode(__LINE__)
void xTaskCreateStatic_CMockIgnoreArg_pxTaskCode(UNITY_LINE_TYPE cmock_line);
#define xTaskCreateStatic_IgnoreArg_pcName() xTaskCreateStatic_CMockIgnoreArg_pcName(__LINE__)
void xTaskCreateStatic_CMockIgnoreArg_pcName(UNITY_LINE_TYPE cmock_line);
#define xTaskCreateStatic_IgnoreArg_ulStackDepth() xTaskCreateStatic_CMockIgnoreArg_ulStackDepth(__LINE__)
void xTaskCreateStatic_CMockIgnoreArg_ulStackDepth(UNITY_LINE_TYPE cmock_line);
#define xTaskCreateStatic_IgnoreArg_pvParameters() xTaskCreateStatic_CMockIgnoreArg_pvParameters(__LINE__)
void xTaskCreateStatic_CMockIgnoreArg_pvParameters(UNITY_LINE_TYPE cmock_line);
#define xTaskCreateStatic_IgnoreArg_uxPriority() xTaskCreateStatic_CMockIgnoreArg_uxPriority(__LINE__)
void xTaskCreateStatic_CMockIgnoreArg_uxPriority(UNITY_LINE_TYPE cmock_line);
#define xTaskCreateStatic_IgnoreArg_puxStackBuffer() xTaskCreateStatic_CMockIgnoreArg_puxStackBuffer(__LINE__)
void xTaskCreateStatic_CMockIgnoreArg_puxStackBuffer(UNITY_LINE_TYPE cmock_line);
#define xTaskCreateStatic_IgnoreArg_pxTaskBuffer() xTaskCreateStatic_CMockIgnoreArg_pxTaskBuffer(__LINE__)
void xTaskCreateStatic_CMockIgnoreArg_pxTaskBuffer(UNITY_LINE_TYPE cmock_line);
#define xTaskCreateRestricted_IgnoreAndReturn(cmock_retval) xTaskCreateRestricted_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTaskCreateRestricted_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskCreateRestricted_ExpectAnyArgsAndReturn(cmock_retval) xTaskCreateRestricted_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xTaskCreateRestricted_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskCreateRestricted_ExpectAndReturn(pxTaskDefinition, pxCreatedTask, cmock_retval) xTaskCreateRestricted_CMockExpectAndReturn(__LINE__, pxTaskDefinition, pxCreatedTask, cmock_retval)
void xTaskCreateRestricted_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const TaskParameters_t* const pxTaskDefinition, TaskHandle_t* pxCreatedTask, BaseType_t cmock_to_return);
#define xTaskCreateRestricted_ExpectWithArrayAndReturn(pxTaskDefinition, pxTaskDefinition_Depth, pxCreatedTask, pxCreatedTask_Depth, cmock_retval) xTaskCreateRestricted_CMockExpectWithArrayAndReturn(__LINE__, pxTaskDefinition, pxTaskDefinition_Depth, pxCreatedTask, pxCreatedTask_Depth, cmock_retval)
void xTaskCreateRestricted_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const TaskParameters_t* const pxTaskDefinition, int pxTaskDefinition_Depth, TaskHandle_t* pxCreatedTask, int pxCreatedTask_Depth, BaseType_t cmock_to_return);
#define xTaskCreateRestricted_IgnoreArg_pxTaskDefinition() xTaskCreateRestricted_CMockIgnoreArg_pxTaskDefinition(__LINE__)
void xTaskCreateRestricted_CMockIgnoreArg_pxTaskDefinition(UNITY_LINE_TYPE cmock_line);
#define xTaskCreateRestricted_IgnoreArg_pxCreatedTask() xTaskCreateRestricted_CMockIgnoreArg_pxCreatedTask(__LINE__)
void xTaskCreateRestricted_CMockIgnoreArg_pxCreatedTask(UNITY_LINE_TYPE cmock_line);
#define xTaskCreateRestrictedStatic_IgnoreAndReturn(cmock_retval) xTaskCreateRestrictedStatic_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTaskCreateRestrictedStatic_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskCreateRestrictedStatic_ExpectAnyArgsAndReturn(cmock_retval) xTaskCreateRestrictedStatic_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xTaskCreateRestrictedStatic_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskCreateRestrictedStatic_ExpectAndReturn(pxTaskDefinition, pxCreatedTask, cmock_retval) xTaskCreateRestrictedStatic_CMockExpectAndReturn(__LINE__, pxTaskDefinition, pxCreatedTask, cmock_retval)
void xTaskCreateRestrictedStatic_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const TaskParameters_t* const pxTaskDefinition, TaskHandle_t* pxCreatedTask, BaseType_t cmock_to_return);
#define xTaskCreateRestrictedStatic_ExpectWithArrayAndReturn(pxTaskDefinition, pxTaskDefinition_Depth, pxCreatedTask, pxCreatedTask_Depth, cmock_retval) xTaskCreateRestrictedStatic_CMockExpectWithArrayAndReturn(__LINE__, pxTaskDefinition, pxTaskDefinition_Depth, pxCreatedTask, pxCreatedTask_Depth, cmock_retval)
void xTaskCreateRestrictedStatic_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const TaskParameters_t* const pxTaskDefinition, int pxTaskDefinition_Depth, TaskHandle_t* pxCreatedTask, int pxCreatedTask_Depth, BaseType_t cmock_to_return);
#define xTaskCreateRestrictedStatic_IgnoreArg_pxTaskDefinition() xTaskCreateRestrictedStatic_CMockIgnoreArg_pxTaskDefinition(__LINE__)
void xTaskCreateRestrictedStatic_CMockIgnoreArg_pxTaskDefinition(UNITY_LINE_TYPE cmock_line);
#define xTaskCreateRestrictedStatic_IgnoreArg_pxCreatedTask() xTaskCreateRestrictedStatic_CMockIgnoreArg_pxCreatedTask(__LINE__)
void xTaskCreateRestrictedStatic_CMockIgnoreArg_pxCreatedTask(UNITY_LINE_TYPE cmock_line);
#define vTaskAllocateMPURegions_Ignore() vTaskAllocateMPURegions_CMockIgnore()
void vTaskAllocateMPURegions_CMockIgnore(void);
#define vTaskAllocateMPURegions_ExpectAnyArgs() vTaskAllocateMPURegions_CMockExpectAnyArgs(__LINE__)
void vTaskAllocateMPURegions_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vTaskAllocateMPURegions_Expect(xTask, pxRegions) vTaskAllocateMPURegions_CMockExpect(__LINE__, xTask, pxRegions)
void vTaskAllocateMPURegions_CMockExpect(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, const MemoryRegion_t* const pxRegions);
#define vTaskAllocateMPURegions_ExpectWithArray(xTask, pxRegions, pxRegions_Depth) vTaskAllocateMPURegions_CMockExpectWithArray(__LINE__, xTask, pxRegions, pxRegions_Depth)
void vTaskAllocateMPURegions_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, const MemoryRegion_t* const pxRegions, int pxRegions_Depth);
#define vTaskAllocateMPURegions_IgnoreArg_xTask() vTaskAllocateMPURegions_CMockIgnoreArg_xTask(__LINE__)
void vTaskAllocateMPURegions_CMockIgnoreArg_xTask(UNITY_LINE_TYPE cmock_line);
#define vTaskAllocateMPURegions_IgnoreArg_pxRegions() vTaskAllocateMPURegions_CMockIgnoreArg_pxRegions(__LINE__)
void vTaskAllocateMPURegions_CMockIgnoreArg_pxRegions(UNITY_LINE_TYPE cmock_line);
#define vTaskDelete_Ignore() vTaskDelete_CMockIgnore()
void vTaskDelete_CMockIgnore(void);
#define vTaskDelete_ExpectAnyArgs() vTaskDelete_CMockExpectAnyArgs(__LINE__)
void vTaskDelete_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vTaskDelete_Expect(xTaskToDelete) vTaskDelete_CMockExpect(__LINE__, xTaskToDelete)
void vTaskDelete_CMockExpect(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToDelete);
#define vTaskDelete_IgnoreArg_xTaskToDelete() vTaskDelete_CMockIgnoreArg_xTaskToDelete(__LINE__)
void vTaskDelete_CMockIgnoreArg_xTaskToDelete(UNITY_LINE_TYPE cmock_line);
#define vTaskDelay_Ignore() vTaskDelay_CMockIgnore()
void vTaskDelay_CMockIgnore(void);
#define vTaskDelay_ExpectAnyArgs() vTaskDelay_CMockExpectAnyArgs(__LINE__)
void vTaskDelay_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vTaskDelay_Expect(xTicksToDelay) vTaskDelay_CMockExpect(__LINE__, xTicksToDelay)
void vTaskDelay_CMockExpect(UNITY_LINE_TYPE cmock_line, const TickType_t xTicksToDelay);
#define vTaskDelay_IgnoreArg_xTicksToDelay() vTaskDelay_CMockIgnoreArg_xTicksToDelay(__LINE__)
void vTaskDelay_CMockIgnoreArg_xTicksToDelay(UNITY_LINE_TYPE cmock_line);
#define vTaskDelayUntil_Ignore() vTaskDelayUntil_CMockIgnore()
void vTaskDelayUntil_CMockIgnore(void);
#define vTaskDelayUntil_ExpectAnyArgs() vTaskDelayUntil_CMockExpectAnyArgs(__LINE__)
void vTaskDelayUntil_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vTaskDelayUntil_Expect(pxPreviousWakeTime, xTimeIncrement) vTaskDelayUntil_CMockExpect(__LINE__, pxPreviousWakeTime, xTimeIncrement)
void vTaskDelayUntil_CMockExpect(UNITY_LINE_TYPE cmock_line, TickType_t* const pxPreviousWakeTime, const TickType_t xTimeIncrement);
#define vTaskDelayUntil_ExpectWithArray(pxPreviousWakeTime, pxPreviousWakeTime_Depth, xTimeIncrement) vTaskDelayUntil_CMockExpectWithArray(__LINE__, pxPreviousWakeTime, pxPreviousWakeTime_Depth, xTimeIncrement)
void vTaskDelayUntil_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, TickType_t* const pxPreviousWakeTime, int pxPreviousWakeTime_Depth, const TickType_t xTimeIncrement);
#define vTaskDelayUntil_IgnoreArg_pxPreviousWakeTime() vTaskDelayUntil_CMockIgnoreArg_pxPreviousWakeTime(__LINE__)
void vTaskDelayUntil_CMockIgnoreArg_pxPreviousWakeTime(UNITY_LINE_TYPE cmock_line);
#define vTaskDelayUntil_IgnoreArg_xTimeIncrement() vTaskDelayUntil_CMockIgnoreArg_xTimeIncrement(__LINE__)
void vTaskDelayUntil_CMockIgnoreArg_xTimeIncrement(UNITY_LINE_TYPE cmock_line);
#define xTaskAbortDelay_IgnoreAndReturn(cmock_retval) xTaskAbortDelay_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTaskAbortDelay_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskAbortDelay_ExpectAnyArgsAndReturn(cmock_retval) xTaskAbortDelay_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xTaskAbortDelay_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskAbortDelay_ExpectAndReturn(xTask, cmock_retval) xTaskAbortDelay_CMockExpectAndReturn(__LINE__, xTask, cmock_retval)
void xTaskAbortDelay_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, BaseType_t cmock_to_return);
#define xTaskAbortDelay_IgnoreArg_xTask() xTaskAbortDelay_CMockIgnoreArg_xTask(__LINE__)
void xTaskAbortDelay_CMockIgnoreArg_xTask(UNITY_LINE_TYPE cmock_line);
#define uxTaskPriorityGet_IgnoreAndReturn(cmock_retval) uxTaskPriorityGet_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void uxTaskPriorityGet_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, UBaseType_t cmock_to_return);
#define uxTaskPriorityGet_ExpectAnyArgsAndReturn(cmock_retval) uxTaskPriorityGet_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void uxTaskPriorityGet_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, UBaseType_t cmock_to_return);
#define uxTaskPriorityGet_ExpectAndReturn(xTask, cmock_retval) uxTaskPriorityGet_CMockExpectAndReturn(__LINE__, xTask, cmock_retval)
void uxTaskPriorityGet_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const TaskHandle_t xTask, UBaseType_t cmock_to_return);
#define uxTaskPriorityGet_IgnoreArg_xTask() uxTaskPriorityGet_CMockIgnoreArg_xTask(__LINE__)
void uxTaskPriorityGet_CMockIgnoreArg_xTask(UNITY_LINE_TYPE cmock_line);
#define uxTaskPriorityGetFromISR_IgnoreAndReturn(cmock_retval) uxTaskPriorityGetFromISR_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void uxTaskPriorityGetFromISR_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, UBaseType_t cmock_to_return);
#define uxTaskPriorityGetFromISR_ExpectAnyArgsAndReturn(cmock_retval) uxTaskPriorityGetFromISR_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void uxTaskPriorityGetFromISR_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, UBaseType_t cmock_to_return);
#define uxTaskPriorityGetFromISR_ExpectAndReturn(xTask, cmock_retval) uxTaskPriorityGetFromISR_CMockExpectAndReturn(__LINE__, xTask, cmock_retval)
void uxTaskPriorityGetFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const TaskHandle_t xTask, UBaseType_t cmock_to_return);
#define uxTaskPriorityGetFromISR_IgnoreArg_xTask() uxTaskPriorityGetFromISR_CMockIgnoreArg_xTask(__LINE__)
void uxTaskPriorityGetFromISR_CMockIgnoreArg_xTask(UNITY_LINE_TYPE cmock_line);
#define eTaskGetState_IgnoreAndReturn(cmock_retval) eTaskGetState_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void eTaskGetState_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, eTaskState cmock_to_return);
#define eTaskGetState_ExpectAnyArgsAndReturn(cmock_retval) eTaskGetState_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void eTaskGetState_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, eTaskState cmock_to_return);
#define eTaskGetState_ExpectAndReturn(xTask, cmock_retval) eTaskGetState_CMockExpectAndReturn(__LINE__, xTask, cmock_retval)
void eTaskGetState_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, eTaskState cmock_to_return);
#define eTaskGetState_IgnoreArg_xTask() eTaskGetState_CMockIgnoreArg_xTask(__LINE__)
void eTaskGetState_CMockIgnoreArg_xTask(UNITY_LINE_TYPE cmock_line);
#define vTaskGetInfo_Ignore() vTaskGetInfo_CMockIgnore()
void vTaskGetInfo_CMockIgnore(void);
#define vTaskGetInfo_ExpectAnyArgs() vTaskGetInfo_CMockExpectAnyArgs(__LINE__)
void vTaskGetInfo_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vTaskGetInfo_Expect(xTask, pxTaskStatus, xGetFreeStackSpace, eState) vTaskGetInfo_CMockExpect(__LINE__, xTask, pxTaskStatus, xGetFreeStackSpace, eState)
void vTaskGetInfo_CMockExpect(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, TaskStatus_t* pxTaskStatus, BaseType_t xGetFreeStackSpace, eTaskState eState);
#define vTaskGetInfo_ExpectWithArray(xTask, pxTaskStatus, pxTaskStatus_Depth, xGetFreeStackSpace, eState) vTaskGetInfo_CMockExpectWithArray(__LINE__, xTask, pxTaskStatus, pxTaskStatus_Depth, xGetFreeStackSpace, eState)
void vTaskGetInfo_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, TaskStatus_t* pxTaskStatus, int pxTaskStatus_Depth, BaseType_t xGetFreeStackSpace, eTaskState eState);
#define vTaskGetInfo_IgnoreArg_xTask() vTaskGetInfo_CMockIgnoreArg_xTask(__LINE__)
void vTaskGetInfo_CMockIgnoreArg_xTask(UNITY_LINE_TYPE cmock_line);
#define vTaskGetInfo_IgnoreArg_pxTaskStatus() vTaskGetInfo_CMockIgnoreArg_pxTaskStatus(__LINE__)
void vTaskGetInfo_CMockIgnoreArg_pxTaskStatus(UNITY_LINE_TYPE cmock_line);
#define vTaskGetInfo_IgnoreArg_xGetFreeStackSpace() vTaskGetInfo_CMockIgnoreArg_xGetFreeStackSpace(__LINE__)
void vTaskGetInfo_CMockIgnoreArg_xGetFreeStackSpace(UNITY_LINE_TYPE cmock_line);
#define vTaskGetInfo_IgnoreArg_eState() vTaskGetInfo_CMockIgnoreArg_eState(__LINE__)
void vTaskGetInfo_CMockIgnoreArg_eState(UNITY_LINE_TYPE cmock_line);
#define vTaskPrioritySet_Ignore() vTaskPrioritySet_CMockIgnore()
void vTaskPrioritySet_CMockIgnore(void);
#define vTaskPrioritySet_ExpectAnyArgs() vTaskPrioritySet_CMockExpectAnyArgs(__LINE__)
void vTaskPrioritySet_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vTaskPrioritySet_Expect(xTask, uxNewPriority) vTaskPrioritySet_CMockExpect(__LINE__, xTask, uxNewPriority)
void vTaskPrioritySet_CMockExpect(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, UBaseType_t uxNewPriority);
#define vTaskPrioritySet_IgnoreArg_xTask() vTaskPrioritySet_CMockIgnoreArg_xTask(__LINE__)
void vTaskPrioritySet_CMockIgnoreArg_xTask(UNITY_LINE_TYPE cmock_line);
#define vTaskPrioritySet_IgnoreArg_uxNewPriority() vTaskPrioritySet_CMockIgnoreArg_uxNewPriority(__LINE__)
void vTaskPrioritySet_CMockIgnoreArg_uxNewPriority(UNITY_LINE_TYPE cmock_line);
#define vTaskSuspend_Ignore() vTaskSuspend_CMockIgnore()
void vTaskSuspend_CMockIgnore(void);
#define vTaskSuspend_ExpectAnyArgs() vTaskSuspend_CMockExpectAnyArgs(__LINE__)
void vTaskSuspend_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vTaskSuspend_Expect(xTaskToSuspend) vTaskSuspend_CMockExpect(__LINE__, xTaskToSuspend)
void vTaskSuspend_CMockExpect(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToSuspend);
#define vTaskSuspend_IgnoreArg_xTaskToSuspend() vTaskSuspend_CMockIgnoreArg_xTaskToSuspend(__LINE__)
void vTaskSuspend_CMockIgnoreArg_xTaskToSuspend(UNITY_LINE_TYPE cmock_line);
#define vTaskResume_Ignore() vTaskResume_CMockIgnore()
void vTaskResume_CMockIgnore(void);
#define vTaskResume_ExpectAnyArgs() vTaskResume_CMockExpectAnyArgs(__LINE__)
void vTaskResume_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vTaskResume_Expect(xTaskToResume) vTaskResume_CMockExpect(__LINE__, xTaskToResume)
void vTaskResume_CMockExpect(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToResume);
#define vTaskResume_IgnoreArg_xTaskToResume() vTaskResume_CMockIgnoreArg_xTaskToResume(__LINE__)
void vTaskResume_CMockIgnoreArg_xTaskToResume(UNITY_LINE_TYPE cmock_line);
#define xTaskResumeFromISR_IgnoreAndReturn(cmock_retval) xTaskResumeFromISR_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTaskResumeFromISR_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskResumeFromISR_ExpectAnyArgsAndReturn(cmock_retval) xTaskResumeFromISR_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xTaskResumeFromISR_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskResumeFromISR_ExpectAndReturn(xTaskToResume, cmock_retval) xTaskResumeFromISR_CMockExpectAndReturn(__LINE__, xTaskToResume, cmock_retval)
void xTaskResumeFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToResume, BaseType_t cmock_to_return);
#define xTaskResumeFromISR_IgnoreArg_xTaskToResume() xTaskResumeFromISR_CMockIgnoreArg_xTaskToResume(__LINE__)
void xTaskResumeFromISR_CMockIgnoreArg_xTaskToResume(UNITY_LINE_TYPE cmock_line);
#define vTaskStartScheduler_Ignore() vTaskStartScheduler_CMockIgnore()
void vTaskStartScheduler_CMockIgnore(void);
#define vTaskStartScheduler_Expect() vTaskStartScheduler_CMockExpect(__LINE__)
void vTaskStartScheduler_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define vTaskEndScheduler_Ignore() vTaskEndScheduler_CMockIgnore()
void vTaskEndScheduler_CMockIgnore(void);
#define vTaskEndScheduler_Expect() vTaskEndScheduler_CMockExpect(__LINE__)
void vTaskEndScheduler_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define vTaskSuspendAll_Ignore() vTaskSuspendAll_CMockIgnore()
void vTaskSuspendAll_CMockIgnore(void);
#define vTaskSuspendAll_Expect() vTaskSuspendAll_CMockExpect(__LINE__)
void vTaskSuspendAll_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define xTaskResumeAll_IgnoreAndReturn(cmock_retval) xTaskResumeAll_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTaskResumeAll_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskResumeAll_ExpectAndReturn(cmock_retval) xTaskResumeAll_CMockExpectAndReturn(__LINE__, cmock_retval)
void xTaskResumeAll_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskGetTickCount_IgnoreAndReturn(cmock_retval) xTaskGetTickCount_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTaskGetTickCount_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, TickType_t cmock_to_return);
#define xTaskGetTickCount_ExpectAndReturn(cmock_retval) xTaskGetTickCount_CMockExpectAndReturn(__LINE__, cmock_retval)
void xTaskGetTickCount_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TickType_t cmock_to_return);
#define xTaskGetTickCountFromISR_IgnoreAndReturn(cmock_retval) xTaskGetTickCountFromISR_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTaskGetTickCountFromISR_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, TickType_t cmock_to_return);
#define xTaskGetTickCountFromISR_ExpectAndReturn(cmock_retval) xTaskGetTickCountFromISR_CMockExpectAndReturn(__LINE__, cmock_retval)
void xTaskGetTickCountFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TickType_t cmock_to_return);
#define uxTaskGetNumberOfTasks_IgnoreAndReturn(cmock_retval) uxTaskGetNumberOfTasks_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void uxTaskGetNumberOfTasks_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, UBaseType_t cmock_to_return);
#define uxTaskGetNumberOfTasks_ExpectAndReturn(cmock_retval) uxTaskGetNumberOfTasks_CMockExpectAndReturn(__LINE__, cmock_retval)
void uxTaskGetNumberOfTasks_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, UBaseType_t cmock_to_return);
#define pcTaskGetName_IgnoreAndReturn(cmock_retval) pcTaskGetName_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void pcTaskGetName_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, char* cmock_to_return);
#define pcTaskGetName_ExpectAnyArgsAndReturn(cmock_retval) pcTaskGetName_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void pcTaskGetName_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, char* cmock_to_return);
#define pcTaskGetName_ExpectAndReturn(xTaskToQuery, cmock_retval) pcTaskGetName_CMockExpectAndReturn(__LINE__, xTaskToQuery, cmock_retval)
void pcTaskGetName_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToQuery, char* cmock_to_return);
#define pcTaskGetName_IgnoreArg_xTaskToQuery() pcTaskGetName_CMockIgnoreArg_xTaskToQuery(__LINE__)
void pcTaskGetName_CMockIgnoreArg_xTaskToQuery(UNITY_LINE_TYPE cmock_line);
#define xTaskGetHandle_IgnoreAndReturn(cmock_retval) xTaskGetHandle_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTaskGetHandle_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t cmock_to_return);
#define xTaskGetHandle_ExpectAnyArgsAndReturn(cmock_retval) xTaskGetHandle_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xTaskGetHandle_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t cmock_to_return);
#define xTaskGetHandle_ExpectAndReturn(pcNameToQuery, cmock_retval) xTaskGetHandle_CMockExpectAndReturn(__LINE__, pcNameToQuery, cmock_retval)
void xTaskGetHandle_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const char* pcNameToQuery, TaskHandle_t cmock_to_return);
#define xTaskGetHandle_IgnoreArg_pcNameToQuery() xTaskGetHandle_CMockIgnoreArg_pcNameToQuery(__LINE__)
void xTaskGetHandle_CMockIgnoreArg_pcNameToQuery(UNITY_LINE_TYPE cmock_line);
#define uxTaskGetStackHighWaterMark_IgnoreAndReturn(cmock_retval) uxTaskGetStackHighWaterMark_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void uxTaskGetStackHighWaterMark_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, UBaseType_t cmock_to_return);
#define uxTaskGetStackHighWaterMark_ExpectAnyArgsAndReturn(cmock_retval) uxTaskGetStackHighWaterMark_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void uxTaskGetStackHighWaterMark_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, UBaseType_t cmock_to_return);
#define uxTaskGetStackHighWaterMark_ExpectAndReturn(xTask, cmock_retval) uxTaskGetStackHighWaterMark_CMockExpectAndReturn(__LINE__, xTask, cmock_retval)
void uxTaskGetStackHighWaterMark_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, UBaseType_t cmock_to_return);
#define uxTaskGetStackHighWaterMark_IgnoreArg_xTask() uxTaskGetStackHighWaterMark_CMockIgnoreArg_xTask(__LINE__)
void uxTaskGetStackHighWaterMark_CMockIgnoreArg_xTask(UNITY_LINE_TYPE cmock_line);
#define uxTaskGetStackHighWaterMark2_IgnoreAndReturn(cmock_retval) uxTaskGetStackHighWaterMark2_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void uxTaskGetStackHighWaterMark2_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, configSTACK_DEPTH_TYPE cmock_to_return);
#define uxTaskGetStackHighWaterMark2_ExpectAnyArgsAndReturn(cmock_retval) uxTaskGetStackHighWaterMark2_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void uxTaskGetStackHighWaterMark2_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, configSTACK_DEPTH_TYPE cmock_to_return);
#define uxTaskGetStackHighWaterMark2_ExpectAndReturn(xTask, cmock_retval) uxTaskGetStackHighWaterMark2_CMockExpectAndReturn(__LINE__, xTask, cmock_retval)
void uxTaskGetStackHighWaterMark2_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, configSTACK_DEPTH_TYPE cmock_to_return);
#define uxTaskGetStackHighWaterMark2_IgnoreArg_xTask() uxTaskGetStackHighWaterMark2_CMockIgnoreArg_xTask(__LINE__)
void uxTaskGetStackHighWaterMark2_CMockIgnoreArg_xTask(UNITY_LINE_TYPE cmock_line);
#define vTaskSetApplicationTaskTag_Ignore() vTaskSetApplicationTaskTag_CMockIgnore()
void vTaskSetApplicationTaskTag_CMockIgnore(void);
#define vTaskSetApplicationTaskTag_ExpectAnyArgs() vTaskSetApplicationTaskTag_CMockExpectAnyArgs(__LINE__)
void vTaskSetApplicationTaskTag_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vTaskSetApplicationTaskTag_Expect(xTask, pxHookFunction) vTaskSetApplicationTaskTag_CMockExpect(__LINE__, xTask, pxHookFunction)
void vTaskSetApplicationTaskTag_CMockExpect(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, TaskHookFunction_t pxHookFunction);
#define vTaskSetApplicationTaskTag_IgnoreArg_xTask() vTaskSetApplicationTaskTag_CMockIgnoreArg_xTask(__LINE__)
void vTaskSetApplicationTaskTag_CMockIgnoreArg_xTask(UNITY_LINE_TYPE cmock_line);
#define vTaskSetApplicationTaskTag_IgnoreArg_pxHookFunction() vTaskSetApplicationTaskTag_CMockIgnoreArg_pxHookFunction(__LINE__)
void vTaskSetApplicationTaskTag_CMockIgnoreArg_pxHookFunction(UNITY_LINE_TYPE cmock_line);
#define xTaskGetApplicationTaskTag_IgnoreAndReturn(cmock_retval) xTaskGetApplicationTaskTag_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTaskGetApplicationTaskTag_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, TaskHookFunction_t cmock_to_return);
#define xTaskGetApplicationTaskTag_ExpectAnyArgsAndReturn(cmock_retval) xTaskGetApplicationTaskTag_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xTaskGetApplicationTaskTag_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, TaskHookFunction_t cmock_to_return);
#define xTaskGetApplicationTaskTag_ExpectAndReturn(xTask, cmock_retval) xTaskGetApplicationTaskTag_CMockExpectAndReturn(__LINE__, xTask, cmock_retval)
void xTaskGetApplicationTaskTag_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, TaskHookFunction_t cmock_to_return);
#define xTaskGetApplicationTaskTag_IgnoreArg_xTask() xTaskGetApplicationTaskTag_CMockIgnoreArg_xTask(__LINE__)
void xTaskGetApplicationTaskTag_CMockIgnoreArg_xTask(UNITY_LINE_TYPE cmock_line);
#define xTaskGetApplicationTaskTagFromISR_IgnoreAndReturn(cmock_retval) xTaskGetApplicationTaskTagFromISR_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTaskGetApplicationTaskTagFromISR_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, TaskHookFunction_t cmock_to_return);
#define xTaskGetApplicationTaskTagFromISR_ExpectAnyArgsAndReturn(cmock_retval) xTaskGetApplicationTaskTagFromISR_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xTaskGetApplicationTaskTagFromISR_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, TaskHookFunction_t cmock_to_return);
#define xTaskGetApplicationTaskTagFromISR_ExpectAndReturn(xTask, cmock_retval) xTaskGetApplicationTaskTagFromISR_CMockExpectAndReturn(__LINE__, xTask, cmock_retval)
void xTaskGetApplicationTaskTagFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, TaskHookFunction_t cmock_to_return);
#define xTaskGetApplicationTaskTagFromISR_IgnoreArg_xTask() xTaskGetApplicationTaskTagFromISR_CMockIgnoreArg_xTask(__LINE__)
void xTaskGetApplicationTaskTagFromISR_CMockIgnoreArg_xTask(UNITY_LINE_TYPE cmock_line);
#define vTaskSetThreadLocalStoragePointer_Ignore() vTaskSetThreadLocalStoragePointer_CMockIgnore()
void vTaskSetThreadLocalStoragePointer_CMockIgnore(void);
#define vTaskSetThreadLocalStoragePointer_ExpectAnyArgs() vTaskSetThreadLocalStoragePointer_CMockExpectAnyArgs(__LINE__)
void vTaskSetThreadLocalStoragePointer_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vTaskSetThreadLocalStoragePointer_Expect(xTaskToSet, xIndex, pvValue) vTaskSetThreadLocalStoragePointer_CMockExpect(__LINE__, xTaskToSet, xIndex, pvValue)
void vTaskSetThreadLocalStoragePointer_CMockExpect(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToSet, BaseType_t xIndex, void* pvValue);
#define vTaskSetThreadLocalStoragePointer_ExpectWithArray(xTaskToSet, xIndex, pvValue, pvValue_Depth) vTaskSetThreadLocalStoragePointer_CMockExpectWithArray(__LINE__, xTaskToSet, xIndex, pvValue, pvValue_Depth)
void vTaskSetThreadLocalStoragePointer_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToSet, BaseType_t xIndex, void* pvValue, int pvValue_Depth);
#define vTaskSetThreadLocalStoragePointer_IgnoreArg_xTaskToSet() vTaskSetThreadLocalStoragePointer_CMockIgnoreArg_xTaskToSet(__LINE__)
void vTaskSetThreadLocalStoragePointer_CMockIgnoreArg_xTaskToSet(UNITY_LINE_TYPE cmock_line);
#define vTaskSetThreadLocalStoragePointer_IgnoreArg_xIndex() vTaskSetThreadLocalStoragePointer_CMockIgnoreArg_xIndex(__LINE__)
void vTaskSetThreadLocalStoragePointer_CMockIgnoreArg_xIndex(UNITY_LINE_TYPE cmock_line);
#define vTaskSetThreadLocalStoragePointer_IgnoreArg_pvValue() vTaskSetThreadLocalStoragePointer_CMockIgnoreArg_pvValue(__LINE__)
void vTaskSetThreadLocalStoragePointer_CMockIgnoreArg_pvValue(UNITY_LINE_TYPE cmock_line);
#define pvTaskGetThreadLocalStoragePointer_IgnoreAndReturn(cmock_retval) pvTaskGetThreadLocalStoragePointer_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void pvTaskGetThreadLocalStoragePointer_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, void* cmock_to_return);
#define pvTaskGetThreadLocalStoragePointer_ExpectAnyArgsAndReturn(cmock_retval) pvTaskGetThreadLocalStoragePointer_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void pvTaskGetThreadLocalStoragePointer_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, void* cmock_to_return);
#define pvTaskGetThreadLocalStoragePointer_ExpectAndReturn(xTaskToQuery, xIndex, cmock_retval) pvTaskGetThreadLocalStoragePointer_CMockExpectAndReturn(__LINE__, xTaskToQuery, xIndex, cmock_retval)
void pvTaskGetThreadLocalStoragePointer_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToQuery, BaseType_t xIndex, void* cmock_to_return);
#define pvTaskGetThreadLocalStoragePointer_IgnoreArg_xTaskToQuery() pvTaskGetThreadLocalStoragePointer_CMockIgnoreArg_xTaskToQuery(__LINE__)
void pvTaskGetThreadLocalStoragePointer_CMockIgnoreArg_xTaskToQuery(UNITY_LINE_TYPE cmock_line);
#define pvTaskGetThreadLocalStoragePointer_IgnoreArg_xIndex() pvTaskGetThreadLocalStoragePointer_CMockIgnoreArg_xIndex(__LINE__)
void pvTaskGetThreadLocalStoragePointer_CMockIgnoreArg_xIndex(UNITY_LINE_TYPE cmock_line);
#define xTaskCallApplicationTaskHook_IgnoreAndReturn(cmock_retval) xTaskCallApplicationTaskHook_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTaskCallApplicationTaskHook_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskCallApplicationTaskHook_ExpectAnyArgsAndReturn(cmock_retval) xTaskCallApplicationTaskHook_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xTaskCallApplicationTaskHook_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskCallApplicationTaskHook_ExpectAndReturn(xTask, pvParameter, cmock_retval) xTaskCallApplicationTaskHook_CMockExpectAndReturn(__LINE__, xTask, pvParameter, cmock_retval)
void xTaskCallApplicationTaskHook_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, void* pvParameter, BaseType_t cmock_to_return);
#define xTaskCallApplicationTaskHook_ExpectWithArrayAndReturn(xTask, pvParameter, pvParameter_Depth, cmock_retval) xTaskCallApplicationTaskHook_CMockExpectWithArrayAndReturn(__LINE__, xTask, pvParameter, pvParameter_Depth, cmock_retval)
void xTaskCallApplicationTaskHook_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, void* pvParameter, int pvParameter_Depth, BaseType_t cmock_to_return);
#define xTaskCallApplicationTaskHook_IgnoreArg_xTask() xTaskCallApplicationTaskHook_CMockIgnoreArg_xTask(__LINE__)
void xTaskCallApplicationTaskHook_CMockIgnoreArg_xTask(UNITY_LINE_TYPE cmock_line);
#define xTaskCallApplicationTaskHook_IgnoreArg_pvParameter() xTaskCallApplicationTaskHook_CMockIgnoreArg_pvParameter(__LINE__)
void xTaskCallApplicationTaskHook_CMockIgnoreArg_pvParameter(UNITY_LINE_TYPE cmock_line);
#define xTaskGetIdleTaskHandle_IgnoreAndReturn(cmock_retval) xTaskGetIdleTaskHandle_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTaskGetIdleTaskHandle_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t cmock_to_return);
#define xTaskGetIdleTaskHandle_ExpectAndReturn(cmock_retval) xTaskGetIdleTaskHandle_CMockExpectAndReturn(__LINE__, cmock_retval)
void xTaskGetIdleTaskHandle_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t cmock_to_return);
#define uxTaskGetSystemState_IgnoreAndReturn(cmock_retval) uxTaskGetSystemState_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void uxTaskGetSystemState_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, UBaseType_t cmock_to_return);
#define uxTaskGetSystemState_ExpectAnyArgsAndReturn(cmock_retval) uxTaskGetSystemState_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void uxTaskGetSystemState_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, UBaseType_t cmock_to_return);
#define uxTaskGetSystemState_ExpectAndReturn(pxTaskStatusArray, uxArraySize, pulTotalRunTime, cmock_retval) uxTaskGetSystemState_CMockExpectAndReturn(__LINE__, pxTaskStatusArray, uxArraySize, pulTotalRunTime, cmock_retval)
void uxTaskGetSystemState_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskStatus_t* const pxTaskStatusArray, const UBaseType_t uxArraySize, uint32_t* const pulTotalRunTime, UBaseType_t cmock_to_return);
#define uxTaskGetSystemState_ExpectWithArrayAndReturn(pxTaskStatusArray, pxTaskStatusArray_Depth, uxArraySize, pulTotalRunTime, pulTotalRunTime_Depth, cmock_retval) uxTaskGetSystemState_CMockExpectWithArrayAndReturn(__LINE__, pxTaskStatusArray, pxTaskStatusArray_Depth, uxArraySize, pulTotalRunTime, pulTotalRunTime_Depth, cmock_retval)
void uxTaskGetSystemState_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, TaskStatus_t* const pxTaskStatusArray, int pxTaskStatusArray_Depth, const UBaseType_t uxArraySize, uint32_t* const pulTotalRunTime, int pulTotalRunTime_Depth, UBaseType_t cmock_to_return);
#define uxTaskGetSystemState_IgnoreArg_pxTaskStatusArray() uxTaskGetSystemState_CMockIgnoreArg_pxTaskStatusArray(__LINE__)
void uxTaskGetSystemState_CMockIgnoreArg_pxTaskStatusArray(UNITY_LINE_TYPE cmock_line);
#define uxTaskGetSystemState_IgnoreArg_uxArraySize() uxTaskGetSystemState_CMockIgnoreArg_uxArraySize(__LINE__)
void uxTaskGetSystemState_CMockIgnoreArg_uxArraySize(UNITY_LINE_TYPE cmock_line);
#define uxTaskGetSystemState_IgnoreArg_pulTotalRunTime() uxTaskGetSystemState_CMockIgnoreArg_pulTotalRunTime(__LINE__)
void uxTaskGetSystemState_CMockIgnoreArg_pulTotalRunTime(UNITY_LINE_TYPE cmock_line);
#define vTaskList_Ignore() vTaskList_CMockIgnore()
void vTaskList_CMockIgnore(void);
#define vTaskList_ExpectAnyArgs() vTaskList_CMockExpectAnyArgs(__LINE__)
void vTaskList_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vTaskList_Expect(pcWriteBuffer) vTaskList_CMockExpect(__LINE__, pcWriteBuffer)
void vTaskList_CMockExpect(UNITY_LINE_TYPE cmock_line, char* pcWriteBuffer);
#define vTaskList_IgnoreArg_pcWriteBuffer() vTaskList_CMockIgnoreArg_pcWriteBuffer(__LINE__)
void vTaskList_CMockIgnoreArg_pcWriteBuffer(UNITY_LINE_TYPE cmock_line);
#define vTaskGetRunTimeStats_Ignore() vTaskGetRunTimeStats_CMockIgnore()
void vTaskGetRunTimeStats_CMockIgnore(void);
#define vTaskGetRunTimeStats_ExpectAnyArgs() vTaskGetRunTimeStats_CMockExpectAnyArgs(__LINE__)
void vTaskGetRunTimeStats_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vTaskGetRunTimeStats_Expect(pcWriteBuffer) vTaskGetRunTimeStats_CMockExpect(__LINE__, pcWriteBuffer)
void vTaskGetRunTimeStats_CMockExpect(UNITY_LINE_TYPE cmock_line, char* pcWriteBuffer);
#define vTaskGetRunTimeStats_IgnoreArg_pcWriteBuffer() vTaskGetRunTimeStats_CMockIgnoreArg_pcWriteBuffer(__LINE__)
void vTaskGetRunTimeStats_CMockIgnoreArg_pcWriteBuffer(UNITY_LINE_TYPE cmock_line);
#define xTaskGetIdleRunTimeCounter_IgnoreAndReturn(cmock_retval) xTaskGetIdleRunTimeCounter_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTaskGetIdleRunTimeCounter_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, TickType_t cmock_to_return);
#define xTaskGetIdleRunTimeCounter_ExpectAndReturn(cmock_retval) xTaskGetIdleRunTimeCounter_CMockExpectAndReturn(__LINE__, cmock_retval)
void xTaskGetIdleRunTimeCounter_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TickType_t cmock_to_return);
#define xTaskGenericNotify_IgnoreAndReturn(cmock_retval) xTaskGenericNotify_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTaskGenericNotify_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskGenericNotify_ExpectAnyArgsAndReturn(cmock_retval) xTaskGenericNotify_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xTaskGenericNotify_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskGenericNotify_ExpectAndReturn(xTaskToNotify, ulValue, eAction, pulPreviousNotificationValue, cmock_retval) xTaskGenericNotify_CMockExpectAndReturn(__LINE__, xTaskToNotify, ulValue, eAction, pulPreviousNotificationValue, cmock_retval)
void xTaskGenericNotify_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t* pulPreviousNotificationValue, BaseType_t cmock_to_return);
#define xTaskGenericNotify_ExpectWithArrayAndReturn(xTaskToNotify, ulValue, eAction, pulPreviousNotificationValue, pulPreviousNotificationValue_Depth, cmock_retval) xTaskGenericNotify_CMockExpectWithArrayAndReturn(__LINE__, xTaskToNotify, ulValue, eAction, pulPreviousNotificationValue, pulPreviousNotificationValue_Depth, cmock_retval)
void xTaskGenericNotify_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t* pulPreviousNotificationValue, int pulPreviousNotificationValue_Depth, BaseType_t cmock_to_return);
#define xTaskGenericNotify_IgnoreArg_xTaskToNotify() xTaskGenericNotify_CMockIgnoreArg_xTaskToNotify(__LINE__)
void xTaskGenericNotify_CMockIgnoreArg_xTaskToNotify(UNITY_LINE_TYPE cmock_line);
#define xTaskGenericNotify_IgnoreArg_ulValue() xTaskGenericNotify_CMockIgnoreArg_ulValue(__LINE__)
void xTaskGenericNotify_CMockIgnoreArg_ulValue(UNITY_LINE_TYPE cmock_line);
#define xTaskGenericNotify_IgnoreArg_eAction() xTaskGenericNotify_CMockIgnoreArg_eAction(__LINE__)
void xTaskGenericNotify_CMockIgnoreArg_eAction(UNITY_LINE_TYPE cmock_line);
#define xTaskGenericNotify_IgnoreArg_pulPreviousNotificationValue() xTaskGenericNotify_CMockIgnoreArg_pulPreviousNotificationValue(__LINE__)
void xTaskGenericNotify_CMockIgnoreArg_pulPreviousNotificationValue(UNITY_LINE_TYPE cmock_line);
#define xTaskGenericNotifyFromISR_IgnoreAndReturn(cmock_retval) xTaskGenericNotifyFromISR_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTaskGenericNotifyFromISR_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskGenericNotifyFromISR_ExpectAnyArgsAndReturn(cmock_retval) xTaskGenericNotifyFromISR_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xTaskGenericNotifyFromISR_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskGenericNotifyFromISR_ExpectAndReturn(xTaskToNotify, ulValue, eAction, pulPreviousNotificationValue, pxHigherPriorityTaskWoken, cmock_retval) xTaskGenericNotifyFromISR_CMockExpectAndReturn(__LINE__, xTaskToNotify, ulValue, eAction, pulPreviousNotificationValue, pxHigherPriorityTaskWoken, cmock_retval)
void xTaskGenericNotifyFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t* pulPreviousNotificationValue, BaseType_t* pxHigherPriorityTaskWoken, BaseType_t cmock_to_return);
#define xTaskGenericNotifyFromISR_ExpectWithArrayAndReturn(xTaskToNotify, ulValue, eAction, pulPreviousNotificationValue, pulPreviousNotificationValue_Depth, pxHigherPriorityTaskWoken, pxHigherPriorityTaskWoken_Depth, cmock_retval) xTaskGenericNotifyFromISR_CMockExpectWithArrayAndReturn(__LINE__, xTaskToNotify, ulValue, eAction, pulPreviousNotificationValue, pulPreviousNotificationValue_Depth, pxHigherPriorityTaskWoken, pxHigherPriorityTaskWoken_Depth, cmock_retval)
void xTaskGenericNotifyFromISR_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t* pulPreviousNotificationValue, int pulPreviousNotificationValue_Depth, BaseType_t* pxHigherPriorityTaskWoken, int pxHigherPriorityTaskWoken_Depth, BaseType_t cmock_to_return);
#define xTaskGenericNotifyFromISR_IgnoreArg_xTaskToNotify() xTaskGenericNotifyFromISR_CMockIgnoreArg_xTaskToNotify(__LINE__)
void xTaskGenericNotifyFromISR_CMockIgnoreArg_xTaskToNotify(UNITY_LINE_TYPE cmock_line);
#define xTaskGenericNotifyFromISR_IgnoreArg_ulValue() xTaskGenericNotifyFromISR_CMockIgnoreArg_ulValue(__LINE__)
void xTaskGenericNotifyFromISR_CMockIgnoreArg_ulValue(UNITY_LINE_TYPE cmock_line);
#define xTaskGenericNotifyFromISR_IgnoreArg_eAction() xTaskGenericNotifyFromISR_CMockIgnoreArg_eAction(__LINE__)
void xTaskGenericNotifyFromISR_CMockIgnoreArg_eAction(UNITY_LINE_TYPE cmock_line);
#define xTaskGenericNotifyFromISR_IgnoreArg_pulPreviousNotificationValue() xTaskGenericNotifyFromISR_CMockIgnoreArg_pulPreviousNotificationValue(__LINE__)
void xTaskGenericNotifyFromISR_CMockIgnoreArg_pulPreviousNotificationValue(UNITY_LINE_TYPE cmock_line);
#define xTaskGenericNotifyFromISR_IgnoreArg_pxHigherPriorityTaskWoken() xTaskGenericNotifyFromISR_CMockIgnoreArg_pxHigherPriorityTaskWoken(__LINE__)
void xTaskGenericNotifyFromISR_CMockIgnoreArg_pxHigherPriorityTaskWoken(UNITY_LINE_TYPE cmock_line);
#define xTaskNotifyWait_IgnoreAndReturn(cmock_retval) xTaskNotifyWait_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTaskNotifyWait_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskNotifyWait_ExpectAnyArgsAndReturn(cmock_retval) xTaskNotifyWait_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xTaskNotifyWait_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskNotifyWait_ExpectAndReturn(ulBitsToClearOnEntry, ulBitsToClearOnExit, pulNotificationValue, xTicksToWait, cmock_retval) xTaskNotifyWait_CMockExpectAndReturn(__LINE__, ulBitsToClearOnEntry, ulBitsToClearOnExit, pulNotificationValue, xTicksToWait, cmock_retval)
void xTaskNotifyWait_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t* pulNotificationValue, TickType_t xTicksToWait, BaseType_t cmock_to_return);
#define xTaskNotifyWait_ExpectWithArrayAndReturn(ulBitsToClearOnEntry, ulBitsToClearOnExit, pulNotificationValue, pulNotificationValue_Depth, xTicksToWait, cmock_retval) xTaskNotifyWait_CMockExpectWithArrayAndReturn(__LINE__, ulBitsToClearOnEntry, ulBitsToClearOnExit, pulNotificationValue, pulNotificationValue_Depth, xTicksToWait, cmock_retval)
void xTaskNotifyWait_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t* pulNotificationValue, int pulNotificationValue_Depth, TickType_t xTicksToWait, BaseType_t cmock_to_return);
#define xTaskNotifyWait_IgnoreArg_ulBitsToClearOnEntry() xTaskNotifyWait_CMockIgnoreArg_ulBitsToClearOnEntry(__LINE__)
void xTaskNotifyWait_CMockIgnoreArg_ulBitsToClearOnEntry(UNITY_LINE_TYPE cmock_line);
#define xTaskNotifyWait_IgnoreArg_ulBitsToClearOnExit() xTaskNotifyWait_CMockIgnoreArg_ulBitsToClearOnExit(__LINE__)
void xTaskNotifyWait_CMockIgnoreArg_ulBitsToClearOnExit(UNITY_LINE_TYPE cmock_line);
#define xTaskNotifyWait_IgnoreArg_pulNotificationValue() xTaskNotifyWait_CMockIgnoreArg_pulNotificationValue(__LINE__)
void xTaskNotifyWait_CMockIgnoreArg_pulNotificationValue(UNITY_LINE_TYPE cmock_line);
#define xTaskNotifyWait_IgnoreArg_xTicksToWait() xTaskNotifyWait_CMockIgnoreArg_xTicksToWait(__LINE__)
void xTaskNotifyWait_CMockIgnoreArg_xTicksToWait(UNITY_LINE_TYPE cmock_line);
#define vTaskNotifyGiveFromISR_Ignore() vTaskNotifyGiveFromISR_CMockIgnore()
void vTaskNotifyGiveFromISR_CMockIgnore(void);
#define vTaskNotifyGiveFromISR_ExpectAnyArgs() vTaskNotifyGiveFromISR_CMockExpectAnyArgs(__LINE__)
void vTaskNotifyGiveFromISR_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vTaskNotifyGiveFromISR_Expect(xTaskToNotify, pxHigherPriorityTaskWoken) vTaskNotifyGiveFromISR_CMockExpect(__LINE__, xTaskToNotify, pxHigherPriorityTaskWoken)
void vTaskNotifyGiveFromISR_CMockExpect(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToNotify, BaseType_t* pxHigherPriorityTaskWoken);
#define vTaskNotifyGiveFromISR_ExpectWithArray(xTaskToNotify, pxHigherPriorityTaskWoken, pxHigherPriorityTaskWoken_Depth) vTaskNotifyGiveFromISR_CMockExpectWithArray(__LINE__, xTaskToNotify, pxHigherPriorityTaskWoken, pxHigherPriorityTaskWoken_Depth)
void vTaskNotifyGiveFromISR_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTaskToNotify, BaseType_t* pxHigherPriorityTaskWoken, int pxHigherPriorityTaskWoken_Depth);
#define vTaskNotifyGiveFromISR_IgnoreArg_xTaskToNotify() vTaskNotifyGiveFromISR_CMockIgnoreArg_xTaskToNotify(__LINE__)
void vTaskNotifyGiveFromISR_CMockIgnoreArg_xTaskToNotify(UNITY_LINE_TYPE cmock_line);
#define vTaskNotifyGiveFromISR_IgnoreArg_pxHigherPriorityTaskWoken() vTaskNotifyGiveFromISR_CMockIgnoreArg_pxHigherPriorityTaskWoken(__LINE__)
void vTaskNotifyGiveFromISR_CMockIgnoreArg_pxHigherPriorityTaskWoken(UNITY_LINE_TYPE cmock_line);
#define ulTaskNotifyTake_IgnoreAndReturn(cmock_retval) ulTaskNotifyTake_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ulTaskNotifyTake_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define ulTaskNotifyTake_ExpectAnyArgsAndReturn(cmock_retval) ulTaskNotifyTake_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ulTaskNotifyTake_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define ulTaskNotifyTake_ExpectAndReturn(xClearCountOnExit, xTicksToWait, cmock_retval) ulTaskNotifyTake_CMockExpectAndReturn(__LINE__, xClearCountOnExit, xTicksToWait, cmock_retval)
void ulTaskNotifyTake_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t xClearCountOnExit, TickType_t xTicksToWait, uint32_t cmock_to_return);
#define ulTaskNotifyTake_IgnoreArg_xClearCountOnExit() ulTaskNotifyTake_CMockIgnoreArg_xClearCountOnExit(__LINE__)
void ulTaskNotifyTake_CMockIgnoreArg_xClearCountOnExit(UNITY_LINE_TYPE cmock_line);
#define ulTaskNotifyTake_IgnoreArg_xTicksToWait() ulTaskNotifyTake_CMockIgnoreArg_xTicksToWait(__LINE__)
void ulTaskNotifyTake_CMockIgnoreArg_xTicksToWait(UNITY_LINE_TYPE cmock_line);
#define xTaskNotifyStateClear_IgnoreAndReturn(cmock_retval) xTaskNotifyStateClear_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTaskNotifyStateClear_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskNotifyStateClear_ExpectAnyArgsAndReturn(cmock_retval) xTaskNotifyStateClear_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xTaskNotifyStateClear_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskNotifyStateClear_ExpectAndReturn(xTask, cmock_retval) xTaskNotifyStateClear_CMockExpectAndReturn(__LINE__, xTask, cmock_retval)
void xTaskNotifyStateClear_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, BaseType_t cmock_to_return);
#define xTaskNotifyStateClear_IgnoreArg_xTask() xTaskNotifyStateClear_CMockIgnoreArg_xTask(__LINE__)
void xTaskNotifyStateClear_CMockIgnoreArg_xTask(UNITY_LINE_TYPE cmock_line);
#define xTaskIncrementTick_IgnoreAndReturn(cmock_retval) xTaskIncrementTick_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTaskIncrementTick_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskIncrementTick_ExpectAndReturn(cmock_retval) xTaskIncrementTick_CMockExpectAndReturn(__LINE__, cmock_retval)
void xTaskIncrementTick_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define vTaskPlaceOnEventList_Ignore() vTaskPlaceOnEventList_CMockIgnore()
void vTaskPlaceOnEventList_CMockIgnore(void);
#define vTaskPlaceOnEventList_ExpectAnyArgs() vTaskPlaceOnEventList_CMockExpectAnyArgs(__LINE__)
void vTaskPlaceOnEventList_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vTaskPlaceOnEventList_Expect(pxEventList, xTicksToWait) vTaskPlaceOnEventList_CMockExpect(__LINE__, pxEventList, xTicksToWait)
void vTaskPlaceOnEventList_CMockExpect(UNITY_LINE_TYPE cmock_line, List_t* const pxEventList, const TickType_t xTicksToWait);
#define vTaskPlaceOnEventList_ExpectWithArray(pxEventList, pxEventList_Depth, xTicksToWait) vTaskPlaceOnEventList_CMockExpectWithArray(__LINE__, pxEventList, pxEventList_Depth, xTicksToWait)
void vTaskPlaceOnEventList_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, List_t* const pxEventList, int pxEventList_Depth, const TickType_t xTicksToWait);
#define vTaskPlaceOnEventList_IgnoreArg_pxEventList() vTaskPlaceOnEventList_CMockIgnoreArg_pxEventList(__LINE__)
void vTaskPlaceOnEventList_CMockIgnoreArg_pxEventList(UNITY_LINE_TYPE cmock_line);
#define vTaskPlaceOnEventList_IgnoreArg_xTicksToWait() vTaskPlaceOnEventList_CMockIgnoreArg_xTicksToWait(__LINE__)
void vTaskPlaceOnEventList_CMockIgnoreArg_xTicksToWait(UNITY_LINE_TYPE cmock_line);
#define vTaskPlaceOnUnorderedEventList_Ignore() vTaskPlaceOnUnorderedEventList_CMockIgnore()
void vTaskPlaceOnUnorderedEventList_CMockIgnore(void);
#define vTaskPlaceOnUnorderedEventList_ExpectAnyArgs() vTaskPlaceOnUnorderedEventList_CMockExpectAnyArgs(__LINE__)
void vTaskPlaceOnUnorderedEventList_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vTaskPlaceOnUnorderedEventList_Expect(pxEventList, xItemValue, xTicksToWait) vTaskPlaceOnUnorderedEventList_CMockExpect(__LINE__, pxEventList, xItemValue, xTicksToWait)
void vTaskPlaceOnUnorderedEventList_CMockExpect(UNITY_LINE_TYPE cmock_line, List_t* pxEventList, const TickType_t xItemValue, const TickType_t xTicksToWait);
#define vTaskPlaceOnUnorderedEventList_ExpectWithArray(pxEventList, pxEventList_Depth, xItemValue, xTicksToWait) vTaskPlaceOnUnorderedEventList_CMockExpectWithArray(__LINE__, pxEventList, pxEventList_Depth, xItemValue, xTicksToWait)
void vTaskPlaceOnUnorderedEventList_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, List_t* pxEventList, int pxEventList_Depth, const TickType_t xItemValue, const TickType_t xTicksToWait);
#define vTaskPlaceOnUnorderedEventList_IgnoreArg_pxEventList() vTaskPlaceOnUnorderedEventList_CMockIgnoreArg_pxEventList(__LINE__)
void vTaskPlaceOnUnorderedEventList_CMockIgnoreArg_pxEventList(UNITY_LINE_TYPE cmock_line);
#define vTaskPlaceOnUnorderedEventList_IgnoreArg_xItemValue() vTaskPlaceOnUnorderedEventList_CMockIgnoreArg_xItemValue(__LINE__)
void vTaskPlaceOnUnorderedEventList_CMockIgnoreArg_xItemValue(UNITY_LINE_TYPE cmock_line);
#define vTaskPlaceOnUnorderedEventList_IgnoreArg_xTicksToWait() vTaskPlaceOnUnorderedEventList_CMockIgnoreArg_xTicksToWait(__LINE__)
void vTaskPlaceOnUnorderedEventList_CMockIgnoreArg_xTicksToWait(UNITY_LINE_TYPE cmock_line);
#define vTaskPlaceOnEventListRestricted_Ignore() vTaskPlaceOnEventListRestricted_CMockIgnore()
void vTaskPlaceOnEventListRestricted_CMockIgnore(void);
#define vTaskPlaceOnEventListRestricted_ExpectAnyArgs() vTaskPlaceOnEventListRestricted_CMockExpectAnyArgs(__LINE__)
void vTaskPlaceOnEventListRestricted_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vTaskPlaceOnEventListRestricted_Expect(pxEventList, xTicksToWait, xWaitIndefinitely) vTaskPlaceOnEventListRestricted_CMockExpect(__LINE__, pxEventList, xTicksToWait, xWaitIndefinitely)
void vTaskPlaceOnEventListRestricted_CMockExpect(UNITY_LINE_TYPE cmock_line, List_t* const pxEventList, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely);
#define vTaskPlaceOnEventListRestricted_ExpectWithArray(pxEventList, pxEventList_Depth, xTicksToWait, xWaitIndefinitely) vTaskPlaceOnEventListRestricted_CMockExpectWithArray(__LINE__, pxEventList, pxEventList_Depth, xTicksToWait, xWaitIndefinitely)
void vTaskPlaceOnEventListRestricted_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, List_t* const pxEventList, int pxEventList_Depth, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely);
#define vTaskPlaceOnEventListRestricted_IgnoreArg_pxEventList() vTaskPlaceOnEventListRestricted_CMockIgnoreArg_pxEventList(__LINE__)
void vTaskPlaceOnEventListRestricted_CMockIgnoreArg_pxEventList(UNITY_LINE_TYPE cmock_line);
#define vTaskPlaceOnEventListRestricted_IgnoreArg_xTicksToWait() vTaskPlaceOnEventListRestricted_CMockIgnoreArg_xTicksToWait(__LINE__)
void vTaskPlaceOnEventListRestricted_CMockIgnoreArg_xTicksToWait(UNITY_LINE_TYPE cmock_line);
#define vTaskPlaceOnEventListRestricted_IgnoreArg_xWaitIndefinitely() vTaskPlaceOnEventListRestricted_CMockIgnoreArg_xWaitIndefinitely(__LINE__)
void vTaskPlaceOnEventListRestricted_CMockIgnoreArg_xWaitIndefinitely(UNITY_LINE_TYPE cmock_line);
#define xTaskRemoveFromEventList_IgnoreAndReturn(cmock_retval) xTaskRemoveFromEventList_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTaskRemoveFromEventList_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskRemoveFromEventList_ExpectAnyArgsAndReturn(cmock_retval) xTaskRemoveFromEventList_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xTaskRemoveFromEventList_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskRemoveFromEventList_ExpectAndReturn(pxEventList, cmock_retval) xTaskRemoveFromEventList_CMockExpectAndReturn(__LINE__, pxEventList, cmock_retval)
void xTaskRemoveFromEventList_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const List_t* const pxEventList, BaseType_t cmock_to_return);
#define xTaskRemoveFromEventList_ExpectWithArrayAndReturn(pxEventList, pxEventList_Depth, cmock_retval) xTaskRemoveFromEventList_CMockExpectWithArrayAndReturn(__LINE__, pxEventList, pxEventList_Depth, cmock_retval)
void xTaskRemoveFromEventList_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const List_t* const pxEventList, int pxEventList_Depth, BaseType_t cmock_to_return);
#define xTaskRemoveFromEventList_IgnoreArg_pxEventList() xTaskRemoveFromEventList_CMockIgnoreArg_pxEventList(__LINE__)
void xTaskRemoveFromEventList_CMockIgnoreArg_pxEventList(UNITY_LINE_TYPE cmock_line);
#define vTaskRemoveFromUnorderedEventList_Ignore() vTaskRemoveFromUnorderedEventList_CMockIgnore()
void vTaskRemoveFromUnorderedEventList_CMockIgnore(void);
#define vTaskRemoveFromUnorderedEventList_ExpectAnyArgs() vTaskRemoveFromUnorderedEventList_CMockExpectAnyArgs(__LINE__)
void vTaskRemoveFromUnorderedEventList_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vTaskRemoveFromUnorderedEventList_Expect(pxEventListItem, xItemValue) vTaskRemoveFromUnorderedEventList_CMockExpect(__LINE__, pxEventListItem, xItemValue)
void vTaskRemoveFromUnorderedEventList_CMockExpect(UNITY_LINE_TYPE cmock_line, ListItem_t* pxEventListItem, const TickType_t xItemValue);
#define vTaskRemoveFromUnorderedEventList_ExpectWithArray(pxEventListItem, pxEventListItem_Depth, xItemValue) vTaskRemoveFromUnorderedEventList_CMockExpectWithArray(__LINE__, pxEventListItem, pxEventListItem_Depth, xItemValue)
void vTaskRemoveFromUnorderedEventList_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, ListItem_t* pxEventListItem, int pxEventListItem_Depth, const TickType_t xItemValue);
#define vTaskRemoveFromUnorderedEventList_IgnoreArg_pxEventListItem() vTaskRemoveFromUnorderedEventList_CMockIgnoreArg_pxEventListItem(__LINE__)
void vTaskRemoveFromUnorderedEventList_CMockIgnoreArg_pxEventListItem(UNITY_LINE_TYPE cmock_line);
#define vTaskRemoveFromUnorderedEventList_IgnoreArg_xItemValue() vTaskRemoveFromUnorderedEventList_CMockIgnoreArg_xItemValue(__LINE__)
void vTaskRemoveFromUnorderedEventList_CMockIgnoreArg_xItemValue(UNITY_LINE_TYPE cmock_line);
#define vTaskSwitchContext_Ignore() vTaskSwitchContext_CMockIgnore()
void vTaskSwitchContext_CMockIgnore(void);
#define vTaskSwitchContext_Expect() vTaskSwitchContext_CMockExpect(__LINE__)
void vTaskSwitchContext_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define uxTaskResetEventItemValue_IgnoreAndReturn(cmock_retval) uxTaskResetEventItemValue_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void uxTaskResetEventItemValue_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, TickType_t cmock_to_return);
#define uxTaskResetEventItemValue_ExpectAndReturn(cmock_retval) uxTaskResetEventItemValue_CMockExpectAndReturn(__LINE__, cmock_retval)
void uxTaskResetEventItemValue_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TickType_t cmock_to_return);
#define xTaskGetCurrentTaskHandle_IgnoreAndReturn(cmock_retval) xTaskGetCurrentTaskHandle_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTaskGetCurrentTaskHandle_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t cmock_to_return);
#define xTaskGetCurrentTaskHandle_ExpectAndReturn(cmock_retval) xTaskGetCurrentTaskHandle_CMockExpectAndReturn(__LINE__, cmock_retval)
void xTaskGetCurrentTaskHandle_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t cmock_to_return);
#define vTaskSetTimeOutState_Ignore() vTaskSetTimeOutState_CMockIgnore()
void vTaskSetTimeOutState_CMockIgnore(void);
#define vTaskSetTimeOutState_ExpectAnyArgs() vTaskSetTimeOutState_CMockExpectAnyArgs(__LINE__)
void vTaskSetTimeOutState_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vTaskSetTimeOutState_Expect(pxTimeOut) vTaskSetTimeOutState_CMockExpect(__LINE__, pxTimeOut)
void vTaskSetTimeOutState_CMockExpect(UNITY_LINE_TYPE cmock_line, TimeOut_t* const pxTimeOut);
#define vTaskSetTimeOutState_ExpectWithArray(pxTimeOut, pxTimeOut_Depth) vTaskSetTimeOutState_CMockExpectWithArray(__LINE__, pxTimeOut, pxTimeOut_Depth)
void vTaskSetTimeOutState_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, TimeOut_t* const pxTimeOut, int pxTimeOut_Depth);
#define vTaskSetTimeOutState_IgnoreArg_pxTimeOut() vTaskSetTimeOutState_CMockIgnoreArg_pxTimeOut(__LINE__)
void vTaskSetTimeOutState_CMockIgnoreArg_pxTimeOut(UNITY_LINE_TYPE cmock_line);
#define xTaskCheckForTimeOut_IgnoreAndReturn(cmock_retval) xTaskCheckForTimeOut_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTaskCheckForTimeOut_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskCheckForTimeOut_ExpectAnyArgsAndReturn(cmock_retval) xTaskCheckForTimeOut_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xTaskCheckForTimeOut_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskCheckForTimeOut_ExpectAndReturn(pxTimeOut, pxTicksToWait, cmock_retval) xTaskCheckForTimeOut_CMockExpectAndReturn(__LINE__, pxTimeOut, pxTicksToWait, cmock_retval)
void xTaskCheckForTimeOut_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TimeOut_t* const pxTimeOut, TickType_t* const pxTicksToWait, BaseType_t cmock_to_return);
#define xTaskCheckForTimeOut_ExpectWithArrayAndReturn(pxTimeOut, pxTimeOut_Depth, pxTicksToWait, pxTicksToWait_Depth, cmock_retval) xTaskCheckForTimeOut_CMockExpectWithArrayAndReturn(__LINE__, pxTimeOut, pxTimeOut_Depth, pxTicksToWait, pxTicksToWait_Depth, cmock_retval)
void xTaskCheckForTimeOut_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, TimeOut_t* const pxTimeOut, int pxTimeOut_Depth, TickType_t* const pxTicksToWait, int pxTicksToWait_Depth, BaseType_t cmock_to_return);
#define xTaskCheckForTimeOut_IgnoreArg_pxTimeOut() xTaskCheckForTimeOut_CMockIgnoreArg_pxTimeOut(__LINE__)
void xTaskCheckForTimeOut_CMockIgnoreArg_pxTimeOut(UNITY_LINE_TYPE cmock_line);
#define xTaskCheckForTimeOut_IgnoreArg_pxTicksToWait() xTaskCheckForTimeOut_CMockIgnoreArg_pxTicksToWait(__LINE__)
void xTaskCheckForTimeOut_CMockIgnoreArg_pxTicksToWait(UNITY_LINE_TYPE cmock_line);
#define vTaskMissedYield_Ignore() vTaskMissedYield_CMockIgnore()
void vTaskMissedYield_CMockIgnore(void);
#define vTaskMissedYield_Expect() vTaskMissedYield_CMockExpect(__LINE__)
void vTaskMissedYield_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define xTaskGetSchedulerState_IgnoreAndReturn(cmock_retval) xTaskGetSchedulerState_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTaskGetSchedulerState_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskGetSchedulerState_ExpectAndReturn(cmock_retval) xTaskGetSchedulerState_CMockExpectAndReturn(__LINE__, cmock_retval)
void xTaskGetSchedulerState_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskPriorityInherit_IgnoreAndReturn(cmock_retval) xTaskPriorityInherit_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTaskPriorityInherit_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskPriorityInherit_ExpectAnyArgsAndReturn(cmock_retval) xTaskPriorityInherit_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xTaskPriorityInherit_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskPriorityInherit_ExpectAndReturn(pxMutexHolder, cmock_retval) xTaskPriorityInherit_CMockExpectAndReturn(__LINE__, pxMutexHolder, cmock_retval)
void xTaskPriorityInherit_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t const pxMutexHolder, BaseType_t cmock_to_return);
#define xTaskPriorityInherit_IgnoreArg_pxMutexHolder() xTaskPriorityInherit_CMockIgnoreArg_pxMutexHolder(__LINE__)
void xTaskPriorityInherit_CMockIgnoreArg_pxMutexHolder(UNITY_LINE_TYPE cmock_line);
#define xTaskPriorityDisinherit_IgnoreAndReturn(cmock_retval) xTaskPriorityDisinherit_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTaskPriorityDisinherit_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskPriorityDisinherit_ExpectAnyArgsAndReturn(cmock_retval) xTaskPriorityDisinherit_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xTaskPriorityDisinherit_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTaskPriorityDisinherit_ExpectAndReturn(pxMutexHolder, cmock_retval) xTaskPriorityDisinherit_CMockExpectAndReturn(__LINE__, pxMutexHolder, cmock_retval)
void xTaskPriorityDisinherit_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t const pxMutexHolder, BaseType_t cmock_to_return);
#define xTaskPriorityDisinherit_IgnoreArg_pxMutexHolder() xTaskPriorityDisinherit_CMockIgnoreArg_pxMutexHolder(__LINE__)
void xTaskPriorityDisinherit_CMockIgnoreArg_pxMutexHolder(UNITY_LINE_TYPE cmock_line);
#define vTaskPriorityDisinheritAfterTimeout_Ignore() vTaskPriorityDisinheritAfterTimeout_CMockIgnore()
void vTaskPriorityDisinheritAfterTimeout_CMockIgnore(void);
#define vTaskPriorityDisinheritAfterTimeout_ExpectAnyArgs() vTaskPriorityDisinheritAfterTimeout_CMockExpectAnyArgs(__LINE__)
void vTaskPriorityDisinheritAfterTimeout_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vTaskPriorityDisinheritAfterTimeout_Expect(pxMutexHolder, uxHighestPriorityWaitingTask) vTaskPriorityDisinheritAfterTimeout_CMockExpect(__LINE__, pxMutexHolder, uxHighestPriorityWaitingTask)
void vTaskPriorityDisinheritAfterTimeout_CMockExpect(UNITY_LINE_TYPE cmock_line, TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestPriorityWaitingTask);
#define vTaskPriorityDisinheritAfterTimeout_IgnoreArg_pxMutexHolder() vTaskPriorityDisinheritAfterTimeout_CMockIgnoreArg_pxMutexHolder(__LINE__)
void vTaskPriorityDisinheritAfterTimeout_CMockIgnoreArg_pxMutexHolder(UNITY_LINE_TYPE cmock_line);
#define vTaskPriorityDisinheritAfterTimeout_IgnoreArg_uxHighestPriorityWaitingTask() vTaskPriorityDisinheritAfterTimeout_CMockIgnoreArg_uxHighestPriorityWaitingTask(__LINE__)
void vTaskPriorityDisinheritAfterTimeout_CMockIgnoreArg_uxHighestPriorityWaitingTask(UNITY_LINE_TYPE cmock_line);
#define uxTaskGetTaskNumber_IgnoreAndReturn(cmock_retval) uxTaskGetTaskNumber_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void uxTaskGetTaskNumber_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, UBaseType_t cmock_to_return);
#define uxTaskGetTaskNumber_ExpectAnyArgsAndReturn(cmock_retval) uxTaskGetTaskNumber_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void uxTaskGetTaskNumber_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, UBaseType_t cmock_to_return);
#define uxTaskGetTaskNumber_ExpectAndReturn(xTask, cmock_retval) uxTaskGetTaskNumber_CMockExpectAndReturn(__LINE__, xTask, cmock_retval)
void uxTaskGetTaskNumber_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, UBaseType_t cmock_to_return);
#define uxTaskGetTaskNumber_IgnoreArg_xTask() uxTaskGetTaskNumber_CMockIgnoreArg_xTask(__LINE__)
void uxTaskGetTaskNumber_CMockIgnoreArg_xTask(UNITY_LINE_TYPE cmock_line);
#define vTaskSetTaskNumber_Ignore() vTaskSetTaskNumber_CMockIgnore()
void vTaskSetTaskNumber_CMockIgnore(void);
#define vTaskSetTaskNumber_ExpectAnyArgs() vTaskSetTaskNumber_CMockExpectAnyArgs(__LINE__)
void vTaskSetTaskNumber_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vTaskSetTaskNumber_Expect(xTask, uxHandle) vTaskSetTaskNumber_CMockExpect(__LINE__, xTask, uxHandle)
void vTaskSetTaskNumber_CMockExpect(UNITY_LINE_TYPE cmock_line, TaskHandle_t xTask, const UBaseType_t uxHandle);
#define vTaskSetTaskNumber_IgnoreArg_xTask() vTaskSetTaskNumber_CMockIgnoreArg_xTask(__LINE__)
void vTaskSetTaskNumber_CMockIgnoreArg_xTask(UNITY_LINE_TYPE cmock_line);
#define vTaskSetTaskNumber_IgnoreArg_uxHandle() vTaskSetTaskNumber_CMockIgnoreArg_uxHandle(__LINE__)
void vTaskSetTaskNumber_CMockIgnoreArg_uxHandle(UNITY_LINE_TYPE cmock_line);
#define vTaskStepTick_Ignore() vTaskStepTick_CMockIgnore()
void vTaskStepTick_CMockIgnore(void);
#define vTaskStepTick_ExpectAnyArgs() vTaskStepTick_CMockExpectAnyArgs(__LINE__)
void vTaskStepTick_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vTaskStepTick_Expect(xTicksToJump) vTaskStepTick_CMockExpect(__LINE__, xTicksToJump)
void vTaskStepTick_CMockExpect(UNITY_LINE_TYPE cmock_line, const TickType_t xTicksToJump);
#define vTaskStepTick_IgnoreArg_xTicksToJump() vTaskStepTick_CMockIgnoreArg_xTicksToJump(__LINE__)
void vTaskStepTick_CMockIgnoreArg_xTicksToJump(UNITY_LINE_TYPE cmock_line);
#define eTaskConfirmSleepModeStatus_IgnoreAndReturn(cmock_retval) eTaskConfirmSleepModeStatus_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void eTaskConfirmSleepModeStatus_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, eSleepModeStatus cmock_to_return);
#define eTaskConfirmSleepModeStatus_ExpectAndReturn(cmock_retval) eTaskConfirmSleepModeStatus_CMockExpectAndReturn(__LINE__, cmock_retval)
void eTaskConfirmSleepModeStatus_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, eSleepModeStatus cmock_to_return);
#define pvTaskIncrementMutexHeldCount_IgnoreAndReturn(cmock_retval) pvTaskIncrementMutexHeldCount_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void pvTaskIncrementMutexHeldCount_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t cmock_to_return);
#define pvTaskIncrementMutexHeldCount_ExpectAndReturn(cmock_retval) pvTaskIncrementMutexHeldCount_CMockExpectAndReturn(__LINE__, cmock_retval)
void pvTaskIncrementMutexHeldCount_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t cmock_to_return);
#define vTaskInternalSetTimeOutState_Ignore() vTaskInternalSetTimeOutState_CMockIgnore()
void vTaskInternalSetTimeOutState_CMockIgnore(void);
#define vTaskInternalSetTimeOutState_ExpectAnyArgs() vTaskInternalSetTimeOutState_CMockExpectAnyArgs(__LINE__)
void vTaskInternalSetTimeOutState_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vTaskInternalSetTimeOutState_Expect(pxTimeOut) vTaskInternalSetTimeOutState_CMockExpect(__LINE__, pxTimeOut)
void vTaskInternalSetTimeOutState_CMockExpect(UNITY_LINE_TYPE cmock_line, TimeOut_t* const pxTimeOut);
#define vTaskInternalSetTimeOutState_ExpectWithArray(pxTimeOut, pxTimeOut_Depth) vTaskInternalSetTimeOutState_CMockExpectWithArray(__LINE__, pxTimeOut, pxTimeOut_Depth)
void vTaskInternalSetTimeOutState_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, TimeOut_t* const pxTimeOut, int pxTimeOut_Depth);
#define vTaskInternalSetTimeOutState_IgnoreArg_pxTimeOut() vTaskInternalSetTimeOutState_CMockIgnoreArg_pxTimeOut(__LINE__)
void vTaskInternalSetTimeOutState_CMockIgnoreArg_pxTimeOut(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
