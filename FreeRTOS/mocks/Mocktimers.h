/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKTIMERS_H
#define _MOCKTIMERS_H

#include "FreeRTOS.h"
#include "timers.h"
#include "unity.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mocktimers_Init(void);
void Mocktimers_Destroy(void);
void Mocktimers_Verify(void);

#define xTimerCreate_IgnoreAndReturn(cmock_retval) xTimerCreate_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTimerCreate_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, TimerHandle_t cmock_to_return);
#define xTimerCreate_ExpectAnyArgsAndReturn(cmock_retval) xTimerCreate_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xTimerCreate_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, TimerHandle_t cmock_to_return);
#define xTimerCreate_ExpectAndReturn(pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunction, cmock_retval) xTimerCreate_CMockExpectAndReturn(__LINE__, pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunction, cmock_retval)
void xTimerCreate_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const char* const pcTimerName, const TickType_t xTimerPeriodInTicks, const UBaseType_t uxAutoReload, void* const pvTimerID, TimerCallbackFunction_t pxCallbackFunction, TimerHandle_t cmock_to_return);
#define xTimerCreate_ExpectWithArrayAndReturn(pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pvTimerID_Depth, pxCallbackFunction, cmock_retval) xTimerCreate_CMockExpectWithArrayAndReturn(__LINE__, pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pvTimerID_Depth, pxCallbackFunction, cmock_retval)
void xTimerCreate_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const char* const pcTimerName, const TickType_t xTimerPeriodInTicks, const UBaseType_t uxAutoReload, void* const pvTimerID, int pvTimerID_Depth, TimerCallbackFunction_t pxCallbackFunction, TimerHandle_t cmock_to_return);
#define xTimerCreate_IgnoreArg_pcTimerName() xTimerCreate_CMockIgnoreArg_pcTimerName(__LINE__)
void xTimerCreate_CMockIgnoreArg_pcTimerName(UNITY_LINE_TYPE cmock_line);
#define xTimerCreate_IgnoreArg_xTimerPeriodInTicks() xTimerCreate_CMockIgnoreArg_xTimerPeriodInTicks(__LINE__)
void xTimerCreate_CMockIgnoreArg_xTimerPeriodInTicks(UNITY_LINE_TYPE cmock_line);
#define xTimerCreate_IgnoreArg_uxAutoReload() xTimerCreate_CMockIgnoreArg_uxAutoReload(__LINE__)
void xTimerCreate_CMockIgnoreArg_uxAutoReload(UNITY_LINE_TYPE cmock_line);
#define xTimerCreate_IgnoreArg_pvTimerID() xTimerCreate_CMockIgnoreArg_pvTimerID(__LINE__)
void xTimerCreate_CMockIgnoreArg_pvTimerID(UNITY_LINE_TYPE cmock_line);
#define xTimerCreate_IgnoreArg_pxCallbackFunction() xTimerCreate_CMockIgnoreArg_pxCallbackFunction(__LINE__)
void xTimerCreate_CMockIgnoreArg_pxCallbackFunction(UNITY_LINE_TYPE cmock_line);
#define xTimerCreateStatic_IgnoreAndReturn(cmock_retval) xTimerCreateStatic_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTimerCreateStatic_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, TimerHandle_t cmock_to_return);
#define xTimerCreateStatic_ExpectAnyArgsAndReturn(cmock_retval) xTimerCreateStatic_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xTimerCreateStatic_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, TimerHandle_t cmock_to_return);
#define xTimerCreateStatic_ExpectAndReturn(pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunction, pxTimerBuffer, cmock_retval) xTimerCreateStatic_CMockExpectAndReturn(__LINE__, pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunction, pxTimerBuffer, cmock_retval)
void xTimerCreateStatic_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const char* const pcTimerName, const TickType_t xTimerPeriodInTicks, const UBaseType_t uxAutoReload, void* const pvTimerID, TimerCallbackFunction_t pxCallbackFunction, StaticTimer_t* pxTimerBuffer, TimerHandle_t cmock_to_return);
#define xTimerCreateStatic_ExpectWithArrayAndReturn(pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pvTimerID_Depth, pxCallbackFunction, pxTimerBuffer, pxTimerBuffer_Depth, cmock_retval) xTimerCreateStatic_CMockExpectWithArrayAndReturn(__LINE__, pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pvTimerID_Depth, pxCallbackFunction, pxTimerBuffer, pxTimerBuffer_Depth, cmock_retval)
void xTimerCreateStatic_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const char* const pcTimerName, const TickType_t xTimerPeriodInTicks, const UBaseType_t uxAutoReload, void* const pvTimerID, int pvTimerID_Depth, TimerCallbackFunction_t pxCallbackFunction, StaticTimer_t* pxTimerBuffer, int pxTimerBuffer_Depth, TimerHandle_t cmock_to_return);
#define xTimerCreateStatic_IgnoreArg_pcTimerName() xTimerCreateStatic_CMockIgnoreArg_pcTimerName(__LINE__)
void xTimerCreateStatic_CMockIgnoreArg_pcTimerName(UNITY_LINE_TYPE cmock_line);
#define xTimerCreateStatic_IgnoreArg_xTimerPeriodInTicks() xTimerCreateStatic_CMockIgnoreArg_xTimerPeriodInTicks(__LINE__)
void xTimerCreateStatic_CMockIgnoreArg_xTimerPeriodInTicks(UNITY_LINE_TYPE cmock_line);
#define xTimerCreateStatic_IgnoreArg_uxAutoReload() xTimerCreateStatic_CMockIgnoreArg_uxAutoReload(__LINE__)
void xTimerCreateStatic_CMockIgnoreArg_uxAutoReload(UNITY_LINE_TYPE cmock_line);
#define xTimerCreateStatic_IgnoreArg_pvTimerID() xTimerCreateStatic_CMockIgnoreArg_pvTimerID(__LINE__)
void xTimerCreateStatic_CMockIgnoreArg_pvTimerID(UNITY_LINE_TYPE cmock_line);
#define xTimerCreateStatic_IgnoreArg_pxCallbackFunction() xTimerCreateStatic_CMockIgnoreArg_pxCallbackFunction(__LINE__)
void xTimerCreateStatic_CMockIgnoreArg_pxCallbackFunction(UNITY_LINE_TYPE cmock_line);
#define xTimerCreateStatic_IgnoreArg_pxTimerBuffer() xTimerCreateStatic_CMockIgnoreArg_pxTimerBuffer(__LINE__)
void xTimerCreateStatic_CMockIgnoreArg_pxTimerBuffer(UNITY_LINE_TYPE cmock_line);
#define pvTimerGetTimerID_IgnoreAndReturn(cmock_retval) pvTimerGetTimerID_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void pvTimerGetTimerID_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, void* cmock_to_return);
#define pvTimerGetTimerID_ExpectAnyArgsAndReturn(cmock_retval) pvTimerGetTimerID_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void pvTimerGetTimerID_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, void* cmock_to_return);
#define pvTimerGetTimerID_ExpectAndReturn(xTimer, cmock_retval) pvTimerGetTimerID_CMockExpectAndReturn(__LINE__, xTimer, cmock_retval)
void pvTimerGetTimerID_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const TimerHandle_t xTimer, void* cmock_to_return);
#define pvTimerGetTimerID_IgnoreArg_xTimer() pvTimerGetTimerID_CMockIgnoreArg_xTimer(__LINE__)
void pvTimerGetTimerID_CMockIgnoreArg_xTimer(UNITY_LINE_TYPE cmock_line);
#define vTimerSetTimerID_Ignore() vTimerSetTimerID_CMockIgnore()
void vTimerSetTimerID_CMockIgnore(void);
#define vTimerSetTimerID_ExpectAnyArgs() vTimerSetTimerID_CMockExpectAnyArgs(__LINE__)
void vTimerSetTimerID_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vTimerSetTimerID_Expect(xTimer, pvNewID) vTimerSetTimerID_CMockExpect(__LINE__, xTimer, pvNewID)
void vTimerSetTimerID_CMockExpect(UNITY_LINE_TYPE cmock_line, TimerHandle_t xTimer, void* pvNewID);
#define vTimerSetTimerID_ExpectWithArray(xTimer, pvNewID, pvNewID_Depth) vTimerSetTimerID_CMockExpectWithArray(__LINE__, xTimer, pvNewID, pvNewID_Depth)
void vTimerSetTimerID_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, TimerHandle_t xTimer, void* pvNewID, int pvNewID_Depth);
#define vTimerSetTimerID_IgnoreArg_xTimer() vTimerSetTimerID_CMockIgnoreArg_xTimer(__LINE__)
void vTimerSetTimerID_CMockIgnoreArg_xTimer(UNITY_LINE_TYPE cmock_line);
#define vTimerSetTimerID_IgnoreArg_pvNewID() vTimerSetTimerID_CMockIgnoreArg_pvNewID(__LINE__)
void vTimerSetTimerID_CMockIgnoreArg_pvNewID(UNITY_LINE_TYPE cmock_line);
#define xTimerIsTimerActive_IgnoreAndReturn(cmock_retval) xTimerIsTimerActive_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTimerIsTimerActive_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTimerIsTimerActive_ExpectAnyArgsAndReturn(cmock_retval) xTimerIsTimerActive_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xTimerIsTimerActive_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTimerIsTimerActive_ExpectAndReturn(xTimer, cmock_retval) xTimerIsTimerActive_CMockExpectAndReturn(__LINE__, xTimer, cmock_retval)
void xTimerIsTimerActive_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TimerHandle_t xTimer, BaseType_t cmock_to_return);
#define xTimerIsTimerActive_IgnoreArg_xTimer() xTimerIsTimerActive_CMockIgnoreArg_xTimer(__LINE__)
void xTimerIsTimerActive_CMockIgnoreArg_xTimer(UNITY_LINE_TYPE cmock_line);
#define xTimerGetTimerDaemonTaskHandle_IgnoreAndReturn(cmock_retval) xTimerGetTimerDaemonTaskHandle_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTimerGetTimerDaemonTaskHandle_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t cmock_to_return);
#define xTimerGetTimerDaemonTaskHandle_ExpectAndReturn(cmock_retval) xTimerGetTimerDaemonTaskHandle_CMockExpectAndReturn(__LINE__, cmock_retval)
void xTimerGetTimerDaemonTaskHandle_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TaskHandle_t cmock_to_return);
#define xTimerPendFunctionCallFromISR_IgnoreAndReturn(cmock_retval) xTimerPendFunctionCallFromISR_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTimerPendFunctionCallFromISR_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTimerPendFunctionCallFromISR_ExpectAnyArgsAndReturn(cmock_retval) xTimerPendFunctionCallFromISR_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xTimerPendFunctionCallFromISR_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTimerPendFunctionCallFromISR_ExpectAndReturn(xFunctionToPend, pvParameter1, ulParameter2, pxHigherPriorityTaskWoken, cmock_retval) xTimerPendFunctionCallFromISR_CMockExpectAndReturn(__LINE__, xFunctionToPend, pvParameter1, ulParameter2, pxHigherPriorityTaskWoken, cmock_retval)
void xTimerPendFunctionCallFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, PendedFunction_t xFunctionToPend, void* pvParameter1, uint32_t ulParameter2, BaseType_t* pxHigherPriorityTaskWoken, BaseType_t cmock_to_return);
#define xTimerPendFunctionCallFromISR_ExpectWithArrayAndReturn(xFunctionToPend, pvParameter1, pvParameter1_Depth, ulParameter2, pxHigherPriorityTaskWoken, pxHigherPriorityTaskWoken_Depth, cmock_retval) xTimerPendFunctionCallFromISR_CMockExpectWithArrayAndReturn(__LINE__, xFunctionToPend, pvParameter1, pvParameter1_Depth, ulParameter2, pxHigherPriorityTaskWoken, pxHigherPriorityTaskWoken_Depth, cmock_retval)
void xTimerPendFunctionCallFromISR_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, PendedFunction_t xFunctionToPend, void* pvParameter1, int pvParameter1_Depth, uint32_t ulParameter2, BaseType_t* pxHigherPriorityTaskWoken, int pxHigherPriorityTaskWoken_Depth, BaseType_t cmock_to_return);
#define xTimerPendFunctionCallFromISR_IgnoreArg_xFunctionToPend() xTimerPendFunctionCallFromISR_CMockIgnoreArg_xFunctionToPend(__LINE__)
void xTimerPendFunctionCallFromISR_CMockIgnoreArg_xFunctionToPend(UNITY_LINE_TYPE cmock_line);
#define xTimerPendFunctionCallFromISR_IgnoreArg_pvParameter1() xTimerPendFunctionCallFromISR_CMockIgnoreArg_pvParameter1(__LINE__)
void xTimerPendFunctionCallFromISR_CMockIgnoreArg_pvParameter1(UNITY_LINE_TYPE cmock_line);
#define xTimerPendFunctionCallFromISR_IgnoreArg_ulParameter2() xTimerPendFunctionCallFromISR_CMockIgnoreArg_ulParameter2(__LINE__)
void xTimerPendFunctionCallFromISR_CMockIgnoreArg_ulParameter2(UNITY_LINE_TYPE cmock_line);
#define xTimerPendFunctionCallFromISR_IgnoreArg_pxHigherPriorityTaskWoken() xTimerPendFunctionCallFromISR_CMockIgnoreArg_pxHigherPriorityTaskWoken(__LINE__)
void xTimerPendFunctionCallFromISR_CMockIgnoreArg_pxHigherPriorityTaskWoken(UNITY_LINE_TYPE cmock_line);
#define xTimerPendFunctionCall_IgnoreAndReturn(cmock_retval) xTimerPendFunctionCall_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTimerPendFunctionCall_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTimerPendFunctionCall_ExpectAnyArgsAndReturn(cmock_retval) xTimerPendFunctionCall_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xTimerPendFunctionCall_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTimerPendFunctionCall_ExpectAndReturn(xFunctionToPend, pvParameter1, ulParameter2, xTicksToWait, cmock_retval) xTimerPendFunctionCall_CMockExpectAndReturn(__LINE__, xFunctionToPend, pvParameter1, ulParameter2, xTicksToWait, cmock_retval)
void xTimerPendFunctionCall_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, PendedFunction_t xFunctionToPend, void* pvParameter1, uint32_t ulParameter2, TickType_t xTicksToWait, BaseType_t cmock_to_return);
#define xTimerPendFunctionCall_ExpectWithArrayAndReturn(xFunctionToPend, pvParameter1, pvParameter1_Depth, ulParameter2, xTicksToWait, cmock_retval) xTimerPendFunctionCall_CMockExpectWithArrayAndReturn(__LINE__, xFunctionToPend, pvParameter1, pvParameter1_Depth, ulParameter2, xTicksToWait, cmock_retval)
void xTimerPendFunctionCall_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, PendedFunction_t xFunctionToPend, void* pvParameter1, int pvParameter1_Depth, uint32_t ulParameter2, TickType_t xTicksToWait, BaseType_t cmock_to_return);
#define xTimerPendFunctionCall_IgnoreArg_xFunctionToPend() xTimerPendFunctionCall_CMockIgnoreArg_xFunctionToPend(__LINE__)
void xTimerPendFunctionCall_CMockIgnoreArg_xFunctionToPend(UNITY_LINE_TYPE cmock_line);
#define xTimerPendFunctionCall_IgnoreArg_pvParameter1() xTimerPendFunctionCall_CMockIgnoreArg_pvParameter1(__LINE__)
void xTimerPendFunctionCall_CMockIgnoreArg_pvParameter1(UNITY_LINE_TYPE cmock_line);
#define xTimerPendFunctionCall_IgnoreArg_ulParameter2() xTimerPendFunctionCall_CMockIgnoreArg_ulParameter2(__LINE__)
void xTimerPendFunctionCall_CMockIgnoreArg_ulParameter2(UNITY_LINE_TYPE cmock_line);
#define xTimerPendFunctionCall_IgnoreArg_xTicksToWait() xTimerPendFunctionCall_CMockIgnoreArg_xTicksToWait(__LINE__)
void xTimerPendFunctionCall_CMockIgnoreArg_xTicksToWait(UNITY_LINE_TYPE cmock_line);
#define pcTimerGetName_IgnoreAndReturn(cmock_retval) pcTimerGetName_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void pcTimerGetName_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, const char* cmock_to_return);
#define pcTimerGetName_ExpectAnyArgsAndReturn(cmock_retval) pcTimerGetName_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void pcTimerGetName_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, const char* cmock_to_return);
#define pcTimerGetName_ExpectAndReturn(xTimer, cmock_retval) pcTimerGetName_CMockExpectAndReturn(__LINE__, xTimer, cmock_retval)
void pcTimerGetName_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TimerHandle_t xTimer, const char* cmock_to_return);
#define pcTimerGetName_IgnoreArg_xTimer() pcTimerGetName_CMockIgnoreArg_xTimer(__LINE__)
void pcTimerGetName_CMockIgnoreArg_xTimer(UNITY_LINE_TYPE cmock_line);
#define vTimerSetReloadMode_Ignore() vTimerSetReloadMode_CMockIgnore()
void vTimerSetReloadMode_CMockIgnore(void);
#define vTimerSetReloadMode_ExpectAnyArgs() vTimerSetReloadMode_CMockExpectAnyArgs(__LINE__)
void vTimerSetReloadMode_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vTimerSetReloadMode_Expect(xTimer, uxAutoReload) vTimerSetReloadMode_CMockExpect(__LINE__, xTimer, uxAutoReload)
void vTimerSetReloadMode_CMockExpect(UNITY_LINE_TYPE cmock_line, TimerHandle_t xTimer, const UBaseType_t uxAutoReload);
#define vTimerSetReloadMode_IgnoreArg_xTimer() vTimerSetReloadMode_CMockIgnoreArg_xTimer(__LINE__)
void vTimerSetReloadMode_CMockIgnoreArg_xTimer(UNITY_LINE_TYPE cmock_line);
#define vTimerSetReloadMode_IgnoreArg_uxAutoReload() vTimerSetReloadMode_CMockIgnoreArg_uxAutoReload(__LINE__)
void vTimerSetReloadMode_CMockIgnoreArg_uxAutoReload(UNITY_LINE_TYPE cmock_line);
#define xTimerGetPeriod_IgnoreAndReturn(cmock_retval) xTimerGetPeriod_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTimerGetPeriod_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, TickType_t cmock_to_return);
#define xTimerGetPeriod_ExpectAnyArgsAndReturn(cmock_retval) xTimerGetPeriod_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xTimerGetPeriod_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, TickType_t cmock_to_return);
#define xTimerGetPeriod_ExpectAndReturn(xTimer, cmock_retval) xTimerGetPeriod_CMockExpectAndReturn(__LINE__, xTimer, cmock_retval)
void xTimerGetPeriod_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TimerHandle_t xTimer, TickType_t cmock_to_return);
#define xTimerGetPeriod_IgnoreArg_xTimer() xTimerGetPeriod_CMockIgnoreArg_xTimer(__LINE__)
void xTimerGetPeriod_CMockIgnoreArg_xTimer(UNITY_LINE_TYPE cmock_line);
#define xTimerGetExpiryTime_IgnoreAndReturn(cmock_retval) xTimerGetExpiryTime_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTimerGetExpiryTime_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, TickType_t cmock_to_return);
#define xTimerGetExpiryTime_ExpectAnyArgsAndReturn(cmock_retval) xTimerGetExpiryTime_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xTimerGetExpiryTime_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, TickType_t cmock_to_return);
#define xTimerGetExpiryTime_ExpectAndReturn(xTimer, cmock_retval) xTimerGetExpiryTime_CMockExpectAndReturn(__LINE__, xTimer, cmock_retval)
void xTimerGetExpiryTime_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TimerHandle_t xTimer, TickType_t cmock_to_return);
#define xTimerGetExpiryTime_IgnoreArg_xTimer() xTimerGetExpiryTime_CMockIgnoreArg_xTimer(__LINE__)
void xTimerGetExpiryTime_CMockIgnoreArg_xTimer(UNITY_LINE_TYPE cmock_line);
#define xTimerCreateTimerTask_IgnoreAndReturn(cmock_retval) xTimerCreateTimerTask_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTimerCreateTimerTask_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTimerCreateTimerTask_ExpectAndReturn(cmock_retval) xTimerCreateTimerTask_CMockExpectAndReturn(__LINE__, cmock_retval)
void xTimerCreateTimerTask_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTimerGenericCommand_IgnoreAndReturn(cmock_retval) xTimerGenericCommand_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTimerGenericCommand_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTimerGenericCommand_ExpectAnyArgsAndReturn(cmock_retval) xTimerGenericCommand_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void xTimerGenericCommand_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xTimerGenericCommand_ExpectAndReturn(xTimer, xCommandID, xOptionalValue, pxHigherPriorityTaskWoken, xTicksToWait, cmock_retval) xTimerGenericCommand_CMockExpectAndReturn(__LINE__, xTimer, xCommandID, xOptionalValue, pxHigherPriorityTaskWoken, xTicksToWait, cmock_retval)
void xTimerGenericCommand_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_t xOptionalValue, BaseType_t* const pxHigherPriorityTaskWoken, const TickType_t xTicksToWait, BaseType_t cmock_to_return);
#define xTimerGenericCommand_ExpectWithArrayAndReturn(xTimer, xCommandID, xOptionalValue, pxHigherPriorityTaskWoken, pxHigherPriorityTaskWoken_Depth, xTicksToWait, cmock_retval) xTimerGenericCommand_CMockExpectWithArrayAndReturn(__LINE__, xTimer, xCommandID, xOptionalValue, pxHigherPriorityTaskWoken, pxHigherPriorityTaskWoken_Depth, xTicksToWait, cmock_retval)
void xTimerGenericCommand_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_t xOptionalValue, BaseType_t* const pxHigherPriorityTaskWoken, int pxHigherPriorityTaskWoken_Depth, const TickType_t xTicksToWait, BaseType_t cmock_to_return);
#define xTimerGenericCommand_IgnoreArg_xTimer() xTimerGenericCommand_CMockIgnoreArg_xTimer(__LINE__)
void xTimerGenericCommand_CMockIgnoreArg_xTimer(UNITY_LINE_TYPE cmock_line);
#define xTimerGenericCommand_IgnoreArg_xCommandID() xTimerGenericCommand_CMockIgnoreArg_xCommandID(__LINE__)
void xTimerGenericCommand_CMockIgnoreArg_xCommandID(UNITY_LINE_TYPE cmock_line);
#define xTimerGenericCommand_IgnoreArg_xOptionalValue() xTimerGenericCommand_CMockIgnoreArg_xOptionalValue(__LINE__)
void xTimerGenericCommand_CMockIgnoreArg_xOptionalValue(UNITY_LINE_TYPE cmock_line);
#define xTimerGenericCommand_IgnoreArg_pxHigherPriorityTaskWoken() xTimerGenericCommand_CMockIgnoreArg_pxHigherPriorityTaskWoken(__LINE__)
void xTimerGenericCommand_CMockIgnoreArg_pxHigherPriorityTaskWoken(UNITY_LINE_TYPE cmock_line);
#define xTimerGenericCommand_IgnoreArg_xTicksToWait() xTimerGenericCommand_CMockIgnoreArg_xTicksToWait(__LINE__)
void xTimerGenericCommand_CMockIgnoreArg_xTicksToWait(UNITY_LINE_TYPE cmock_line);
#define vTimerSetTimerNumber_Ignore() vTimerSetTimerNumber_CMockIgnore()
void vTimerSetTimerNumber_CMockIgnore(void);
#define vTimerSetTimerNumber_ExpectAnyArgs() vTimerSetTimerNumber_CMockExpectAnyArgs(__LINE__)
void vTimerSetTimerNumber_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vTimerSetTimerNumber_Expect(xTimer, uxTimerNumber) vTimerSetTimerNumber_CMockExpect(__LINE__, xTimer, uxTimerNumber)
void vTimerSetTimerNumber_CMockExpect(UNITY_LINE_TYPE cmock_line, TimerHandle_t xTimer, UBaseType_t uxTimerNumber);
#define vTimerSetTimerNumber_IgnoreArg_xTimer() vTimerSetTimerNumber_CMockIgnoreArg_xTimer(__LINE__)
void vTimerSetTimerNumber_CMockIgnoreArg_xTimer(UNITY_LINE_TYPE cmock_line);
#define vTimerSetTimerNumber_IgnoreArg_uxTimerNumber() vTimerSetTimerNumber_CMockIgnoreArg_uxTimerNumber(__LINE__)
void vTimerSetTimerNumber_CMockIgnoreArg_uxTimerNumber(UNITY_LINE_TYPE cmock_line);
#define uxTimerGetTimerNumber_IgnoreAndReturn(cmock_retval) uxTimerGetTimerNumber_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void uxTimerGetTimerNumber_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, UBaseType_t cmock_to_return);
#define uxTimerGetTimerNumber_ExpectAnyArgsAndReturn(cmock_retval) uxTimerGetTimerNumber_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void uxTimerGetTimerNumber_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, UBaseType_t cmock_to_return);
#define uxTimerGetTimerNumber_ExpectAndReturn(xTimer, cmock_retval) uxTimerGetTimerNumber_CMockExpectAndReturn(__LINE__, xTimer, cmock_retval)
void uxTimerGetTimerNumber_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TimerHandle_t xTimer, UBaseType_t cmock_to_return);
#define uxTimerGetTimerNumber_IgnoreArg_xTimer() uxTimerGetTimerNumber_CMockIgnoreArg_xTimer(__LINE__)
void uxTimerGetTimerNumber_CMockIgnoreArg_xTimer(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
