cmake_minimum_required(VERSION 3.11.1)

project(common C)

add_library(${PROJECT_NAME} SS_common.c)

set(SS_COMMON_DIR ${CMAKE_CURRENT_SOURCE_DIR})

get_directory_property(COMPILE_DEFS COMPILE_DEFINITIONS)

if(COMPILE_DEFS MATCHES SS_USE_FIFO)
    add_subdirectory(../SS-common/fifo fifo)
    target_link_libraries(${PROJECT_NAME} PUBLIC fifo)
endif()
if(COMPILE_DEFS MATCHES SS_USE_DYNAMIXEL)
    add_subdirectory(../SS-common/dynamixel dynamixel)
    target_link_libraries(${PROJECT_NAME} PUBLIC dynamixel)
endif()
if(COMPILE_DEFS MATCHES SS_USE_COM)
    add_subdirectory(../SS-common/com com)
    target_link_libraries(${PROJECT_NAME} PUBLIC com)
endif()
if(COMPILE_DEFS MATCHES SS_USE_SERVOS)
    add_subdirectory(../SS-common/servos servos)
    target_link_libraries(${PROJECT_NAME} PUBLIC servos)
endif()
if(COMPILE_DEFS MATCHES SS_USE_ADS1258)
    add_subdirectory(../SS-common/ADS1258 ADS1258)
    target_link_libraries(${PROJECT_NAME} PUBLIC ADS1258)
endif()
if(COMPILE_DEFS MATCHES SS_USE_ADC)
    add_subdirectory(../SS-common/adc adc)
    target_link_libraries(${PROJECT_NAME} PUBLIC adc)
endif()
if(COMPILE_DEFS MATCHES SS_USE_GRAZYNA)
    add_subdirectory(../SS-common/grazyna grazyna)
    target_link_libraries(${PROJECT_NAME} PUBLIC grazyna)
endif()
if(COMPILE_DEFS MATCHES SS_USE_SUPPLY)
    add_subdirectory(../SS-common/supply supply)
    target_link_libraries(${PROJECT_NAME} PUBLIC supply)
endif()
if(COMPILE_DEFS MATCHES SS_USE_MUTEX)
    add_subdirectory(../SS-common/mutex mutex)
    target_link_libraries(${PROJECT_NAME} PUBLIC mutex)
endif()
if(COMPILE_DEFS MATCHES SS_USE_RELAYS)
    add_subdirectory(../SS-common/relays relays)
    target_link_libraries(${PROJECT_NAME} PUBLIC relays)
endif()
if(COMPILE_DEFS MATCHES SS_USE_S25FL)
    add_subdirectory(../SS-common/s25fl s25fl)
    target_link_libraries(${PROJECT_NAME} PUBLIC s25fl)
endif()
